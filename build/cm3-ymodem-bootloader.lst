
build/cm3-ymodem-bootloader.elf:     file format elf32-littlearm
build/cm3-ymodem-bootloader.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20000191

Program Header:
0x70000001 off    0x00019240 vaddr 0x20009240 paddr 0x20009240 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00009c20 memsz 0x00010000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .vector_table   00000190  20000000  20000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .boot_code      00000320  20000190  20000190  00010190  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text           00008d90  200004b0  200004b0  000104b0  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM.exidx      00000008  20009240  20009240  00019240  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .data           000009d0  20009250  20009250  00019250  2**4  CONTENTS, ALLOC, LOAD, DATA
  5 .bss            00000c60  20009c20  20009c20  00019c20  2**4  ALLOC
  6 .heap           00004780  2000a880  2000a880  00019c20  2**4  ALLOC
  7 .stack          00001000  2000f000  2000f000  00019c20  2**4  ALLOC
  8 .debug_aranges  000005e8  00000000  00000000  00019c20  2**3  CONTENTS, READONLY, DEBUGGING
  9 .debug_info     0000d832  00000000  00000000  0001a208  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev   00002199  00000000  00000000  00027a3a  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_line     00006456  00000000  00000000  00029bd3  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame    00002784  00000000  00000000  0003002c  2**2  CONTENTS, READONLY, DEBUGGING
 13 .debug_str      0001896b  00000000  00000000  000327b0  2**0  CONTENTS, READONLY, DEBUGGING
 14 .ARM.attributes 00000029  00000000  00000000  0004b11b  2**0  CONTENTS, READONLY
 15 .debug_macro    00006985  00000000  00000000  0004b144  2**0  CONTENTS, READONLY, DEBUGGING
 16 .comment        00000066  00000000  00000000  00051ac9  2**0  CONTENTS, READONLY
 17 .debug_ranges   000004b8  00000000  00000000  00051b2f  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20000000 l    d  .vector_table	00000000 .vector_table
20000190 l    d  .boot_code	00000000 .boot_code
200004b0 l    d  .text	00000000 .text
20009240 l    d  .ARM.exidx	00000000 .ARM.exidx
20009250 l    d  .data	00000000 .data
20009c20 l    d  .bss	00000000 .bss
2000a880 l    d  .heap	00000000 .heap
2000f000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 build/platform/CMSIS/startup_gcc/startup_m2sxxx.o
20000190 l       .boot_code	00000000 _start
20000456 l       .boot_code	00000000 SF2_MDDR_MODE_CR
20000452 l       .boot_code	00000000 SF2_EDAC_CR
200001b0 l       .boot_code	00000000 check_esram_edac
200001b8 l       .boot_code	00000000 check_stack_init
200001ca l       .boot_code	00000000 system_init
200001be l       .boot_code	00000000 clear_stack
20000436 l       .boot_code	00000000 RAM_INIT_PATTERN
20000308 l       .boot_code	00000000 fill_memory
200001f2 l       .boot_code	00000000 remap_memory
2000044a l       .boot_code	00000000 SF2_DDRB_NB_SIZE
2000044e l       .boot_code	00000000 SF2_DDRB_CR
20000212 l       .boot_code	00000000 check_esram_remap
2000043e l       .boot_code	00000000 SF2_ESRAM_CR
20000446 l       .boot_code	00000000 SF2_ENVM_REMAP_CR
20000442 l       .boot_code	00000000 SF2_DDR_CR
20000228 l       .boot_code	00000000 check_mirrored_nvm
20000242 l       .boot_code	00000000 copy_data
20000298 l       .boot_code	00000000 block_copy
20000238 l       .boot_code	00000000 copy_text
2000024c l       .boot_code	00000000 clear_bss
20000258 l       .boot_code	00000000 clear_heap
20000280 l       .boot_code	00000000 call_glob_ctor
2000043a l       .boot_code	00000000 HEAP_INIT_PATTERN
2000028a l       .boot_code	00000000 branch_to_main
20000296 l       .boot_code	00000000 ExitLoop
200002ec l       .boot_code	00000000 block_copy_exit
200002a8 l       .boot_code	00000000 block_copy_address_ok
200002b8 l       .boot_code	00000000 block_copy_continue
200002b2 l       .boot_code	00000000 block_copy_byte_copy
200002f0 l       .boot_code	00000000 block_copy_byte
200002c2 l       .boot_code	00000000 block_copy_loop
200002da l       .boot_code	00000000 copy_spare_bytes
200002f6 l       .boot_code	00000000 block_copy_byte_loop
2000037c l       .boot_code	00000000 fill_memory_exit
2000033e l       .boot_code	00000000 fill_memory_end_start
2000032a l       .boot_code	00000000 fill_memory_spare_bytes_start
20000362 l       .boot_code	00000000 fill_memory_spare_bytes_end
20000354 l       .boot_code	00000000 fill_memory_loop
20000366 l       .boot_code	00000000 fill_memory_spare_end_loop
00000000 l    df *ABS*	00000000 crtstuff.c
20009218 l     O .text	00000000 __EH_FRAME_BEGIN__
200004b0 l     F .text	00000000 __do_global_dtors_aux
20009c20 l     O .bss	00000000 completed.8911
20009238 l     O .text	00000000 __do_global_dtors_aux_fini_array_entry
200004d4 l     F .text	00000000 frame_dummy
20009c24 l     O .bss	00000000 object.8916
20009234 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 system_m2sxxx.c
20000870 l     F .text	00000022 silicon_workarounds
2000073e l     F .text	000000ea config_ddr_subsys
20000664 l     F .text	0000003c get_rcosc_25_50mhz_frequency
200006a0 l     F .text	0000005c set_clock_frequency_globals
200006fc l     F .text	00000042 copy_cfg16_to_regs
20000828 l     F .text	00000048 get_silicon_revision
20000894 l     F .text	00000030 m2s050_rev_a_workarounds
00000000 l    df *ABS*	00000000 newlib_stubs.c
20009c3c l     O .bss	00000004 g_stdio_uart_init_done
20009c40 l     O .bss	00000008 g_stdio_uart
20009c48 l     O .bss	00000004 heap_end.7415
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 hw_init.c
00000000 l    df *ABS*	00000000 core_uart_apb.c
00000000 l    df *ABS*	00000000 core_gpio.c
00000000 l    df *ABS*	00000000 core_spi.c
2000163c l     F .text	00000048 recover_from_rx_overflow
00000000 l    df *ABS*	00000000 sst26vf.c
20001904 l     F .text	00000038 wait_ready
200017f0 l     F .text	00000038 write_enable
20001724 l     F .text	000000cc write_cmd_data
00000000 l    df *ABS*	00000000 spi_flash.c
00000000 l    df *ABS*	00000000 delay.c
20001de8 l     F .text	00000054 NVIC_SetPriority
20001e3c l     F .text	00000044 SysTick_Config
00000000 l    df *ABS*	00000000 uart_stdio.c
20008f1c l     O .text	00000010 hex_symbols.5042
20008f2c l     O .text	00000010 hex_symbols.5084
00000000 l    df *ABS*	00000000 uart_hexview.c
00000000 l    df *ABS*	00000000 ymodem.c
20002318 l     F .text	0000003c _sleep
20002354 l     F .text	000000c4 _getchar
20002440 l     F .text	0000005e str_to_u32
200024a0 l     F .text	000001b2 receive_packet
20009c4c l     O .bss	00000405 packet_data.7298
00000000 l    df *ABS*	00000000 build/middleware/boot/bx_user_code_ddr.o
a0000000 l       *ABS*	00000000 VECTOR_TABLE_ADDR
e000ed08 l       *ABS*	00000000 SCB_VTOR_ADDRESS
fffffffe l       *ABS*	00000000 THUMB_BIT_MASK
40038008 l       *ABS*	00000000 DDR_CR_REG
00000000 l    df *ABS*	00000000 build/platform/hal/CortexM3/GNU/hw_reg_access.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen-stub.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
20005234 l     F .text	00000088 __sbprintf
20008fd8 l     O .text	00000010 blanks.7366
20008fe8 l     O .text	00000010 zeroes.7367
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
2000538c l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 dtoa.c
200053ac l     F .text	00000120 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
200064e8 l     F .text	00000050 std
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
200090f8 l     O .text	0000000c p05.6115
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_frexp.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
20007ef4 l     F .text	00000076 __sprint_r.part.0
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 sys_config.c
00000000 l    df *ABS*	00000000 impure.c
20009278 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 c:/microchip/softconsole-v2021.1/arm-none-eabi-gcc/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/crti.o
00000000 l    df *ABS*	00000000 c:/microchip/softconsole-v2021.1/arm-none-eabi-gcc/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/crtn.o
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
2000923c l       .text	00000000 __fini_array_end
20009238 l       .text	00000000 __fini_array_start
20009238 l       .text	00000000 __init_array_end
20009230 l       .text	00000000 __preinit_array_end
20009230 l       .text	00000000 __init_array_start
20009230 l       .text	00000000 __preinit_array_start
2000855c g     F .text	0000002c .hidden __aeabi_dcmpun
20008290 g     F .text	00000024 _isatty_r
20008520 g     F .text	00000012 .hidden __aeabi_dcmple
20000a74 g     F .text	00000014 display_prompt
20002418 g     F .text	00000028 _putchar
2000925c g     O .data	00000004 g_FrequencyPCLK2
200034ac g     F .text	0000009c _puts_r
2000845c g     F .text	0000007a .hidden __cmpdf2
2000a7f8 g     O .bss	00000008 g_gpio
200082c0 g     F .text	0000002c _lseek_r
2000038a  w    F .boot_code	00000000 DebugMon_Handler
2000845c g     F .text	0000007a .hidden __eqdf2
20009264 g     O .data	00000004 g_FrequencyFIC1
20002e30 g     F .text	0000005a .hidden __floatdidf
20000398  w    F .boot_code	00000000 I2C0_IRQHandler
20003484 g     F .text	00000028 printf
200003ec  w    F .boot_code	00000000 FabricIrq12_IRQHandler
2000a858 g     O .bss	00000001 __lock___atexit_recursive_mutex
200083f4 g     F .text	0000003c _wcrtomb_r
20000000 g       *ABS*	00000000 __vector_table_load
20000e7c g     F .text	000000c0 UART_get_rx
20007ecc g     F .text	00000020 __sseek
20006544 g     F .text	0000005c __sinit
20008344 g     F .text	000000b0 __swbuf_r
20000380  w    F .boot_code	00000000 HardFault_Handler
2000a088 g     O .bss	000003a4 spi_dir
20007388 g     F .text	0000000c __malloc_unlock
20009250 g       *ABS*	00000000 __data_load
2000926c g     O .data	00000004 g_ddr_upload_ptr
20000a88 g     F .text	0000018c menu
20001e80 g     F .text	00000038 SysTick_Handler
2000a85c g     O .bss	00000001 __lock___arc4random_mutex
20002b08 g     F .text	00000000 HW_get_8bit_reg_field
200072a8 g     F .text	000000d4 memmove
20009250 g       *ABS*	00000000 _sidata
2000038c  w    F .boot_code	00000000 PendSV_Handler
2000037e  w    F .boot_code	00000000 NMI_Handler
20007394 g     F .text	0000004c _Balloc
20009248 g       .ARM.exidx	00000000 __exidx_end
20009270 g     O .data	00000004 g_ddr_boot_ptr
2000039e  w    F .boot_code	00000000 I2C1_IRQHandler
200003a6  w    F .boot_code	00000000 UART1_IRQHandler
2000844c g     F .text	0000008a .hidden __gtdf2
200096a0 g     O .data	00000004 __atexit_recursive_mutex
200003fe  w    F .boot_code	00000000 GPIO5_IRQHandler
20008264 g     F .text	0000002c _fstat_r
20001a28 g     F .text	000000f8 spi_print_dir
2000a87c g     O .bss	00000004 errno
20009248 g       .ARM.exidx	00000000 _etext
20009c20 g       .bss	00000000 _sbss
20002a84 g     F .text	00000000 HW_set_32bit_reg
200084e8 g     F .text	00000010 .hidden __aeabi_cdcmple
200003be  w    F .boot_code	00000000 PLL_LockLost_IRQHandler
200004b0 g       .text	00000000 __text_start
20000430  w    F .boot_code	00000000 GPIO30_IRQHandler
20001c88 g     F .text	00000050 clear_spi_file_sys
200003a4  w    F .boot_code	00000000 UART0_IRQHandler
200003cc  w    F .boot_code	00000000 MDDR_IOCalib_IRQHandler
200032f8 g     F .text	000000ec memcpy
200084d8 g     F .text	00000020 .hidden __aeabi_cdrcmple
20001610 g     F .text	0000002c SPI_enable
2000040c  w    F .boot_code	00000000 GPIO12_IRQHandler
20006538 g     F .text	0000000c _cleanup_r
20002db8 g     F .text	00000022 .hidden __floatsidf
2000042c  w    F .boot_code	00000000 GPIO28_IRQHandler
20008454 g     F .text	00000082 .hidden __ltdf2
20000424  w    F .boot_code	00000000 GPIO24_IRQHandler
20001fe0 g     F .text	00000042 uart_print
2000039a  w    F .boot_code	00000000 I2C0_SMBAlert_IRQHandler
20000190 g       .vector_table	00000000 _evector_table
200085d8 g     F .text	00000000 .hidden __aeabi_uldivmod
20002654 g     F .text	000003fe ymodem_download_file_spi_flash
20003548 g     F .text	00000010 puts
2000199c g     F .text	00000060 spi_flash_write_file
20009250 g     O .data	00000004 SystemCoreClock
2000a800 g     O .bss	00000008 g_uart
20002aec g     F .text	00000000 HW_set_8bit_reg_field
200008e4 g     F .text	0000001e _fstat
20009030 g     O .text	000000c8 __mprec_tens
20000386  w    F .boot_code	00000000 UsageFault_Handler
200003b2  w    F .boot_code	00000000 ENVM0_IRQHandler
20001684 g     F .text	00000060 spi_flash_read
20000400  w    F .boot_code	00000000 GPIO6_IRQHandler
00010000 g       *ABS*	00000000 RAM_SIZE
2000a084 g     O .bss	00000004 __malloc_top_pad
20009c20 g       .bss	00000000 __bss_start__
20000c14 g     F .text	00000014 print_help
20002d98 g     F .text	0000001e .hidden __aeabi_ui2d
20006bc4 g     F .text	00000008 _localeconv_r
200012b4 g     F .text	0000035c SPI_transfer_block
00000000 g       *ABS*	00000000 __DYNAMIC
20007510 g     F .text	00000012 __i2b
20006890 g     F .text	000002ec __sfvwrite_r
20009250 g       .data	00000000 _sdata
20000396  w    F .boot_code	00000000 SPI1_IRQHandler
20008608 g     F .text	000002c4 .hidden __udivmoddi4
20002b14 g     F .text	00000000 .hidden __aeabi_drsub
20007e44 g     F .text	00000024 _sbrk_r
20000426  w    F .boot_code	00000000 GPIO25_IRQHandler
200003f2  w    F .boot_code	00000000 FabricIrq15_IRQHandler
20008318 g     F .text	0000002c _read_r
2000850c g     F .text	00000012 .hidden __aeabi_dcmplt
20008090 g     F .text	000000cc _fclose_r
200003f6  w    F .boot_code	00000000 GPIO1_IRQHandler
200003b0  w    F .boot_code	00000000 CAN_IRQHandler
200088d4 g     O .text	0000010a g_m2s_mddr_subsys_config
2000a07c g     O .bss	00000004 __malloc_max_sbrked_mem
20002ddc g     F .text	00000042 .hidden __extendsfdf2
20001b20 g     F .text	000000a8 spi_add_file_to_dir
200030e0 g     F .text	000001d0 .hidden __aeabi_ddiv
200003e8  w    F .boot_code	00000000 FabricIrq10_IRQHandler
20002b20 g     F .text	00000276 .hidden __adddf3
200003c6  w    F .boot_code	00000000 HPDMA_Complete_IRQHandler
20000416  w    F .boot_code	00000000 GPIO17_IRQHandler
20009240 g       .text	00000000 __exidx_start
2000a860 g     O .bss	00000001 __lock___env_recursive_mutex
20002e8c g     F .text	00000254 .hidden __aeabi_dmul
20000902 g     F .text	00000014 _isatty
2000a864 g     O .bss	00000001 __lock___sinit_recursive_mutex
00001000 g       *ABS*	00000000 MAIN_STACK_SIZE
20008f8c g     O .text	00000004 _global_impure_ptr
20002168 g     F .text	00000060 print_ascii_line
2000118c g     F .text	00000092 SPI_set_slave_select
200079f4 g     F .text	000003e0 _realloc_r
200032b0 g     F .text	00000048 __libc_init_array
20000406  w    F .boot_code	00000000 GPIO9_IRQHandler
200003c0  w    F .boot_code	00000000 CommSwitchError_IRQHandler
200081fc g     F .text	00000066 _fputwc_r
20009008 g     O .text	00000028 __mprec_bigtens
20002d98 g     F .text	0000001e .hidden __floatunsidf
200009ac g     F .text	0000009c _sbrk
20001828 g     F .text	000000dc spi_flash_write
200077d8 g     F .text	0000003a __mcmp
20009268 g     O .data	00000004 g_FrequencyFIC64
20000422  w    F .boot_code	00000000 GPIO23_IRQHandler
200016e4 g     F .text	00000040 spi_flash_global_unprotect
2000a808 g     O .bss	00000048 g_spi_0
20009218 g     F .text	00000000 _init
20002ae4 g     F .text	00000000 HW_set_8bit_reg
20002ae8 g     F .text	00000000 HW_get_8bit_reg
2000042e  w    F .boot_code	00000000 GPIO29_IRQHandler
200003d8  w    F .boot_code	00000000 FabricIrq2_IRQHandler
200065b8 g     F .text	0000002c __libc_fini_array
2000a880 g       .bss	00000000 _ebss
20000418  w    F .boot_code	00000000 GPIO18_IRQHandler
200020c8 g     F .text	00000040 print_hex_header
20000190 g     F .boot_code	00000000 Reset_Handler
20000000 g       .vector_table	00000000 __vector_table_vma_base_address
20007470 g     F .text	00000040 __hi0bits
200019fc g     F .text	0000002a spi_flash_read_file
20008588 g     F .text	0000004e .hidden __fixdfsi
200003a0  w    F .boot_code	00000000 I2C1_SMBAlert_IRQHandler
2000040a  w    F .boot_code	00000000 GPIO11_IRQHandler
2000a868 g     O .bss	00000001 __lock___malloc_recursive_mutex
200003c8  w    F .boot_code	00000000 HPDMA_Error_IRQHandler
20001d40 g     F .text	00000084 spi_file_display
20002a8c g     F .text	00000000 HW_set_32bit_reg_field
20001f58 g     F .text	00000030 uart_getchar
00001000 g       *ABS*	00000000 MIN_SIZE_HEAP
00000000 g       *ABS*	00000000 __smartfusion2_memory_remap
20002b20 g     F .text	00000276 .hidden __aeabi_dadd
20008454 g     F .text	00000082 .hidden __ledf2
20000390  w    F .boot_code	00000000 WdogWakeup_IRQHandler
20007668 g     F .text	000000a0 __pow5mult
20002e20 g     F .text	0000006a .hidden __aeabi_ul2d
20009254 g     O .data	00000004 g_FrequencyPCLK0
20002108 g     F .text	00000060 print_hex_line
20006bd8 g     F .text	00000002 __retarget_lock_release_recursive
200003ba  w    F .boot_code	00000000 USB_DMA_IRQHandler
20008548 g     F .text	00000012 .hidden __aeabi_dcmpgt
200003ae  w    F .boot_code	00000000 Timer2_IRQHandler
200003f8  w    F .boot_code	00000000 GPIO2_IRQHandler
200065a0 g     F .text	0000000c __sfp_lock_acquire
20007228 g     F .text	0000007e memchr
2000a880 g       .bss	00000000 __bss_end__
20006684 g     F .text	0000020c _free_r
200082b4 g     F .text	0000000c __locale_mb_cur_max
20008534 g     F .text	00000012 .hidden __aeabi_dcmpge
20000dfe g     F .text	0000007e UART_send
20002b1c g     F .text	0000027a .hidden __aeabi_dsub
2000207c g     F .text	0000004c print_hex_digit
200003ea  w    F .boot_code	00000000 FabricIrq11_IRQHandler
20009aac g     O .data	00000004 __malloc_sbrk_base
2000a880 g       .bss	00000000 __end
20001cd8 g     F .text	00000068 spi_file_download
20002e20 g     F .text	0000006a .hidden __floatundidf
20000916 g     F .text	00000018 _lseek
20007708 g     F .text	000000d0 __lshift
200003d4  w    F .boot_code	00000000 FabricIrq0_IRQHandler
20007f80 g     F .text	0000008c __register_exitproc
200003bc  w    F .boot_code	00000000 PLL_Lock_IRQHandler
20007524 g     F .text	00000142 __multiply
200003a8  w    F .boot_code	00000000 EthernetMAC_IRQHandler
200035b4 g     F .text	00000068 strncpy
2000a054 g     O .bss	00000028 __malloc_current_mallinfo
2000794c g     F .text	000000a8 __d2b
20001dc4 g     F .text	00000024 print_spi_file_info
20002aa8 g     F .text	00000000 HW_get_32bit_reg_field
2000806c g     F .text	00000024 _close_r
20002db8 g     F .text	00000022 .hidden __aeabi_i2d
200003c4  w    F .boot_code	00000000 DDR_IRQHandler
20006bd0 g     F .text	00000002 __retarget_lock_close_recursive
00000000 g       *ABS*	00000000 __mirrored_nvm
200003b8  w    F .boot_code	00000000 USB_IRQHandler
20001bc8 g     F .text	000000c0 init_spi_file_sys
20000f3c g     F .text	000000d6 GPIO_init
200052bc g     F .text	000000d0 __swsetup_r
200088cc  w    F .text	00000002 .hidden __aeabi_ldiv0
20001122 g     F .text	0000006a SPI_configure_master_mode
200030e0 g     F .text	000001d0 .hidden __divdf3
20009260 g     O .data	00000004 g_FrequencyFIC0
200096a4 g     O .data	00000408 __malloc_av_
200003ac  w    F .boot_code	00000000 Timer1_IRQHandler
20002e8c g     F .text	00000254 .hidden __muldf3
20001fac g     F .text	00000034 uart_getc
20007e68 g     F .text	00000022 __sread
20000000 g       .vector_table	00000000 __vector_table_start
200003fa  w    F .boot_code	00000000 GPIO3_IRQHandler
2000a850 g     O .bss	00000004 g_10ms_count
2000737c g     F .text	0000000c __malloc_lock
200003da  w    F .boot_code	00000000 FabricIrq3_IRQHandler
2000648c g     F .text	0000005a _fflush_r
20000000 g       *ABS*	00000000 RAM_START_ADDRESS
2000800c g     F .text	0000005e _calloc_r
20006bd4 g     F .text	00000002 __retarget_lock_acquire_recursive
200022a8 g     F .text	00000070 sf2bl_crc16
200033e4 g     F .text	000000a0 memset
20000382  w    F .boot_code	00000000 MemManage_Handler
20000a48 g     F .text	0000002c main
20001efc g     F .text	0000005c delay_ms
2000a080 g     O .bss	00000004 __malloc_max_total_mem
20000c28 g     F .text	000000c8 hw_init
20006bcc g     F .text	00000002 __retarget_lock_init_recursive
20001eb8 g     F .text	00000030 SysTick_Init
20001f88 g     F .text	00000024 uart_putc
20000388  w    F .boot_code	00000000 SVC_Handler
20007eec g     F .text	00000008 __sclose
20010000 g       *ABS*	00000000 __main_stack_start
200004b0 g       *ABS*	00000000 __text_load
200054d0 g     F .text	00000e8c _dtoa_r
20006ccc g     F .text	0000055c _malloc_r
20008430 g     F .text	0000001c __ascii_wctomb
2000a880 g       .heap	00000000 __heap_start__
20002e30 g     F .text	0000005a .hidden __aeabi_l2d
20000402  w    F .boot_code	00000000 GPIO7_IRQHandler
20002ab8 g     F .text	00000000 HW_get_16bit_reg
20009258 g     O .data	00000004 g_FrequencyPCLK1
200065e4 g     F .text	000000a0 _malloc_trim_r
2000040e  w    F .boot_code	00000000 GPIO13_IRQHandler
200004f0 g     F .text	00000074 SystemInit
2000845c g     F .text	0000007a .hidden __nedf2
20009224 g     F .text	00000000 _fini
200003e2  w    F .boot_code	00000000 FabricIrq7_IRQHandler
20000410  w    F .boot_code	00000000 GPIO14_IRQHandler
200053a0 g     F .text	0000000c atexit
20000948 g     F .text	00000064 _write_r
200003d2  w    F .boot_code	00000000 FIC64_IRQHandler
20002abc g     F .text	00000000 HW_set_16bit_reg_field
20000434  w    F .boot_code	00000000 mscc_post_hw_cfg_init
20009274 g     O .data	00000004 _impure_ptr
200003b4  w    F .boot_code	00000000 ENVM1_IRQHandler
200003c2  w    F .boot_code	00000000 CacheError_IRQHandler
2000635c g     F .text	00000130 __sflush_r
2000a854 g     O .bss	00000004 ticks
200088d0 g     O .text	00000004 g_m2s_mddr_addr
200003e0  w    F .boot_code	00000000 FabricIrq6_IRQHandler
200082ec g     F .text	0000002a __ascii_mbtowc
2000041a  w    F .boot_code	00000000 GPIO19_IRQHandler
2000a42c g     O .bss	000003cc file_list
20000404  w    F .boot_code	00000000 GPIO8_IRQHandler
20001012 g     F .text	0000004e GPIO_config
200003e6  w    F .boot_code	00000000 FabricIrq9_IRQHandler
20000428  w    F .boot_code	00000000 GPIO26_IRQHandler
20000420  w    F .boot_code	00000000 GPIO22_IRQHandler
20006bdc g     F .text	0000005c __swhatbuf_r
20010000 g       .stack	00000000 _estack
2000f000 g       .heap	00000000 _eheap
200084f8 g     F .text	00000012 .hidden __aeabi_dcmpeq
20002a60 g     F .text	00000000 bx_user_code_ddr
20000408  w    F .boot_code	00000000 GPIO10_IRQHandler
2000039c  w    F .boot_code	00000000 I2C0_SMBus_IRQHandler
20009c20 g       .data	00000000 _edata
20000394  w    F .boot_code	00000000 SPI0_IRQHandler
2000a880 g       .bss	00000000 _end
2000041c  w    F .boot_code	00000000 GPIO20_IRQHandler
2000815c g     F .text	000000a0 __fputwc
200003d6  w    F .boot_code	00000000 FabricIrq1_IRQHandler
2000a86c g     O .bss	00000001 __lock___at_quick_exit_mutex
200003dc  w    F .boot_code	00000000 FabricIrq4_IRQHandler
20001060 g     F .text	000000c2 SPI_init
20007e8c g     F .text	0000003e __swrite
200003f4  w    F .boot_code	00000000 GPIO0_IRQHandler
20009ab0 g     O .data	00000004 __malloc_trim_threshold
200003e4  w    F .boot_code	00000000 FabricIrq8_IRQHandler
20000000 g     O .vector_table	00000000 g_pfnVectors
20006b7c g     F .text	00000046 _fwalk_reent
20000564 g     F .text	00000100 SystemCoreClockUpdate
20007814 g     F .text	00000138 __mdiff
20008588 g     F .text	0000004e .hidden __aeabi_d2iz
200003aa  w    F .boot_code	00000000 DMA_IRQHandler
200021c8 g     F .text	000000e0 hex_view_spi_flash
200065ac g     F .text	0000000c __sfp_lock_release
20000cf0 g     F .text	0000010e UART_init
200003ee  w    F .boot_code	00000000 FabricIrq13_IRQHandler
20002a88 g     F .text	00000000 HW_get_32bit_reg
20009114 g     O .text	00000101 _ctype_
2000092e g     F .text	00000018 _read
200088cc  w    F .text	00000002 .hidden __aeabi_idiv0
2000855c g     F .text	0000002c .hidden __unorddf2
200008da g     F .text	0000000a _exit
2000193c g     F .text	00000060 spi_flash_erase_4k_block
20002ab4 g     F .text	00000000 HW_set_16bit_reg
200003ce  w    F .boot_code	00000000 FAB_PLL_Lock_IRQHandler
20000384  w    F .boot_code	00000000 BusFault_Handler
2000a870 g     O .bss	00000001 __lock___dd_hash_mutex
20006c38 g     F .text	00000094 __smakebuf_r
2000a874 g     O .bss	00000001 __lock___tz_mutex
20000392  w    F .boot_code	00000000 RTC_Wakeup_IRQHandler
20003558 g     F .text	0000005c strlen
200084e8 g     F .text	00000010 .hidden __aeabi_cdcmpeq
2000844c g     F .text	0000008a .hidden __gedf2
20007f6c g     F .text	00000014 __sprint_r
20002ddc g     F .text	00000042 .hidden __aeabi_f2d
20009250 g       .data	00000000 __data_start
2000041e  w    F .boot_code	00000000 GPIO21_IRQHandler
20000432  w    F .boot_code	00000000 GPIO31_IRQHandler
200003de  w    F .boot_code	00000000 FabricIrq5_IRQHandler
2000f000 g       .stack	00000000 __stack_start__
20002b1c g     F .text	0000027a .hidden __subdf3
2000361c g     F .text	00001c18 _vfprintf_r
2000121e g     F .text	00000096 SPI_clear_slave_select
200003ca  w    F .boot_code	00000000 ECC_Error_IRQHandler
200074b0 g     F .text	00000060 __lo0bits
200003b6  w    F .boot_code	00000000 ComBlk_IRQHandler
20002ad8 g     F .text	00000000 HW_get_16bit_reg_field
200003d0  w    F .boot_code	00000000 FAB_PLL_LockLost_IRQHandler
200003f0  w    F .boot_code	00000000 FabricIrq14_IRQHandler
20001ee8 g     F .text	00000014 millis
20007dd4 g     F .text	00000070 frexp
200003a2  w    F .boot_code	00000000 I2C1_SMBus_IRQHandler
20009ab4 g     O .data	0000016c __global_locale
20002024 g     F .text	00000058 print_hex_word
20000414  w    F .boot_code	00000000 GPIO16_IRQHandler
200003fc  w    F .boot_code	00000000 GPIO4_IRQHandler
2000a878 g     O .bss	00000001 __lock___sfp_recursive_mutex
2000042a  w    F .boot_code	00000000 GPIO27_IRQHandler
200008c4 g     F .text	00000016 _close
20000412  w    F .boot_code	00000000 GPIO15_IRQHandler
200073f4 g     F .text	0000007c __multadd
200073e0 g     F .text	00000012 _Bfree



Disassembly of section .vector_table:

20000000 <__vector_table_start>:
__vector_table_start():
20000000:	20010000 	.word	0x20010000
20000004:	20000191 	.word	0x20000191
20000008:	2000037f 	.word	0x2000037f
2000000c:	20000381 	.word	0x20000381
20000010:	20000383 	.word	0x20000383
20000014:	20000385 	.word	0x20000385
20000018:	20000387 	.word	0x20000387
	...
2000002c:	20000389 	.word	0x20000389
20000030:	2000038b 	.word	0x2000038b
20000034:	00000000 	.word	0x00000000
20000038:	2000038d 	.word	0x2000038d
2000003c:	20001e81 	.word	0x20001e81
20000040:	20000391 	.word	0x20000391
20000044:	20000393 	.word	0x20000393
20000048:	20000395 	.word	0x20000395
2000004c:	20000397 	.word	0x20000397
20000050:	20000399 	.word	0x20000399
20000054:	2000039b 	.word	0x2000039b
20000058:	2000039d 	.word	0x2000039d
2000005c:	2000039f 	.word	0x2000039f
20000060:	200003a1 	.word	0x200003a1
20000064:	200003a3 	.word	0x200003a3
20000068:	200003a5 	.word	0x200003a5
2000006c:	200003a7 	.word	0x200003a7
20000070:	200003a9 	.word	0x200003a9
20000074:	200003ab 	.word	0x200003ab
20000078:	200003ad 	.word	0x200003ad
2000007c:	200003af 	.word	0x200003af
20000080:	200003b1 	.word	0x200003b1
20000084:	200003b3 	.word	0x200003b3
20000088:	200003b5 	.word	0x200003b5
2000008c:	200003b7 	.word	0x200003b7
20000090:	200003b9 	.word	0x200003b9
20000094:	200003bb 	.word	0x200003bb
20000098:	200003bd 	.word	0x200003bd
2000009c:	200003bf 	.word	0x200003bf
200000a0:	200003c1 	.word	0x200003c1
200000a4:	200003c3 	.word	0x200003c3
200000a8:	200003c5 	.word	0x200003c5
200000ac:	200003c7 	.word	0x200003c7
200000b0:	200003c9 	.word	0x200003c9
200000b4:	200003cb 	.word	0x200003cb
200000b8:	200003cd 	.word	0x200003cd
200000bc:	200003cf 	.word	0x200003cf
200000c0:	200003d1 	.word	0x200003d1
200000c4:	200003d3 	.word	0x200003d3
200000c8:	200003d5 	.word	0x200003d5
200000cc:	200003d7 	.word	0x200003d7
200000d0:	200003d9 	.word	0x200003d9
200000d4:	200003db 	.word	0x200003db
200000d8:	200003dd 	.word	0x200003dd
200000dc:	200003df 	.word	0x200003df
200000e0:	200003e1 	.word	0x200003e1
200000e4:	200003e3 	.word	0x200003e3
200000e8:	200003e5 	.word	0x200003e5
200000ec:	200003e7 	.word	0x200003e7
200000f0:	200003e9 	.word	0x200003e9
200000f4:	200003eb 	.word	0x200003eb
200000f8:	200003ed 	.word	0x200003ed
200000fc:	200003ef 	.word	0x200003ef
20000100:	200003f1 	.word	0x200003f1
20000104:	200003f3 	.word	0x200003f3
20000108:	200003f5 	.word	0x200003f5
2000010c:	200003f7 	.word	0x200003f7
20000110:	200003f9 	.word	0x200003f9
20000114:	200003fb 	.word	0x200003fb
20000118:	200003fd 	.word	0x200003fd
2000011c:	200003ff 	.word	0x200003ff
20000120:	20000401 	.word	0x20000401
20000124:	20000403 	.word	0x20000403
20000128:	20000405 	.word	0x20000405
2000012c:	20000407 	.word	0x20000407
20000130:	20000409 	.word	0x20000409
20000134:	2000040b 	.word	0x2000040b
20000138:	2000040d 	.word	0x2000040d
2000013c:	2000040f 	.word	0x2000040f
20000140:	20000411 	.word	0x20000411
20000144:	20000413 	.word	0x20000413
20000148:	20000415 	.word	0x20000415
2000014c:	20000417 	.word	0x20000417
20000150:	20000419 	.word	0x20000419
20000154:	2000041b 	.word	0x2000041b
20000158:	2000041d 	.word	0x2000041d
2000015c:	2000041f 	.word	0x2000041f
20000160:	20000421 	.word	0x20000421
20000164:	20000423 	.word	0x20000423
20000168:	20000425 	.word	0x20000425
2000016c:	20000427 	.word	0x20000427
20000170:	20000429 	.word	0x20000429
20000174:	2000042b 	.word	0x2000042b
20000178:	2000042d 	.word	0x2000042d
2000017c:	2000042f 	.word	0x2000042f
20000180:	20000431 	.word	0x20000431
20000184:	20000433 	.word	0x20000433
	...

Disassembly of section .boot_code:

20000190 <Reset_Handler>:
Reset_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:150
 * cannot be located in MDDR since MDDR is not available at this point.
 * The bits of the content of register r11 have the following meaning:
 *  reg11[0]: eSRAM EDAC enabled
 *  reg11[1]: MDDR ECC/SECDED enabled
 */
    mov r11, #0
20000190:	f04f 0b00 	mov.w	fp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:151
    ldr r0, SF2_MDDR_MODE_CR
20000194:	f8df 02be 	ldr.w	r0, [pc, #702]	; 20000456 <SF2_MDDR_MODE_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:152
    ldr r0, [r0]
20000198:	6800      	ldr	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:153
    ldr r1, SF2_EDAC_CR
2000019a:	f8df 12b6 	ldr.w	r1, [pc, #694]	; 20000452 <SF2_EDAC_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:154
    ldr r1, [r1]
2000019e:	6809      	ldr	r1, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:155
    and r1, r1, #3
200001a0:	f001 0103 	and.w	r1, r1, #3
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:156
    and r0, r0, #0x1C
200001a4:	f000 001c 	and.w	r0, r0, #28
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:157
    cmp r0, #0x14
200001a8:	2814      	cmp	r0, #20
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:158
    bne check_esram_edac
200001aa:	d101      	bne.n	200001b0 <check_esram_edac>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:159
    orr r11, r11, #2
200001ac:	f04b 0b02 	orr.w	fp, fp, #2

200001b0 <check_esram_edac>:
check_esram_edac():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:161
check_esram_edac:
    cmp r1, #0
200001b0:	2900      	cmp	r1, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:162
    beq check_stack_init
200001b2:	d001      	beq.n	200001b8 <check_stack_init>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:163
    orr r11, r11, #1
200001b4:	f04b 0b01 	orr.w	fp, fp, #1

200001b8 <check_stack_init>:
check_stack_init():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:165
check_stack_init:
    cmp r11, #0
200001b8:	f1bb 0f00 	cmp.w	fp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:166
    beq system_init
200001bc:	d005      	beq.n	200001ca <system_init>

200001be <clear_stack>:
clear_stack():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:168
clear_stack:
    ldr r0, = __stack_start__
200001be:	48a7      	ldr	r0, [pc, #668]	; (2000045c <SF2_MDDR_MODE_CR+0x6>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:169
    ldr r1, =_estack
200001c0:	49a7      	ldr	r1, [pc, #668]	; (20000460 <SF2_MDDR_MODE_CR+0xa>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:170
    ldr r2, RAM_INIT_PATTERN
200001c2:	f8df 2272 	ldr.w	r2, [pc, #626]	; 20000436 <RAM_INIT_PATTERN>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:171
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
200001c6:	f000 f89f 	bl	20000308 <fill_memory>

200001ca <system_init>:
system_init():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:177
    
/*------------------------------------------------------------------------------
 * Call CMSIS system init function.
 */
 system_init:
    ldr r0, =SystemInit
200001ca:	48a6      	ldr	r0, [pc, #664]	; (20000464 <SF2_MDDR_MODE_CR+0xe>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:178
    blx r0
200001cc:	4780      	blx	r0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:184

/*------------------------------------------------------------------------------
 * Modify MDDR configuration if ECC/SECDED is enabled for MDDR.
 * Enable write combining on MDDR bridge, disable non-bufferable regions.
 */
    and r10, r11, 0x2
200001ce:	f00b 0a02 	and.w	sl, fp, #2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:185
    cmp r10, #0
200001d2:	f1ba 0f00 	cmp.w	sl, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:186
    beq remap_memory
200001d6:	d00c      	beq.n	200001f2 <remap_memory>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:187
    ldr r0, SF2_DDRB_NB_SIZE
200001d8:	f8df 026e 	ldr.w	r0, [pc, #622]	; 2000044a <SF2_DDRB_NB_SIZE>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:188
    ldr r1, SF2_DDRB_CR
200001dc:	f8df 126e 	ldr.w	r1, [pc, #622]	; 2000044e <SF2_DDRB_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:189
    ldr r2, [r0]
200001e0:	6802      	ldr	r2, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:190
    ldr r3, [r1]
200001e2:	680b      	ldr	r3, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:191
    push {r0, r1, r2, r3}
200001e4:	b40f      	push	{r0, r1, r2, r3}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:192
    mov r2, #0
200001e6:	f04f 0200 	mov.w	r2, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:193
    mov r3, #0xFF
200001ea:	f04f 03ff 	mov.w	r3, #255	; 0xff
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:194
    str r2, [r0]
200001ee:	6002      	str	r2, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:195
    str r3, [r1]
200001f0:	600b      	str	r3, [r1, #0]

200001f2 <remap_memory>:
remap_memory():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:202
/*------------------------------------------------------------------------------
 * Perform memory remapping based on the value of __smartfusion2_memory_remap
 * set in the linker script.
 */
remap_memory:
    ldr r0, =__smartfusion2_memory_remap
200001f2:	489d      	ldr	r0, [pc, #628]	; (20000468 <SF2_MDDR_MODE_CR+0x12>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:203
    ldr r2, =0
200001f4:	f04f 0200 	mov.w	r2, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:204
    ldr r3, =1
200001f8:	f04f 0301 	mov.w	r3, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:205
    cmp r0, #2
200001fc:	2802      	cmp	r0, #2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:206
    bne check_esram_remap
200001fe:	d108      	bne.n	20000212 <check_esram_remap>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:210
    /*
     * Remap external RAM to address 0x00000000
     */
    ldr r1, SF2_ESRAM_CR
20000200:	f8df 123a 	ldr.w	r1, [pc, #570]	; 2000043e <SF2_ESRAM_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:211
    str r2, [r1]
20000204:	600a      	str	r2, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:212
    ldr r1, SF2_ENVM_REMAP_CR
20000206:	f8df 123e 	ldr.w	r1, [pc, #574]	; 20000446 <SF2_ENVM_REMAP_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:213
    str r2, [r1]
2000020a:	600a      	str	r2, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:214
    ldr r1, SF2_DDR_CR
2000020c:	f8df 1232 	ldr.w	r1, [pc, #562]	; 20000442 <SF2_DDR_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:215
    str r3, [r1]
20000210:	600b      	str	r3, [r1, #0]

20000212 <check_esram_remap>:
check_esram_remap():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:217
check_esram_remap:
    cmp r0, #1
20000212:	2801      	cmp	r0, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:218
    bne check_mirrored_nvm
20000214:	d108      	bne.n	20000228 <check_mirrored_nvm>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:222
    /*
     * Remap internal eSRAM to address 0x00000000
     */
    ldr r1, SF2_DDR_CR
20000216:	f8df 122a 	ldr.w	r1, [pc, #554]	; 20000442 <SF2_DDR_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:223
    str r2, [r1]
2000021a:	600a      	str	r2, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:224
    ldr r1, SF2_ENVM_REMAP_CR
2000021c:	f8df 1226 	ldr.w	r1, [pc, #550]	; 20000446 <SF2_ENVM_REMAP_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:225
    str r2, [r1]
20000220:	600a      	str	r2, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:226
    ldr r1, SF2_ESRAM_CR
20000222:	f8df 121a 	ldr.w	r1, [pc, #538]	; 2000043e <SF2_ESRAM_CR>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:227
    str r3, [r1]
20000226:	600b      	str	r3, [r1, #0]

20000228 <check_mirrored_nvm>:
check_mirrored_nvm():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:236
 * This is done for debugging executables running out of eNVM with SoftConsole.
 * The .text section should not be copied in this case since both the LMA and
 * VMA point at the eNVM despite the LMA and VMa having different values.
 */
 check_mirrored_nvm:
    ldr r0, =__mirrored_nvm
20000228:	4890      	ldr	r0, [pc, #576]	; (2000046c <SF2_MDDR_MODE_CR+0x16>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:237
    cmp r0, #0
2000022a:	2800      	cmp	r0, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:238
    bne copy_data
2000022c:	d109      	bne.n	20000242 <copy_data>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:243
    
/*------------------------------------------------------------------------------
 * Copy vector table.
 */
    ldr r0, =__vector_table_load
2000022e:	4890      	ldr	r0, [pc, #576]	; (20000470 <SF2_MDDR_MODE_CR+0x1a>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:244
    ldr r1, =__vector_table_start
20000230:	4990      	ldr	r1, [pc, #576]	; (20000474 <SF2_MDDR_MODE_CR+0x1e>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:245
    ldr r2, =_evector_table
20000232:	4a91      	ldr	r2, [pc, #580]	; (20000478 <SF2_MDDR_MODE_CR+0x22>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:246
    bl block_copy
20000234:	f000 f830 	bl	20000298 <block_copy>

20000238 <copy_text>:
copy_text():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:252
    
/*------------------------------------------------------------------------------
 * Copy code section.
 */
copy_text:
    ldr r0, =__text_load
20000238:	4890      	ldr	r0, [pc, #576]	; (2000047c <SF2_MDDR_MODE_CR+0x26>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:253
    ldr r1, =__text_start
2000023a:	4991      	ldr	r1, [pc, #580]	; (20000480 <SF2_MDDR_MODE_CR+0x2a>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:254
    ldr r2, =_etext
2000023c:	4a91      	ldr	r2, [pc, #580]	; (20000484 <SF2_MDDR_MODE_CR+0x2e>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:255
    bl block_copy
2000023e:	f000 f82b 	bl	20000298 <block_copy>

20000242 <copy_data>:
copy_data():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:262
/*------------------------------------------------------------------------------
 * Copy data section.
 */

 copy_data:
    ldr r0, =__data_load
20000242:	4891      	ldr	r0, [pc, #580]	; (20000488 <SF2_MDDR_MODE_CR+0x32>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:263
    ldr r1, =__data_start
20000244:	4991      	ldr	r1, [pc, #580]	; (2000048c <SF2_MDDR_MODE_CR+0x36>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:264
    ldr r2, =_edata
20000246:	4a92      	ldr	r2, [pc, #584]	; (20000490 <SF2_MDDR_MODE_CR+0x3a>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:265
    bl block_copy
20000248:	f000 f826 	bl	20000298 <block_copy>

2000024c <clear_bss>:
clear_bss():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:271
    
/*------------------------------------------------------------------------------
 *  Clear .bss
 */
clear_bss:                               
    ldr r0, =__bss_start__
2000024c:	4891      	ldr	r0, [pc, #580]	; (20000494 <SF2_MDDR_MODE_CR+0x3e>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:272
    ldr r1, =__bss_end__
2000024e:	4992      	ldr	r1, [pc, #584]	; (20000498 <SF2_MDDR_MODE_CR+0x42>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:273
    ldr r2, RAM_INIT_PATTERN
20000250:	f8df 21e2 	ldr.w	r2, [pc, #482]	; 20000436 <RAM_INIT_PATTERN>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:274
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
20000254:	f000 f858 	bl	20000308 <fill_memory>

20000258 <clear_heap>:
clear_heap():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:287
 * (EDAC). We use the decision made earlier in the startup code of whether or
 * not the stack RAM should be initialized. This decision is held in register
 * r11. A non-zero value indicates that the RAM content should be initialized.
 */
clear_heap:
    cmp r11, #0
20000258:	f1bb 0f00 	cmp.w	fp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:288
    beq call_glob_ctor
2000025c:	d010      	beq.n	20000280 <call_glob_ctor>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:289
    ldr r0, =__heap_start__
2000025e:	488f      	ldr	r0, [pc, #572]	; (2000049c <SF2_MDDR_MODE_CR+0x46>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:290
    ldr r1, =_eheap
20000260:	498f      	ldr	r1, [pc, #572]	; (200004a0 <SF2_MDDR_MODE_CR+0x4a>)
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:291
    ldr r2, HEAP_INIT_PATTERN
20000262:	f8df 21d6 	ldr.w	r2, [pc, #470]	; 2000043a <HEAP_INIT_PATTERN>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:292
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
20000266:	f000 f84f 	bl	20000308 <fill_memory>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:297

/*------------------------------------------------------------------------------
 * Restore MDDR configuration.
 */
    and r10, r11, 0x2
2000026a:	f00b 0a02 	and.w	sl, fp, #2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:298
    cmp r10, #0
2000026e:	f1ba 0f00 	cmp.w	sl, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:299
    beq call_glob_ctor
20000272:	d005      	beq.n	20000280 <call_glob_ctor>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:300
    pop {r0, r1, r2, r3}
20000274:	bc0f      	pop	{r0, r1, r2, r3}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:301
    str r2, [r0]
20000276:	6002      	str	r2, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:302
    str r3, [r1]
20000278:	600b      	str	r3, [r1, #0]
2000027a:	bf00      	nop
2000027c:	f3af 8000 	nop.w

20000280 <call_glob_ctor>:
call_glob_ctor():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:313
     * Align to word and use 32-bits LDR instruction to ensure the ADD instruction
     * taking PC as argument is aligned on a word boundary.
     */
    .align 4
call_glob_ctor:
    ldr.w r0, =__libc_init_array
20000280:	f8df 0220 	ldr.w	r0, [pc, #544]	; 200004a4 <SF2_MDDR_MODE_CR+0x4e>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:314
    add lr, pc, #3
20000284:	f20f 0e03 	addw	lr, pc, #3
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:315
    bx r0
20000288:	4700      	bx	r0

2000028a <branch_to_main>:
branch_to_main():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:321
    
/*------------------------------------------------------------------------------
 * branch to main.
 */
branch_to_main:
    mov r0, #0      /*  ; no arguments  */
2000028a:	f04f 0000 	mov.w	r0, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:322
    mov r1, #0      /*  ; no argv either */
2000028e:	f04f 0100 	mov.w	r1, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:323
    ldr pc, =main
20000292:	f8df f214 	ldr.w	pc, [pc, #532]	; 200004a8 <SF2_MDDR_MODE_CR+0x52>

20000296 <ExitLoop>:
ExitLoop():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:326

ExitLoop:
    B ExitLoop
20000296:	e7fe      	b.n	20000296 <ExitLoop>

20000298 <block_copy>:
block_copy():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:341
 * should be used as per example linker scripts.
 * Note 1: If the memory address in r0 or r1, byte copy routine is used
 * Note 2: If r1 < r2, will loop indefinetley to highlight linker issue.
 */
block_copy:
    push {r3, r4, r5, r6, r7, r8, lr}
20000298:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:342
    cmp r0, r1
2000029c:	4288      	cmp	r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:343
    beq block_copy_exit          /* ; Exit early if source and destination the same */
2000029e:	d025      	beq.n	200002ec <block_copy_exit>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:344
    subs.w r2, r2, r1            /* ; Calculate number of bytes to move */
200002a0:	ebb2 0201 	subs.w	r2, r2, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:345
    bpl  block_copy_address_ok   /* ; check (end target address) > (target address) => continue */
200002a4:	d500      	bpl.n	200002a8 <block_copy_address_ok>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:346
    b .                          /* ; halt as critical error-  memory map not OK- make it easy to catch in debugger */
200002a6:	e7fe      	b.n	200002a6 <block_copy+0xe>

200002a8 <block_copy_address_ok>:
block_copy_address_ok():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:349
block_copy_address_ok:
    /* ; detect if source or target memory addresses unaligned. If so use byte copy routine */
    orr.w r3, r0, r1
200002a8:	ea40 0301 	orr.w	r3, r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:350
    ands.w r3, r3, #3
200002ac:	f013 0303 	ands.w	r3, r3, #3
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:351
    beq  block_copy_continue
200002b0:	d002      	beq.n	200002b8 <block_copy_continue>

200002b2 <block_copy_byte_copy>:
block_copy_byte_copy():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:353
block_copy_byte_copy:
    bl block_copy_byte
200002b2:	f000 f81d 	bl	200002f0 <block_copy_byte>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:354
    b  block_copy_exit
200002b6:	e019      	b.n	200002ec <block_copy_exit>

200002b8 <block_copy_continue>:
block_copy_continue():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:356
block_copy_continue:
    mov  r3, #0
200002b8:	f04f 0300 	mov.w	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:357
    mov  r8,r2                   /* ; Save copy of byte count */
200002bc:	4690      	mov	r8, r2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:358
    asrs r2,r2, #4               /* ; Div by 16 to get number of chunks to move */
200002be:	1112      	asrs	r2, r2, #4
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:359
    beq block_copy_byte_copy     /* ; need to use byte copy if less than 16 bytes */
200002c0:	d0f7      	beq.n	200002b2 <block_copy_byte_copy>

200002c2 <block_copy_loop>:
block_copy_loop():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:361
block_copy_loop:
    cmp r2, r3
200002c2:	429a      	cmp	r2, r3
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:362
    itt ne
200002c4:	bf1c      	itt	ne
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:363
    ldmne r0!, {r4, r5, r6, r7}
200002c6:	c8f0      	ldmiane	r0!, {r4, r5, r6, r7}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:364
    stmne r1!, {r4, r5, r6, r7}
200002c8:	c1f0      	stmiane	r1!, {r4, r5, r6, r7}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:365
    add.w r3, r3, #1            /* ; use Thumb2- make sure condition code reg. not updated */
200002ca:	f103 0301 	add.w	r3, r3, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:366
    bne block_copy_loop
200002ce:	d1f8      	bne.n	200002c2 <block_copy_loop>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:368
    /* ; copy spare bytes at the end if any */
    and r8, #15                 /* ; get spare bytes  --check can you do an ands?   */
200002d0:	f008 080f 	and.w	r8, r8, #15
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:369
    cmp r8, #0                  /* ; no spare bytes at end- end now     */
200002d4:	f1b8 0f00 	cmp.w	r8, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:370
    beq block_copy_exit
200002d8:	d008      	beq.n	200002ec <block_copy_exit>

200002da <copy_spare_bytes>:
copy_spare_bytes():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:372
copy_spare_bytes:               /* ; From above, R0 contains source address, R1 contains destination address */
    ldrb r4, [r0]
200002da:	7804      	ldrb	r4, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:373
    strb r4, [r1]
200002dc:	700c      	strb	r4, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:374
    add  r0, #1
200002de:	f100 0001 	add.w	r0, r0, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:375
    add  r1, #1
200002e2:	f101 0101 	add.w	r1, r1, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:376
    subs r8, r8, #1
200002e6:	f1b8 0801 	subs.w	r8, r8, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:377
    bne copy_spare_bytes
200002ea:	d1f6      	bne.n	200002da <copy_spare_bytes>

200002ec <block_copy_exit>:
block_copy_exit():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:379
block_copy_exit:
    pop {r3, r4, r5, r6, r7, r8, pc}
200002ec:	e8bd 81f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, pc}

200002f0 <block_copy_byte>:
block_copy_byte():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:388
 * r0: source address
 * r1: target address
 * r2: number of bytes
*/
block_copy_byte:
    push {r3, lr}
200002f0:	b508      	push	{r3, lr}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:389
    mov  r3, #0
200002f2:	f04f 0300 	mov.w	r3, #0

200002f6 <block_copy_byte_loop>:
block_copy_byte_loop():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:391
block_copy_byte_loop:            /* ; From above, R0 contains source address, R1 contains destination address */
    ldrb r3, [r0]
200002f6:	7803      	ldrb	r3, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:392
    strb r3, [r1]
200002f8:	700b      	strb	r3, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:393
    add  r0, #1
200002fa:	f100 0001 	add.w	r0, r0, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:394
    add  r1, #1
200002fe:	f101 0101 	add.w	r1, r1, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:395
    subs r2, r2, #1
20000302:	3a01      	subs	r2, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:396
    bne block_copy_byte_loop
20000304:	d1f7      	bne.n	200002f6 <block_copy_byte_loop>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:397
    pop {r3, pc}
20000306:	bd08      	pop	{r3, pc}

20000308 <fill_memory>:
fill_memory():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:419
; * @return none - Used Registers are not preserved
; */

fill_memory:
    /* ;push {r4, r5, r6, r7, r8, r9, lr}    We will not use stack as may be not available */
    cmp r0, r1
20000308:	4288      	cmp	r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:420
    beq fill_memory_exit        /* ; Exit early if source and destination the same */
2000030a:	d037      	beq.n	2000037c <fill_memory_exit>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:422
/* ; copy non-aligned bytes at the start */
    and.w  r6, r0, #3           /* ; see if non-alaigned bytes at the start     */
2000030c:	f000 0603 	and.w	r6, r0, #3
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:423
    cmp r6, #0
20000310:	2e00      	cmp	r6, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:424
    beq fill_memory_end_start   /* ; no spare bytes at start, continue  */
20000312:	d014      	beq.n	2000033e <fill_memory_end_start>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:425
    mov    r5, #4
20000314:	f04f 0504 	mov.w	r5, #4
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:426
    sub.w  r4, r5, r6           /* ; now have number of non-aligned bytes in r4 */
20000318:	eba5 0406 	sub.w	r4, r5, r6
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:427
    mov  r7, #8
2000031c:	f04f 0708 	mov.w	r7, #8
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:428
    mul  r8, r7, r6             /* ; calculate number of shifts required to initalise pattern for non-aligned bytes */
20000320:	fb07 f806 	mul.w	r8, r7, r6
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:429
    mov  r9, r2                 /* ; copy pattern */
20000324:	4691      	mov	r9, r2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:430
    ror  r9, r9, r8             /* ; Rotate right to keep pattern consistent */
20000326:	fa69 f908 	ror.w	r9, r9, r8

2000032a <fill_memory_spare_bytes_start>:
fill_memory_spare_bytes_start():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:432
fill_memory_spare_bytes_start:  /* ; From above, R0 contains source address, R1 contains destination address */
    cmp r4, #0                  /* ; no spare bytes at end- end now     */
2000032a:	2c00      	cmp	r4, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:433
    beq fill_memory_end_start
2000032c:	d007      	beq.n	2000033e <fill_memory_end_start>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:434
    strb r9, [r0]               /* ; fill byte */
2000032e:	f880 9000 	strb.w	r9, [r0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:435
    ror.w  r9, r9, r7           /* ; Rotate right by one byte for the next time, to keep pattern consistent */
20000332:	fa69 f907 	ror.w	r9, r9, r7
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:436
    add r0, r0, #1              /* ; add one to address */
20000336:	f100 0001 	add.w	r0, r0, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:437
    subs r4, r4, #1             /* ; subtract one from byte count 1 */
2000033a:	3c01      	subs	r4, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:438
    b fill_memory_spare_bytes_start
2000033c:	e7f5      	b.n	2000032a <fill_memory_spare_bytes_start>

2000033e <fill_memory_end_start>:
fill_memory_end_start():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:440
fill_memory_end_start:
    mov  r6, #0
2000033e:	f04f 0600 	mov.w	r6, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:441
    mov  r7, r1                  /* ; save end address */
20000342:	460f      	mov	r7, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:442
    subs r1, r1, r0              /* ; Calculate number of bytes to fill */
20000344:	1a09      	subs	r1, r1, r0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:443
    mov  r8,r1                   /* ; Save copy of byte count */
20000346:	4688      	mov	r8, r1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:444
    asrs r1,r1, #4               /* ; Div by 16 to get number of chunks to move */
20000348:	1109      	asrs	r1, r1, #4
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:445
    mov  r9, r2                  /* ; copy pattern */
2000034a:	4691      	mov	r9, r2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:446
    mov  r4, r2                  /* ; copy pattern */
2000034c:	4614      	mov	r4, r2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:447
    mov  r5, r2                  /* ; copy pattern */
2000034e:	4615      	mov	r5, r2
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:448
    cmp r1, r6                   /* ; compare to see if all chunks copied */
20000350:	42b1      	cmp	r1, r6
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:449
    beq fill_memory_spare_bytes_end
20000352:	d006      	beq.n	20000362 <fill_memory_spare_bytes_end>

20000354 <fill_memory_loop>:
fill_memory_loop():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:451
fill_memory_loop:
    it ne
20000354:	bf18      	it	ne
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:452
    stmne r0!, {r2, r4, r5, r9}  /* ; copy pattern- note: stmne instruction must me word aligned (address in r0) */
20000356:	e8a0 0234 	stmiane.w	r0!, {r2, r4, r5, r9}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:453
    add.w r6, r6, #1             /* ; use Thumb2- make sure condition code reg. not updated */
2000035a:	f106 0601 	add.w	r6, r6, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:454
    cmp r1, r6                   /* ; compare to see if all chunks copied */
2000035e:	42b1      	cmp	r1, r6
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:455
    bne fill_memory_loop
20000360:	d1f8      	bne.n	20000354 <fill_memory_loop>

20000362 <fill_memory_spare_bytes_end>:
fill_memory_spare_bytes_end():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:457
fill_memory_spare_bytes_end:     /* ; copy spare bytes at the end if any */
    and.w r8, r8, #15            /* ; get spare bytes  --check can you do an ands?  */
20000362:	f008 080f 	and.w	r8, r8, #15

20000366 <fill_memory_spare_end_loop>:
fill_memory_spare_end_loop():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:459
fill_memory_spare_end_loop:      /* ; From above, R0 contains source address, R1 contains destination address */
    cmp r8, #0                   /* ; no spare bytes at end- end now    */
20000366:	f1b8 0f00 	cmp.w	r8, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:460
    beq fill_memory_exit
2000036a:	d007      	beq.n	2000037c <fill_memory_exit>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:461
    strb r2, [r0]
2000036c:	7002      	strb	r2, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:462
    ror.w  r2, r2, #8            /* ; Rotate right by one byte for the next time, to keep pattern consistent */
2000036e:	ea4f 2232 	mov.w	r2, r2, ror #8
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:463
    add r0, r0, #1               /* ; add one to address */
20000372:	f100 0001 	add.w	r0, r0, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:464
    subs r8, r8, #1              /* ; subtract one from byte count 1    */
20000376:	f1b8 0801 	subs.w	r8, r8, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:465
    b fill_memory_spare_end_loop
2000037a:	e7f4      	b.n	20000366 <fill_memory_spare_end_loop>

2000037c <fill_memory_exit>:
fill_memory_exit():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:467
fill_memory_exit:
    bx lr               /*; We will not use pop as stack may be not available */
2000037c:	4770      	bx	lr

2000037e <NMI_Handler>:
NMI_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:554
 * NMI_Handler
 */
    .weak   NMI_Handler
    .type   NMI_Handler, %function
NMI_Handler:
    B .
2000037e:	e7fe      	b.n	2000037e <NMI_Handler>

20000380 <HardFault_Handler>:
HardFault_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:562
 * HardFault_Handler
 */
    .weak   HardFault_Handler
    .type   HardFault_Handler, %function
HardFault_Handler:
    B .
20000380:	e7fe      	b.n	20000380 <HardFault_Handler>

20000382 <MemManage_Handler>:
MemManage_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:570
 * MemManage_Handler
 */
    .weak   MemManage_Handler
    .type   MemManage_Handler, %function
MemManage_Handler:
    B .
20000382:	e7fe      	b.n	20000382 <MemManage_Handler>

20000384 <BusFault_Handler>:
BusFault_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:578
 * BusFault_Handler
 */
    .weak   BusFault_Handler
    .type   BusFault_Handler, %function
BusFault_Handler:
    B .
20000384:	e7fe      	b.n	20000384 <BusFault_Handler>

20000386 <UsageFault_Handler>:
UsageFault_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:586
 * UsageFault_Handler
 */
    .weak   UsageFault_Handler
    .type   UsageFault_Handler, %function
UsageFault_Handler:
    B .
20000386:	e7fe      	b.n	20000386 <UsageFault_Handler>

20000388 <SVC_Handler>:
SVC_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:594
 * SVC_Handler
 */
    .weak   SVC_Handler
    .type   SVC_Handler, %function
SVC_Handler:
    B .
20000388:	e7fe      	b.n	20000388 <SVC_Handler>

2000038a <DebugMon_Handler>:
DebugMon_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:602
 * DebugMon_Handler
 */
    .weak   DebugMon_Handler
    .type   DebugMon_Handler, %function
DebugMon_Handler:
    B .
2000038a:	e7fe      	b.n	2000038a <DebugMon_Handler>

2000038c <PendSV_Handler>:
PendSV_Handler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:610
 * PendSV_Handler
 */
    .weak   PendSV_Handler
    .type   PendSV_Handler, %function
PendSV_Handler:
    B .
2000038c:	e7fe      	b.n	2000038c <PendSV_Handler>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:618
 * SysTick_Handler
 */
    .weak   SysTick_Handler
    .type   SysTick_Handler, %function
SysTick_Handler:
    B .
2000038e:	e7fe      	b.n	2000038e <PendSV_Handler+0x2>

20000390 <WdogWakeup_IRQHandler>:
WdogWakeup_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:626
 * WdogWakeup_IRQHandler
 */
    .weak   WdogWakeup_IRQHandler
    .type   WdogWakeup_IRQHandler, %function
WdogWakeup_IRQHandler:
    B .
20000390:	e7fe      	b.n	20000390 <WdogWakeup_IRQHandler>

20000392 <RTC_Wakeup_IRQHandler>:
RTC_Wakeup_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:634
 * RTC_Wakeup_IRQHandler
 */
    .weak   RTC_Wakeup_IRQHandler
    .type   RTC_Wakeup_IRQHandler, %function
RTC_Wakeup_IRQHandler:
    B .
20000392:	e7fe      	b.n	20000392 <RTC_Wakeup_IRQHandler>

20000394 <SPI0_IRQHandler>:
SPI0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:642
 * SPI0_IRQHandler
 */
    .weak   SPI0_IRQHandler
    .type   SPI0_IRQHandler, %function
SPI0_IRQHandler:
    B .
20000394:	e7fe      	b.n	20000394 <SPI0_IRQHandler>

20000396 <SPI1_IRQHandler>:
SPI1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:650
 * SPI1_IRQHandler
 */
    .weak   SPI1_IRQHandler
    .type   SPI1_IRQHandler, %function
SPI1_IRQHandler:
    B .
20000396:	e7fe      	b.n	20000396 <SPI1_IRQHandler>

20000398 <I2C0_IRQHandler>:
I2C0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:658
 * I2C0_IRQHandler
 */
    .weak   I2C0_IRQHandler
    .type   I2C0_IRQHandler, %function
I2C0_IRQHandler:
    B .
20000398:	e7fe      	b.n	20000398 <I2C0_IRQHandler>

2000039a <I2C0_SMBAlert_IRQHandler>:
I2C0_SMBAlert_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:666
 * I2C0_SMBAlert_IRQHandler
 */
    .weak   I2C0_SMBAlert_IRQHandler
    .type   I2C0_SMBAlert_IRQHandler, %function
I2C0_SMBAlert_IRQHandler:
    B .
2000039a:	e7fe      	b.n	2000039a <I2C0_SMBAlert_IRQHandler>

2000039c <I2C0_SMBus_IRQHandler>:
I2C0_SMBus_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:674
 * I2C0_SMBus_IRQHandler
 */
    .weak   I2C0_SMBus_IRQHandler
    .type   I2C0_SMBus_IRQHandler, %function
I2C0_SMBus_IRQHandler:
    B .
2000039c:	e7fe      	b.n	2000039c <I2C0_SMBus_IRQHandler>

2000039e <I2C1_IRQHandler>:
I2C1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:682
 * I2C1_IRQHandler
 */
    .weak   I2C1_IRQHandler
    .type   I2C1_IRQHandler, %function
I2C1_IRQHandler:
    B .
2000039e:	e7fe      	b.n	2000039e <I2C1_IRQHandler>

200003a0 <I2C1_SMBAlert_IRQHandler>:
I2C1_SMBAlert_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:690
 * I2C1_SMBAlert_IRQHandler
 */
    .weak   I2C1_SMBAlert_IRQHandler
    .type   I2C1_SMBAlert_IRQHandler, %function
I2C1_SMBAlert_IRQHandler:
    B .
200003a0:	e7fe      	b.n	200003a0 <I2C1_SMBAlert_IRQHandler>

200003a2 <I2C1_SMBus_IRQHandler>:
I2C1_SMBus_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:698
 * I2C1_SMBus_IRQHandler
 */
    .weak   I2C1_SMBus_IRQHandler
    .type   I2C1_SMBus_IRQHandler, %function
I2C1_SMBus_IRQHandler:
    B .
200003a2:	e7fe      	b.n	200003a2 <I2C1_SMBus_IRQHandler>

200003a4 <UART0_IRQHandler>:
UART0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:706
 * UART0_IRQHandler
 */
    .weak   UART0_IRQHandler
    .type   UART0_IRQHandler, %function
UART0_IRQHandler:
    B .
200003a4:	e7fe      	b.n	200003a4 <UART0_IRQHandler>

200003a6 <UART1_IRQHandler>:
UART1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:714
 * UART1_IRQHandler
 */
    .weak   UART1_IRQHandler
    .type   UART1_IRQHandler, %function
UART1_IRQHandler:
    B .
200003a6:	e7fe      	b.n	200003a6 <UART1_IRQHandler>

200003a8 <EthernetMAC_IRQHandler>:
EthernetMAC_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:722
 * EthernetMAC_IRQHandler
 */
    .weak   EthernetMAC_IRQHandler
    .type   EthernetMAC_IRQHandler, %function
EthernetMAC_IRQHandler:
    B .
200003a8:	e7fe      	b.n	200003a8 <EthernetMAC_IRQHandler>

200003aa <DMA_IRQHandler>:
DMA_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:730
 * DMA_IRQHandler
 */
    .weak   DMA_IRQHandler
    .type   DMA_IRQHandler, %function
DMA_IRQHandler:
    B .
200003aa:	e7fe      	b.n	200003aa <DMA_IRQHandler>

200003ac <Timer1_IRQHandler>:
Timer1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:738
 * Timer1_IRQHandler
 */
    .weak   Timer1_IRQHandler
    .type   Timer1_IRQHandler, %function
Timer1_IRQHandler:
    B .
200003ac:	e7fe      	b.n	200003ac <Timer1_IRQHandler>

200003ae <Timer2_IRQHandler>:
Timer2_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:746
 * Timer2_IRQHandler
 */
    .weak   Timer2_IRQHandler
    .type   Timer2_IRQHandler, %function
Timer2_IRQHandler:
    B .
200003ae:	e7fe      	b.n	200003ae <Timer2_IRQHandler>

200003b0 <CAN_IRQHandler>:
CAN_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:754
 * CAN_IRQHandler
 */
    .weak   CAN_IRQHandler
    .type   CAN_IRQHandler, %function
CAN_IRQHandler:
    B .
200003b0:	e7fe      	b.n	200003b0 <CAN_IRQHandler>

200003b2 <ENVM0_IRQHandler>:
ENVM0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:762
 * ENVM0_IRQHandler
 */
    .weak   ENVM0_IRQHandler
    .type   ENVM0_IRQHandler, %function
ENVM0_IRQHandler:
    B .
200003b2:	e7fe      	b.n	200003b2 <ENVM0_IRQHandler>

200003b4 <ENVM1_IRQHandler>:
ENVM1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:770
 * ENVM1_IRQHandler
 */
    .weak   ENVM1_IRQHandler
    .type   ENVM1_IRQHandler, %function
ENVM1_IRQHandler:
    B .
200003b4:	e7fe      	b.n	200003b4 <ENVM1_IRQHandler>

200003b6 <ComBlk_IRQHandler>:
ComBlk_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:778
 * ComBlk_IRQHandler
 */
    .weak   ComBlk_IRQHandler
    .type   ComBlk_IRQHandler, %function
ComBlk_IRQHandler:
    B .
200003b6:	e7fe      	b.n	200003b6 <ComBlk_IRQHandler>

200003b8 <USB_IRQHandler>:
USB_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:786
 * USB_IRQHandler
 */
    .weak   USB_IRQHandler
    .type   USB_IRQHandler, %function
USB_IRQHandler:
    B .
200003b8:	e7fe      	b.n	200003b8 <USB_IRQHandler>

200003ba <USB_DMA_IRQHandler>:
USB_DMA_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:794
 * USB_DMA_IRQHandler
 */
    .weak   USB_DMA_IRQHandler
    .type   USB_DMA_IRQHandler, %function
USB_DMA_IRQHandler:
    B .
200003ba:	e7fe      	b.n	200003ba <USB_DMA_IRQHandler>

200003bc <PLL_Lock_IRQHandler>:
PLL_Lock_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:802
 * PLL_Lock_IRQHandler
 */
    .weak   PLL_Lock_IRQHandler
    .type   PLL_Lock_IRQHandler, %function
PLL_Lock_IRQHandler:
    B .
200003bc:	e7fe      	b.n	200003bc <PLL_Lock_IRQHandler>

200003be <PLL_LockLost_IRQHandler>:
PLL_LockLost_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:810
 * PLL_LockLost_IRQHandler
 */
    .weak   PLL_LockLost_IRQHandler
    .type   PLL_LockLost_IRQHandler, %function
PLL_LockLost_IRQHandler:
    B .
200003be:	e7fe      	b.n	200003be <PLL_LockLost_IRQHandler>

200003c0 <CommSwitchError_IRQHandler>:
CommSwitchError_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:818
 * CommSwitchError_IRQHandler
 */
    .weak   CommSwitchError_IRQHandler
    .type   CommSwitchError_IRQHandler, %function
CommSwitchError_IRQHandler:
    B .
200003c0:	e7fe      	b.n	200003c0 <CommSwitchError_IRQHandler>

200003c2 <CacheError_IRQHandler>:
CacheError_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:826
 * CacheError_IRQHandler
 */
    .weak   CacheError_IRQHandler
    .type   CacheError_IRQHandler, %function
CacheError_IRQHandler:
    B .
200003c2:	e7fe      	b.n	200003c2 <CacheError_IRQHandler>

200003c4 <DDR_IRQHandler>:
DDR_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:834
 * DDR_IRQHandler
 */
    .weak   DDR_IRQHandler
    .type   DDR_IRQHandler, %function
DDR_IRQHandler:
    B .
200003c4:	e7fe      	b.n	200003c4 <DDR_IRQHandler>

200003c6 <HPDMA_Complete_IRQHandler>:
HPDMA_Complete_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:842
 * HPDMA_Complete_IRQHandler
 */
    .weak   HPDMA_Complete_IRQHandler
    .type   HPDMA_Complete_IRQHandler, %function
HPDMA_Complete_IRQHandler:
    B .
200003c6:	e7fe      	b.n	200003c6 <HPDMA_Complete_IRQHandler>

200003c8 <HPDMA_Error_IRQHandler>:
HPDMA_Error_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:850
 * HPDMA_Error_IRQHandler
 */
    .weak   HPDMA_Error_IRQHandler
    .type   HPDMA_Error_IRQHandler, %function
HPDMA_Error_IRQHandler:
    B .
200003c8:	e7fe      	b.n	200003c8 <HPDMA_Error_IRQHandler>

200003ca <ECC_Error_IRQHandler>:
ECC_Error_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:858
 * ECC_Error_IRQHandler
 */
    .weak   ECC_Error_IRQHandler
    .type   ECC_Error_IRQHandler, %function
ECC_Error_IRQHandler:
    B .
200003ca:	e7fe      	b.n	200003ca <ECC_Error_IRQHandler>

200003cc <MDDR_IOCalib_IRQHandler>:
MDDR_IOCalib_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:866
 * MDDR_IOCalib_IRQHandler
 */
    .weak   MDDR_IOCalib_IRQHandler
    .type   MDDR_IOCalib_IRQHandler, %function
MDDR_IOCalib_IRQHandler:
    B .
200003cc:	e7fe      	b.n	200003cc <MDDR_IOCalib_IRQHandler>

200003ce <FAB_PLL_Lock_IRQHandler>:
FAB_PLL_Lock_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:874
 * FAB_PLL_Lock_IRQHandler
 */
    .weak   FAB_PLL_Lock_IRQHandler
    .type   FAB_PLL_Lock_IRQHandler, %function    
FAB_PLL_Lock_IRQHandler:
    B .
200003ce:	e7fe      	b.n	200003ce <FAB_PLL_Lock_IRQHandler>

200003d0 <FAB_PLL_LockLost_IRQHandler>:
FAB_PLL_LockLost_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:882
 * FAB_PLL_LockLost_IRQHandler
 */
    .weak   FAB_PLL_LockLost_IRQHandler
    .type   FAB_PLL_LockLost_IRQHandler, %function        
FAB_PLL_LockLost_IRQHandler:
    B .
200003d0:	e7fe      	b.n	200003d0 <FAB_PLL_LockLost_IRQHandler>

200003d2 <FIC64_IRQHandler>:
FIC64_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:890
 * FIC64_IRQHandler
 */
    .weak   FIC64_IRQHandler
    .type   FIC64_IRQHandler, %function            
FIC64_IRQHandler:
    B .
200003d2:	e7fe      	b.n	200003d2 <FIC64_IRQHandler>

200003d4 <FabricIrq0_IRQHandler>:
FabricIrq0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:898
 * FabricIrq0_IRQHandler
 */
    .weak   FabricIrq0_IRQHandler
    .type   FabricIrq0_IRQHandler, %function
FabricIrq0_IRQHandler:
    B .
200003d4:	e7fe      	b.n	200003d4 <FabricIrq0_IRQHandler>

200003d6 <FabricIrq1_IRQHandler>:
FabricIrq1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:906
 * FabricIrq1_IRQHandler
 */
    .weak   FabricIrq1_IRQHandler
    .type   FabricIrq1_IRQHandler, %function
FabricIrq1_IRQHandler:
    B .
200003d6:	e7fe      	b.n	200003d6 <FabricIrq1_IRQHandler>

200003d8 <FabricIrq2_IRQHandler>:
FabricIrq2_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:914
 * FabricIrq2_IRQHandler
 */
    .weak   FabricIrq2_IRQHandler
    .type   FabricIrq2_IRQHandler, %function
FabricIrq2_IRQHandler:
    B .
200003d8:	e7fe      	b.n	200003d8 <FabricIrq2_IRQHandler>

200003da <FabricIrq3_IRQHandler>:
FabricIrq3_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:922
 * FabricIrq3_IRQHandler
 */
    .weak   FabricIrq3_IRQHandler
    .type   FabricIrq3_IRQHandler, %function
FabricIrq3_IRQHandler:
    B .
200003da:	e7fe      	b.n	200003da <FabricIrq3_IRQHandler>

200003dc <FabricIrq4_IRQHandler>:
FabricIrq4_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:930
 * FabricIrq4_IRQHandler
 */
    .weak   FabricIrq4_IRQHandler
    .type   FabricIrq4_IRQHandler, %function
FabricIrq4_IRQHandler:
    B .
200003dc:	e7fe      	b.n	200003dc <FabricIrq4_IRQHandler>

200003de <FabricIrq5_IRQHandler>:
FabricIrq5_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:938
 * FabricIrq5_IRQHandler
 */
    .weak   FabricIrq5_IRQHandler
    .type   FabricIrq5_IRQHandler, %function
FabricIrq5_IRQHandler:
    B .
200003de:	e7fe      	b.n	200003de <FabricIrq5_IRQHandler>

200003e0 <FabricIrq6_IRQHandler>:
FabricIrq6_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:946
 * FabricIrq6_IRQHandler
 */
    .weak   FabricIrq6_IRQHandler
    .type   FabricIrq6_IRQHandler, %function
FabricIrq6_IRQHandler:
    B .
200003e0:	e7fe      	b.n	200003e0 <FabricIrq6_IRQHandler>

200003e2 <FabricIrq7_IRQHandler>:
FabricIrq7_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:954
 * FabricIrq7_IRQHandler
 */
    .weak   FabricIrq7_IRQHandler
    .type   FabricIrq7_IRQHandler, %function
FabricIrq7_IRQHandler:
    B .
200003e2:	e7fe      	b.n	200003e2 <FabricIrq7_IRQHandler>

200003e4 <FabricIrq8_IRQHandler>:
FabricIrq8_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:962
 * FabricIrq8_IRQHandler
 */
    .weak   FabricIrq8_IRQHandler
    .type   FabricIrq8_IRQHandler, %function
FabricIrq8_IRQHandler:
    B .
200003e4:	e7fe      	b.n	200003e4 <FabricIrq8_IRQHandler>

200003e6 <FabricIrq9_IRQHandler>:
FabricIrq9_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:970
 * FabricIrq9_IRQHandler
 */
    .weak   FabricIrq9_IRQHandler
    .type   FabricIrq9_IRQHandler, %function
FabricIrq9_IRQHandler:
    B .
200003e6:	e7fe      	b.n	200003e6 <FabricIrq9_IRQHandler>

200003e8 <FabricIrq10_IRQHandler>:
FabricIrq10_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:978
 * FabricIrq10_IRQHandler
 */
    .weak   FabricIrq10_IRQHandler
    .type   FabricIrq10_IRQHandler, %function
FabricIrq10_IRQHandler:
    B .
200003e8:	e7fe      	b.n	200003e8 <FabricIrq10_IRQHandler>

200003ea <FabricIrq11_IRQHandler>:
FabricIrq11_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:986
 * FabricIrq11_IRQHandler
 */
    .weak   FabricIrq11_IRQHandler
    .type   FabricIrq11_IRQHandler, %function
FabricIrq11_IRQHandler:
    B .
200003ea:	e7fe      	b.n	200003ea <FabricIrq11_IRQHandler>

200003ec <FabricIrq12_IRQHandler>:
FabricIrq12_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:994
 * FabricIrq12_IRQHandler
 */
    .weak   FabricIrq12_IRQHandler
    .type   FabricIrq12_IRQHandler, %function
FabricIrq12_IRQHandler:
    B .
200003ec:	e7fe      	b.n	200003ec <FabricIrq12_IRQHandler>

200003ee <FabricIrq13_IRQHandler>:
FabricIrq13_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1002
 * FabricIrq13_IRQHandler
 */
    .weak   FabricIrq13_IRQHandler
    .type   FabricIrq13_IRQHandler, %function
FabricIrq13_IRQHandler:
    B .
200003ee:	e7fe      	b.n	200003ee <FabricIrq13_IRQHandler>

200003f0 <FabricIrq14_IRQHandler>:
FabricIrq14_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1010
 * FabricIrq14_IRQHandler
 */
    .weak   FabricIrq14_IRQHandler
    .type   FabricIrq14_IRQHandler, %function
FabricIrq14_IRQHandler:
    B .
200003f0:	e7fe      	b.n	200003f0 <FabricIrq14_IRQHandler>

200003f2 <FabricIrq15_IRQHandler>:
FabricIrq15_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1018
 * FabricIrq15_IRQHandler
 */
    .weak   FabricIrq15_IRQHandler
    .type   FabricIrq15_IRQHandler, %function
FabricIrq15_IRQHandler:
    B .    
200003f2:	e7fe      	b.n	200003f2 <FabricIrq15_IRQHandler>

200003f4 <GPIO0_IRQHandler>:
GPIO0_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1026
 * GPIO0_IRQHandler
 */
    .weak   GPIO0_IRQHandler
    .type   GPIO0_IRQHandler, %function
GPIO0_IRQHandler:
    B .
200003f4:	e7fe      	b.n	200003f4 <GPIO0_IRQHandler>

200003f6 <GPIO1_IRQHandler>:
GPIO1_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1034
 * GPIO1_IRQHandler
 */
    .weak   GPIO1_IRQHandler
    .type   GPIO1_IRQHandler, %function
GPIO1_IRQHandler:
    B .
200003f6:	e7fe      	b.n	200003f6 <GPIO1_IRQHandler>

200003f8 <GPIO2_IRQHandler>:
GPIO2_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1042
 * GPIO2_IRQHandler
 */
    .weak   GPIO2_IRQHandler
    .type   GPIO2_IRQHandler, %function
GPIO2_IRQHandler:
    B .
200003f8:	e7fe      	b.n	200003f8 <GPIO2_IRQHandler>

200003fa <GPIO3_IRQHandler>:
GPIO3_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1050
 * GPIO3_IRQHandler
 */
    .weak   GPIO3_IRQHandler
    .type   GPIO3_IRQHandler, %function
GPIO3_IRQHandler:
    B .
200003fa:	e7fe      	b.n	200003fa <GPIO3_IRQHandler>

200003fc <GPIO4_IRQHandler>:
GPIO4_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1058
 * GPIO4_IRQHandler
 */
    .weak   GPIO4_IRQHandler
    .type   GPIO4_IRQHandler, %function
GPIO4_IRQHandler:
    B .
200003fc:	e7fe      	b.n	200003fc <GPIO4_IRQHandler>

200003fe <GPIO5_IRQHandler>:
GPIO5_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1066
 * GPIO5_IRQHandler
 */
    .weak   GPIO5_IRQHandler
    .type   GPIO5_IRQHandler, %function
GPIO5_IRQHandler:
    B .
200003fe:	e7fe      	b.n	200003fe <GPIO5_IRQHandler>

20000400 <GPIO6_IRQHandler>:
GPIO6_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1074
 * GPIO6_IRQHandler
 */
    .weak   GPIO6_IRQHandler
    .type   GPIO6_IRQHandler, %function
GPIO6_IRQHandler:
    B .
20000400:	e7fe      	b.n	20000400 <GPIO6_IRQHandler>

20000402 <GPIO7_IRQHandler>:
GPIO7_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1082
 * GPIO7_IRQHandler
 */
    .weak   GPIO7_IRQHandler
    .type   GPIO7_IRQHandler, %function
GPIO7_IRQHandler:
    B .
20000402:	e7fe      	b.n	20000402 <GPIO7_IRQHandler>

20000404 <GPIO8_IRQHandler>:
GPIO8_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1090
 * GPIO8_IRQHandler
 */
    .weak   GPIO8_IRQHandler
    .type   GPIO8_IRQHandler, %function
GPIO8_IRQHandler:
    B .
20000404:	e7fe      	b.n	20000404 <GPIO8_IRQHandler>

20000406 <GPIO9_IRQHandler>:
GPIO9_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1098
 * GPIO9_IRQHandler
 */
    .weak   GPIO9_IRQHandler
    .type   GPIO9_IRQHandler, %function
GPIO9_IRQHandler:
    B .
20000406:	e7fe      	b.n	20000406 <GPIO9_IRQHandler>

20000408 <GPIO10_IRQHandler>:
GPIO10_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1106
 * GPIO10_IRQHandler
 */
    .weak   GPIO10_IRQHandler
    .type   GPIO10_IRQHandler, %function
GPIO10_IRQHandler:
    B .
20000408:	e7fe      	b.n	20000408 <GPIO10_IRQHandler>

2000040a <GPIO11_IRQHandler>:
GPIO11_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1114
 * GPIO11_IRQHandler
 */
    .weak   GPIO11_IRQHandler
    .type   GPIO11_IRQHandler, %function
GPIO11_IRQHandler:
    B .
2000040a:	e7fe      	b.n	2000040a <GPIO11_IRQHandler>

2000040c <GPIO12_IRQHandler>:
GPIO12_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1122
 * GPIO12_IRQHandler
 */
    .weak   GPIO12_IRQHandler
    .type   GPIO12_IRQHandler, %function
GPIO12_IRQHandler:
    B .
2000040c:	e7fe      	b.n	2000040c <GPIO12_IRQHandler>

2000040e <GPIO13_IRQHandler>:
GPIO13_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1130
 * GPIO13_IRQHandler
 */
    .weak   GPIO13_IRQHandler
    .type   GPIO13_IRQHandler, %function
GPIO13_IRQHandler:
    B .
2000040e:	e7fe      	b.n	2000040e <GPIO13_IRQHandler>

20000410 <GPIO14_IRQHandler>:
GPIO14_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1138
 * GPIO14_IRQHandler
 */
    .weak   GPIO14_IRQHandler
    .type   GPIO14_IRQHandler, %function
GPIO14_IRQHandler:
    B .
20000410:	e7fe      	b.n	20000410 <GPIO14_IRQHandler>

20000412 <GPIO15_IRQHandler>:
GPIO15_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1146
 * GPIO15_IRQHandler
 */
    .weak   GPIO15_IRQHandler
    .type   GPIO15_IRQHandler, %function
GPIO15_IRQHandler:
    B .
20000412:	e7fe      	b.n	20000412 <GPIO15_IRQHandler>

20000414 <GPIO16_IRQHandler>:
GPIO16_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1154
 * GPIO16_IRQHandler
 */
    .weak   GPIO16_IRQHandler
    .type   GPIO16_IRQHandler, %function
GPIO16_IRQHandler:
    B .
20000414:	e7fe      	b.n	20000414 <GPIO16_IRQHandler>

20000416 <GPIO17_IRQHandler>:
GPIO17_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1162
 * GPIO17_IRQHandler
 */
    .weak   GPIO17_IRQHandler
    .type   GPIO17_IRQHandler, %function
GPIO17_IRQHandler:
    B .
20000416:	e7fe      	b.n	20000416 <GPIO17_IRQHandler>

20000418 <GPIO18_IRQHandler>:
GPIO18_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1170
 * GPIO18_IRQHandler
 */
    .weak   GPIO18_IRQHandler
    .type   GPIO18_IRQHandler, %function
GPIO18_IRQHandler:
    B .
20000418:	e7fe      	b.n	20000418 <GPIO18_IRQHandler>

2000041a <GPIO19_IRQHandler>:
GPIO19_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1178
 * GPIO19_IRQHandler
 */
    .weak   GPIO19_IRQHandler
    .type   GPIO19_IRQHandler, %function
GPIO19_IRQHandler:
    B .
2000041a:	e7fe      	b.n	2000041a <GPIO19_IRQHandler>

2000041c <GPIO20_IRQHandler>:
GPIO20_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1186
 * GPIO20_IRQHandler
 */
    .weak   GPIO20_IRQHandler
    .type   GPIO20_IRQHandler, %function
GPIO20_IRQHandler:
    B .
2000041c:	e7fe      	b.n	2000041c <GPIO20_IRQHandler>

2000041e <GPIO21_IRQHandler>:
GPIO21_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1194
 * GPIO21_IRQHandler
 */
    .weak   GPIO21_IRQHandler
    .type   GPIO21_IRQHandler, %function
GPIO21_IRQHandler:
    B .
2000041e:	e7fe      	b.n	2000041e <GPIO21_IRQHandler>

20000420 <GPIO22_IRQHandler>:
GPIO22_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1202
 * GPIO22_IRQHandler
 */
    .weak   GPIO22_IRQHandler
    .type   GPIO22_IRQHandler, %function
GPIO22_IRQHandler:
    B .
20000420:	e7fe      	b.n	20000420 <GPIO22_IRQHandler>

20000422 <GPIO23_IRQHandler>:
GPIO23_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1210
 * GPIO23_IRQHandler
 */
    .weak   GPIO23_IRQHandler
    .type   GPIO23_IRQHandler, %function
GPIO23_IRQHandler:
    B .
20000422:	e7fe      	b.n	20000422 <GPIO23_IRQHandler>

20000424 <GPIO24_IRQHandler>:
GPIO24_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1218
 * GPIO24_IRQHandler
 */
    .weak   GPIO24_IRQHandler
    .type   GPIO24_IRQHandler, %function
GPIO24_IRQHandler:
    B .
20000424:	e7fe      	b.n	20000424 <GPIO24_IRQHandler>

20000426 <GPIO25_IRQHandler>:
GPIO25_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1226
 * GPIO25_IRQHandler
 */
    .weak   GPIO25_IRQHandler
    .type   GPIO25_IRQHandler, %function
GPIO25_IRQHandler:
    B .
20000426:	e7fe      	b.n	20000426 <GPIO25_IRQHandler>

20000428 <GPIO26_IRQHandler>:
GPIO26_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1234
 * GPIO26_IRQHandler
 */
    .weak   GPIO26_IRQHandler
    .type   GPIO26_IRQHandler, %function
GPIO26_IRQHandler:
    B .
20000428:	e7fe      	b.n	20000428 <GPIO26_IRQHandler>

2000042a <GPIO27_IRQHandler>:
GPIO27_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1242
 * GPIO27_IRQHandler
 */
    .weak   GPIO27_IRQHandler
    .type   GPIO27_IRQHandler, %function
GPIO27_IRQHandler:
    B .
2000042a:	e7fe      	b.n	2000042a <GPIO27_IRQHandler>

2000042c <GPIO28_IRQHandler>:
GPIO28_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1250
 * GPIO28_IRQHandler
 */
    .weak   GPIO28_IRQHandler
    .type   GPIO28_IRQHandler, %function
GPIO28_IRQHandler:
    B .
2000042c:	e7fe      	b.n	2000042c <GPIO28_IRQHandler>

2000042e <GPIO29_IRQHandler>:
GPIO29_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1258
 * GPIO29_IRQHandler
 */
    .weak   GPIO29_IRQHandler
    .type   GPIO29_IRQHandler, %function
GPIO29_IRQHandler:
    B .
2000042e:	e7fe      	b.n	2000042e <GPIO29_IRQHandler>

20000430 <GPIO30_IRQHandler>:
GPIO30_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1266
 * GPIO30_IRQHandler
 */
    .weak   GPIO30_IRQHandler
    .type   GPIO30_IRQHandler, %function
GPIO30_IRQHandler:
    B .
20000430:	e7fe      	b.n	20000430 <GPIO30_IRQHandler>

20000432 <GPIO31_IRQHandler>:
GPIO31_IRQHandler():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1274
 * GPIO31_IRQHandler
 */
    .weak   GPIO31_IRQHandler
    .type   GPIO31_IRQHandler, %function
GPIO31_IRQHandler:
    B .
20000432:	e7fe      	b.n	20000432 <GPIO31_IRQHandler>

20000434 <mscc_post_hw_cfg_init>:
mscc_post_hw_cfg_init():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
 * mscc_post_hw_cfg_init
 */
    .weak   mscc_post_hw_cfg_init
    .type   mscc_post_hw_cfg_init, %function
mscc_post_hw_cfg_init:
    BX LR
20000434:	4770      	bx	lr

20000436 <RAM_INIT_PATTERN>:
RAM_INIT_PATTERN():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000436:	0000      	.short	0x0000
	...

2000043a <HEAP_INIT_PATTERN>:
HEAP_INIT_PATTERN():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000043a:	a2a2      	.short	0xa2a2
2000043c:	a2a2      	.short	0xa2a2

2000043e <SF2_ESRAM_CR>:
SF2_ESRAM_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000043e:	8000      	.short	0x8000
20000440:	4003      	.short	0x4003

20000442 <SF2_DDR_CR>:
SF2_DDR_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000442:	8008      	.short	0x8008
20000444:	4003      	.short	0x4003

20000446 <SF2_ENVM_REMAP_CR>:
SF2_ENVM_REMAP_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000446:	8010      	.short	0x8010
20000448:	4003      	.short	0x4003

2000044a <SF2_DDRB_NB_SIZE>:
SF2_DDRB_NB_SIZE():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000044a:	8030      	.short	0x8030
2000044c:	4003      	.short	0x4003

2000044e <SF2_DDRB_CR>:
SF2_DDRB_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000044e:	8034      	.short	0x8034
20000450:	4003      	.short	0x4003

20000452 <SF2_EDAC_CR>:
SF2_EDAC_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000452:	8038      	.short	0x8038
20000454:	4003      	.short	0x4003

20000456 <SF2_MDDR_MODE_CR>:
SF2_MDDR_MODE_CR():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000456:	0818      	.short	0x0818
20000458:	00004002 	.word	0x00004002
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:168
    ldr r0, = __stack_start__
2000045c:	2000f000 	.word	0x2000f000
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:169
    ldr r1, =_estack
20000460:	20010000 	.word	0x20010000
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:177
    ldr r0, =SystemInit
20000464:	200004f1 	.word	0x200004f1
	...
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:243
    ldr r0, =__vector_table_load
20000470:	20000000 	.word	0x20000000
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:244
    ldr r1, =__vector_table_start
20000474:	20000000 	.word	0x20000000
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:245
    ldr r2, =_evector_table
20000478:	20000190 	.word	0x20000190
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:252
    ldr r0, =__text_load
2000047c:	200004b0 	.word	0x200004b0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:253
    ldr r1, =__text_start
20000480:	200004b0 	.word	0x200004b0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:254
    ldr r2, =_etext
20000484:	20009248 	.word	0x20009248
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:262
    ldr r0, =__data_load
20000488:	20009250 	.word	0x20009250
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:263
    ldr r1, =__data_start
2000048c:	20009250 	.word	0x20009250
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:264
    ldr r2, =_edata
20000490:	20009c20 	.word	0x20009c20
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:271
    ldr r0, =__bss_start__
20000494:	20009c20 	.word	0x20009c20
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:272
    ldr r1, =__bss_end__
20000498:	2000a880 	.word	0x2000a880
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:289
    ldr r0, =__heap_start__
2000049c:	2000a880 	.word	0x2000a880
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:290
    ldr r1, =_eheap
200004a0:	2000f000 	.word	0x2000f000
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:313
    ldr.w r0, =__libc_init_array
200004a4:	200032b1 	.word	0x200032b1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/startup_m2sxxx.S:323
    ldr pc, =main
200004a8:	20000a49 	.word	0x20000a49
200004ac:	00000000 	.word	0x00000000

Disassembly of section .text:

200004b0 <__do_global_dtors_aux>:
__text_start():
200004b0:	b510      	push	{r4, lr}
200004b2:	4c05      	ldr	r4, [pc, #20]	; (200004c8 <__text_load+0x18>)
200004b4:	7823      	ldrb	r3, [r4, #0]
200004b6:	b933      	cbnz	r3, 200004c6 <__do_global_dtors_aux+0x16>
200004b8:	4b04      	ldr	r3, [pc, #16]	; (200004cc <__text_load+0x1c>)
200004ba:	b113      	cbz	r3, 200004c2 <__do_global_dtors_aux+0x12>
200004bc:	4804      	ldr	r0, [pc, #16]	; (200004d0 <__text_load+0x20>)
200004be:	f3af 8000 	nop.w
200004c2:	2301      	movs	r3, #1
200004c4:	7023      	strb	r3, [r4, #0]
200004c6:	bd10      	pop	{r4, pc}
200004c8:	20009c20 	.word	0x20009c20
200004cc:	00000000 	.word	0x00000000
200004d0:	20009218 	.word	0x20009218

200004d4 <frame_dummy>:
frame_dummy():
200004d4:	b508      	push	{r3, lr}
200004d6:	4b03      	ldr	r3, [pc, #12]	; (200004e4 <frame_dummy+0x10>)
200004d8:	b11b      	cbz	r3, 200004e2 <frame_dummy+0xe>
200004da:	4903      	ldr	r1, [pc, #12]	; (200004e8 <frame_dummy+0x14>)
200004dc:	4803      	ldr	r0, [pc, #12]	; (200004ec <frame_dummy+0x18>)
200004de:	f3af 8000 	nop.w
200004e2:	bd08      	pop	{r3, pc}
200004e4:	00000000 	.word	0x00000000
200004e8:	20009c24 	.word	0x20009c24
200004ec:	20009218 	.word	0x20009218

200004f0 <SystemInit>:
SystemInit():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:433

/***************************************************************************//**
 * See system_m2sxxx.h for details.
 */
void SystemInit(void)
{
200004f0:	b580      	push	{r7, lr}
200004f2:	b082      	sub	sp, #8
200004f4:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:456
     */
#if (MSS_SYS_FACC_INIT_BY_CORTEX == 1)
    complete_clock_config();
#endif

    silicon_workarounds();
200004f6:	f000 f9bb 	bl	20000870 <silicon_workarounds>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:463
    /*--------------------------------------------------------------------------
     * Set STKALIGN to ensure exception stacking starts on 8 bytes address
     * boundary. This ensures compliance with the "Procedure Call Standards for
     * the ARM Architecture" (AAPCS).
     */
    SCB->CCR |= SCB_CCR_STKALIGN_Msk;
200004fa:	4b15      	ldr	r3, [pc, #84]	; (20000550 <SystemInit+0x60>)
200004fc:	695b      	ldr	r3, [r3, #20]
200004fe:	4a14      	ldr	r2, [pc, #80]	; (20000550 <SystemInit+0x60>)
20000500:	f443 7300 	orr.w	r3, r3, #512	; 0x200
20000504:	6153      	str	r3, [r2, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:469

    /*--------------------------------------------------------------------------
     * MDDR configuration
     */
#if MSS_SYS_MDDR_CONFIG_BY_CORTEX
    if(0u == SYSREG->DDR_CR)
20000506:	4b13      	ldr	r3, [pc, #76]	; (20000554 <SystemInit+0x64>)
20000508:	689b      	ldr	r3, [r3, #8]
2000050a:	2b00      	cmp	r3, #0
2000050c:	d105      	bne.n	2000051a <SystemInit+0x2a>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:478
         * to address 0x00000000. If MDDR is remapped to 0x00000000 then we are
         * probably executing this code from MDDR in a debugging session and
         * attempting to reconfigure the MDDR memory controller will cause the
         * Cortex-M3 to crash.
         */
        config_ddr_subsys(&g_m2s_mddr_subsys_config, &g_m2s_mddr_addr->core);
2000050e:	4b12      	ldr	r3, [pc, #72]	; (20000558 <SystemInit+0x68>)
20000510:	681b      	ldr	r3, [r3, #0]
20000512:	4619      	mov	r1, r3
20000514:	4811      	ldr	r0, [pc, #68]	; (2000055c <SystemInit+0x6c>)
20000516:	f000 f912 	bl	2000073e <config_ddr_subsys>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:492
#endif

    /*--------------------------------------------------------------------------
     * Call user defined configuration function.
     */
    mscc_post_hw_cfg_init();
2000051a:	f7ff ff8b 	bl	20000434 <mscc_post_hw_cfg_init>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:525
     * do this here because this signal is only deasserted by the System
     * Controller on a power-on reset. Other types of reset such as a watchdog
     * reset would result in the FPGA fabric being held in reset and getting
     * stuck waiting for the CoreSF2Config INIT_DONE to become asserted.
     */
    SYSREG->SOFT_RST_CR &= ~SYSREG_FPGA_SOFTRESET_MASK;
2000051e:	4b0d      	ldr	r3, [pc, #52]	; (20000554 <SystemInit+0x64>)
20000520:	6c9b      	ldr	r3, [r3, #72]	; 0x48
20000522:	4a0c      	ldr	r2, [pc, #48]	; (20000554 <SystemInit+0x64>)
20000524:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
20000528:	6493      	str	r3, [r2, #72]	; 0x48
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:531

    /*
     * Signal to CoreSF2Reset that peripheral configuration registers have been
     * written.
     */
    CORE_SF2_CFG->CONFIG_DONE |= (CONFIG_1_DONE | CONFIG_2_DONE);
2000052a:	4b0d      	ldr	r3, [pc, #52]	; (20000560 <SystemInit+0x70>)
2000052c:	681b      	ldr	r3, [r3, #0]
2000052e:	4a0c      	ldr	r2, [pc, #48]	; (20000560 <SystemInit+0x70>)
20000530:	f043 0303 	orr.w	r3, r3, #3
20000534:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:536 (discriminator 1)

    /* Wait for INIT_DONE from CoreSF2Reset. */
    do
    {
        init_done = CORE_SF2_CFG->INIT_DONE & INIT_DONE_MASK;
20000536:	4b0a      	ldr	r3, [pc, #40]	; (20000560 <SystemInit+0x70>)
20000538:	685b      	ldr	r3, [r3, #4]
2000053a:	f003 0301 	and.w	r3, r3, #1
2000053e:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:537 (discriminator 1)
    } while (0u == init_done);
20000540:	687b      	ldr	r3, [r7, #4]
20000542:	2b00      	cmp	r3, #0
20000544:	d0f7      	beq.n	20000536 <SystemInit+0x46>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:539
#endif
}
20000546:	bf00      	nop
20000548:	bf00      	nop
2000054a:	3708      	adds	r7, #8
2000054c:	46bd      	mov	sp, r7
2000054e:	bd80      	pop	{r7, pc}
20000550:	e000ed00 	.word	0xe000ed00
20000554:	40038000 	.word	0x40038000
20000558:	200088d0 	.word	0x200088d0
2000055c:	200088d4 	.word	0x200088d4
20000560:	40022000 	.word	0x40022000

20000564 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:558
#define FREQ_1MHZ    1000000u
#define FREQ_25MHZ   25000000u
#define FREQ_50MHZ   50000000u

void SystemCoreClockUpdate(void)
{
20000564:	b580      	push	{r7, lr}
20000566:	b088      	sub	sp, #32
20000568:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:562
    uint32_t controller_pll_init;
    uint32_t clk_src;

    controller_pll_init = SYSREG->MSSDDR_FACC1_CR & CONTROLLER_PLL_INIT_MASK;
2000056a:	4b31      	ldr	r3, [pc, #196]	; (20000630 <SystemCoreClockUpdate+0xcc>)
2000056c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
20000570:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
20000574:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:564

    if(0u == controller_pll_init)
20000576:	69fb      	ldr	r3, [r7, #28]
20000578:	2b00      	cmp	r3, #0
2000057a:	d14e      	bne.n	2000061a <SystemCoreClockUpdate+0xb6>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:569
    {
        /* Normal operations. */
        uint32_t global_mux_sel;

        global_mux_sel = SYSREG->MSSDDR_FACC1_CR & FACC_GLMUX_SEL_MASK;
2000057c:	4b2c      	ldr	r3, [pc, #176]	; (20000630 <SystemCoreClockUpdate+0xcc>)
2000057e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
20000582:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
20000586:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:570
        if(0u == global_mux_sel)
20000588:	697b      	ldr	r3, [r7, #20]
2000058a:	2b00      	cmp	r3, #0
2000058c:	d115      	bne.n	200005ba <SystemCoreClockUpdate+0x56>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:573
        {
            /* MSS clocked from MSS PLL. Use Libero flow defines. */
            SystemCoreClock = MSS_SYS_M3_CLK_FREQ;
2000058e:	4b29      	ldr	r3, [pc, #164]	; (20000634 <SystemCoreClockUpdate+0xd0>)
20000590:	4a29      	ldr	r2, [pc, #164]	; (20000638 <SystemCoreClockUpdate+0xd4>)
20000592:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:574
            g_FrequencyPCLK0 = MSS_SYS_APB_0_CLK_FREQ;
20000594:	4b29      	ldr	r3, [pc, #164]	; (2000063c <SystemCoreClockUpdate+0xd8>)
20000596:	4a28      	ldr	r2, [pc, #160]	; (20000638 <SystemCoreClockUpdate+0xd4>)
20000598:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:575
            g_FrequencyPCLK1 = MSS_SYS_APB_1_CLK_FREQ;
2000059a:	4b29      	ldr	r3, [pc, #164]	; (20000640 <SystemCoreClockUpdate+0xdc>)
2000059c:	4a26      	ldr	r2, [pc, #152]	; (20000638 <SystemCoreClockUpdate+0xd4>)
2000059e:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:576
            g_FrequencyPCLK2 = MSS_SYS_APB_2_CLK_FREQ;
200005a0:	4b28      	ldr	r3, [pc, #160]	; (20000644 <SystemCoreClockUpdate+0xe0>)
200005a2:	4a29      	ldr	r2, [pc, #164]	; (20000648 <SystemCoreClockUpdate+0xe4>)
200005a4:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:577
            g_FrequencyFIC0 = MSS_SYS_FIC_0_CLK_FREQ;
200005a6:	4b29      	ldr	r3, [pc, #164]	; (2000064c <SystemCoreClockUpdate+0xe8>)
200005a8:	4a23      	ldr	r2, [pc, #140]	; (20000638 <SystemCoreClockUpdate+0xd4>)
200005aa:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:578
            g_FrequencyFIC1 = MSS_SYS_FIC_1_CLK_FREQ;
200005ac:	4b28      	ldr	r3, [pc, #160]	; (20000650 <SystemCoreClockUpdate+0xec>)
200005ae:	4a22      	ldr	r2, [pc, #136]	; (20000638 <SystemCoreClockUpdate+0xd4>)
200005b0:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:579
            g_FrequencyFIC64 = MSS_SYS_FIC64_CLK_FREQ;
200005b2:	4b28      	ldr	r3, [pc, #160]	; (20000654 <SystemCoreClockUpdate+0xf0>)
200005b4:	4a28      	ldr	r2, [pc, #160]	; (20000658 <SystemCoreClockUpdate+0xf4>)
200005b6:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:627
    {
        /* PLL initialization mode. Running from 25/50MHZ RC oscillator. */
        clk_src = get_rcosc_25_50mhz_frequency();
        set_clock_frequency_globals(clk_src);
    }
}
200005b8:	e036      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:584
            const uint8_t standby_clock_lut[8] = { RCOSC_25_50MHZ_CLK_SRC,
200005ba:	4a28      	ldr	r2, [pc, #160]	; (2000065c <SystemCoreClockUpdate+0xf8>)
200005bc:	1d3b      	adds	r3, r7, #4
200005be:	e892 0003 	ldmia.w	r2, {r0, r1}
200005c2:	e883 0003 	stmia.w	r3, {r0, r1}
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:596
            standby_sel = (SYSREG->MSSDDR_FACC2_CR >> FACC_STANDBY_SHIFT) & FACC_STANDBY_SEL_MASK;
200005c6:	4b1a      	ldr	r3, [pc, #104]	; (20000630 <SystemCoreClockUpdate+0xcc>)
200005c8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
200005cc:	099b      	lsrs	r3, r3, #6
200005ce:	f003 0307 	and.w	r3, r3, #7
200005d2:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:597
            clock_source = standby_clock_lut[standby_sel];
200005d4:	1d3a      	adds	r2, r7, #4
200005d6:	693b      	ldr	r3, [r7, #16]
200005d8:	4413      	add	r3, r2
200005da:	781b      	ldrb	r3, [r3, #0]
200005dc:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:598
            switch(clock_source)
200005de:	7bfb      	ldrb	r3, [r7, #15]
200005e0:	2b02      	cmp	r3, #2
200005e2:	d012      	beq.n	2000060a <SystemCoreClockUpdate+0xa6>
200005e4:	2b02      	cmp	r3, #2
200005e6:	dc14      	bgt.n	20000612 <SystemCoreClockUpdate+0xae>
200005e8:	2b00      	cmp	r3, #0
200005ea:	d002      	beq.n	200005f2 <SystemCoreClockUpdate+0x8e>
200005ec:	2b01      	cmp	r3, #1
200005ee:	d007      	beq.n	20000600 <SystemCoreClockUpdate+0x9c>
200005f0:	e00f      	b.n	20000612 <SystemCoreClockUpdate+0xae>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:601
                    clk_src = get_rcosc_25_50mhz_frequency();
200005f2:	f000 f837 	bl	20000664 <get_rcosc_25_50mhz_frequency>
200005f6:	61b8      	str	r0, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:602
                    set_clock_frequency_globals(clk_src);
200005f8:	69b8      	ldr	r0, [r7, #24]
200005fa:	f000 f851 	bl	200006a0 <set_clock_frequency_globals>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:603
                break;
200005fe:	e013      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:606
                    set_clock_frequency_globals(FREQ_32KHZ);
20000600:	f44f 4000 	mov.w	r0, #32768	; 0x8000
20000604:	f000 f84c 	bl	200006a0 <set_clock_frequency_globals>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:607
                break;
20000608:	e00e      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:610
                    set_clock_frequency_globals(FREQ_1MHZ);
2000060a:	4815      	ldr	r0, [pc, #84]	; (20000660 <SystemCoreClockUpdate+0xfc>)
2000060c:	f000 f848 	bl	200006a0 <set_clock_frequency_globals>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:611
                break;
20000610:	e00a      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:616
                    set_clock_frequency_globals(FREQ_1MHZ);
20000612:	4813      	ldr	r0, [pc, #76]	; (20000660 <SystemCoreClockUpdate+0xfc>)
20000614:	f000 f844 	bl	200006a0 <set_clock_frequency_globals>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:617
                break;
20000618:	e006      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:624
        clk_src = get_rcosc_25_50mhz_frequency();
2000061a:	f000 f823 	bl	20000664 <get_rcosc_25_50mhz_frequency>
2000061e:	61b8      	str	r0, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:625
        set_clock_frequency_globals(clk_src);
20000620:	69b8      	ldr	r0, [r7, #24]
20000622:	f000 f83d 	bl	200006a0 <set_clock_frequency_globals>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:627
}
20000626:	e7ff      	b.n	20000628 <SystemCoreClockUpdate+0xc4>
20000628:	bf00      	nop
2000062a:	3720      	adds	r7, #32
2000062c:	46bd      	mov	sp, r7
2000062e:	bd80      	pop	{r7, pc}
20000630:	40038000 	.word	0x40038000
20000634:	20009250 	.word	0x20009250
20000638:	02faf080 	.word	0x02faf080
2000063c:	20009254 	.word	0x20009254
20000640:	20009258 	.word	0x20009258
20000644:	2000925c 	.word	0x2000925c
20000648:	00bebc20 	.word	0x00bebc20
2000064c:	20009260 	.word	0x20009260
20000650:	20009264 	.word	0x20009264
20000654:	20009268 	.word	0x20009268
20000658:	05f5e100 	.word	0x05f5e100
2000065c:	200089e0 	.word	0x200089e0
20000660:	000f4240 	.word	0x000f4240

20000664 <get_rcosc_25_50mhz_frequency>:
get_rcosc_25_50mhz_frequency():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:633

/***************************************************************************//**
 * Find out frequency generated by the 25_50mhz RC osciallator.
 */
static uint32_t get_rcosc_25_50mhz_frequency(void)
{
20000664:	b480      	push	{r7}
20000666:	b083      	sub	sp, #12
20000668:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:637
    uint32_t rcosc_div2;
    uint32_t rcosc_frequency;

    rcosc_div2 = SYSREG->MSSDDR_PLL_STATUS & RCOSC_DIV2_MASK;
2000066a:	4b0a      	ldr	r3, [pc, #40]	; (20000694 <get_rcosc_25_50mhz_frequency+0x30>)
2000066c:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
20000670:	f003 0304 	and.w	r3, r3, #4
20000674:	603b      	str	r3, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:638
    if(0u == rcosc_div2)
20000676:	683b      	ldr	r3, [r7, #0]
20000678:	2b00      	cmp	r3, #0
2000067a:	d102      	bne.n	20000682 <get_rcosc_25_50mhz_frequency+0x1e>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:641
    {
        /* 25_50mhz oscillator is configured for 25 MHz operations. */
        rcosc_frequency = FREQ_25MHZ;
2000067c:	4b06      	ldr	r3, [pc, #24]	; (20000698 <get_rcosc_25_50mhz_frequency+0x34>)
2000067e:	607b      	str	r3, [r7, #4]
20000680:	e001      	b.n	20000686 <get_rcosc_25_50mhz_frequency+0x22>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:646
    }
    else
    {
        /* 25_50mhz oscillator is configured for 50 MHz operations. */
        rcosc_frequency = FREQ_50MHZ;
20000682:	4b06      	ldr	r3, [pc, #24]	; (2000069c <get_rcosc_25_50mhz_frequency+0x38>)
20000684:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:649
    }

    return rcosc_frequency;
20000686:	687b      	ldr	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:650
}
20000688:	4618      	mov	r0, r3
2000068a:	370c      	adds	r7, #12
2000068c:	46bd      	mov	sp, r7
2000068e:	bc80      	pop	{r7}
20000690:	4770      	bx	lr
20000692:	bf00      	nop
20000694:	40038000 	.word	0x40038000
20000698:	017d7840 	.word	0x017d7840
2000069c:	02faf080 	.word	0x02faf080

200006a0 <set_clock_frequency_globals>:
set_clock_frequency_globals():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:665
        - g_FrequencyFIC0
        - g_FrequencyFIC1
        - g_FrequencyFIC64
 */
static void set_clock_frequency_globals(uint32_t standby_clk)
{
200006a0:	b480      	push	{r7}
200006a2:	b083      	sub	sp, #12
200006a4:	af00      	add	r7, sp, #0
200006a6:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:666
    SystemCoreClock = standby_clk;
200006a8:	4a0c      	ldr	r2, [pc, #48]	; (200006dc <set_clock_frequency_globals+0x3c>)
200006aa:	687b      	ldr	r3, [r7, #4]
200006ac:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:667
    g_FrequencyPCLK0 = standby_clk;
200006ae:	4a0c      	ldr	r2, [pc, #48]	; (200006e0 <set_clock_frequency_globals+0x40>)
200006b0:	687b      	ldr	r3, [r7, #4]
200006b2:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:668
    g_FrequencyPCLK1 = standby_clk;
200006b4:	4a0b      	ldr	r2, [pc, #44]	; (200006e4 <set_clock_frequency_globals+0x44>)
200006b6:	687b      	ldr	r3, [r7, #4]
200006b8:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:669
    g_FrequencyPCLK2 = MSS_SYS_APB_2_CLK_FREQ;
200006ba:	4b0b      	ldr	r3, [pc, #44]	; (200006e8 <set_clock_frequency_globals+0x48>)
200006bc:	4a0b      	ldr	r2, [pc, #44]	; (200006ec <set_clock_frequency_globals+0x4c>)
200006be:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:670
    g_FrequencyFIC0 = standby_clk;
200006c0:	4a0b      	ldr	r2, [pc, #44]	; (200006f0 <set_clock_frequency_globals+0x50>)
200006c2:	687b      	ldr	r3, [r7, #4]
200006c4:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:671
    g_FrequencyFIC1 = standby_clk;
200006c6:	4a0b      	ldr	r2, [pc, #44]	; (200006f4 <set_clock_frequency_globals+0x54>)
200006c8:	687b      	ldr	r3, [r7, #4]
200006ca:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:672
    g_FrequencyFIC64 = standby_clk;
200006cc:	4a0a      	ldr	r2, [pc, #40]	; (200006f8 <set_clock_frequency_globals+0x58>)
200006ce:	687b      	ldr	r3, [r7, #4]
200006d0:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:673
}
200006d2:	bf00      	nop
200006d4:	370c      	adds	r7, #12
200006d6:	46bd      	mov	sp, r7
200006d8:	bc80      	pop	{r7}
200006da:	4770      	bx	lr
200006dc:	20009250 	.word	0x20009250
200006e0:	20009254 	.word	0x20009254
200006e4:	20009258 	.word	0x20009258
200006e8:	2000925c 	.word	0x2000925c
200006ec:	00bebc20 	.word	0x00bebc20
200006f0:	20009260 	.word	0x20009260
200006f4:	20009264 	.word	0x20009264
200006f8:	20009268 	.word	0x20009268

200006fc <copy_cfg16_to_regs>:
copy_cfg16_to_regs():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:685
(
    volatile uint32_t * p_regs,
    const uint16_t * p_cfg,
    uint32_t nb_16bit_words
)
{
200006fc:	b480      	push	{r7}
200006fe:	b087      	sub	sp, #28
20000700:	af00      	add	r7, sp, #0
20000702:	60f8      	str	r0, [r7, #12]
20000704:	60b9      	str	r1, [r7, #8]
20000706:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:688
    uint32_t inc;

    for(inc = 0u; inc < nb_16bit_words; ++inc)
20000708:	2300      	movs	r3, #0
2000070a:	617b      	str	r3, [r7, #20]
2000070c:	e00d      	b.n	2000072a <copy_cfg16_to_regs+0x2e>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:690 (discriminator 3)
    {
        p_regs[inc] = p_cfg[inc];
2000070e:	697b      	ldr	r3, [r7, #20]
20000710:	005b      	lsls	r3, r3, #1
20000712:	68ba      	ldr	r2, [r7, #8]
20000714:	4413      	add	r3, r2
20000716:	8819      	ldrh	r1, [r3, #0]
20000718:	697b      	ldr	r3, [r7, #20]
2000071a:	009b      	lsls	r3, r3, #2
2000071c:	68fa      	ldr	r2, [r7, #12]
2000071e:	4413      	add	r3, r2
20000720:	460a      	mov	r2, r1
20000722:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:688 (discriminator 3)
    for(inc = 0u; inc < nb_16bit_words; ++inc)
20000724:	697b      	ldr	r3, [r7, #20]
20000726:	3301      	adds	r3, #1
20000728:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:688 (discriminator 1)
2000072a:	697a      	ldr	r2, [r7, #20]
2000072c:	687b      	ldr	r3, [r7, #4]
2000072e:	429a      	cmp	r2, r3
20000730:	d3ed      	bcc.n	2000070e <copy_cfg16_to_regs+0x12>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:692
    }
}
20000732:	bf00      	nop
20000734:	bf00      	nop
20000736:	371c      	adds	r7, #28
20000738:	46bd      	mov	sp, r7
2000073a:	bc80      	pop	{r7}
2000073c:	4770      	bx	lr

2000073e <config_ddr_subsys>:
config_ddr_subsys():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:727
static void config_ddr_subsys
(
    const ddr_subsys_cfg_t * p_ddr_subsys_cfg,
    DDRCore_TypeDef * p_ddr_subsys_regs
)
{
2000073e:	b580      	push	{r7, lr}
20000740:	b084      	sub	sp, #16
20000742:	af00      	add	r7, sp, #0
20000744:	6078      	str	r0, [r7, #4]
20000746:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:734
    const uint16_t * p_cfg;

    /*--------------------------------------------------------------------------
     * Configure DDR controller part of the MDDR subsystem.
     */
    p_cfg = &p_ddr_subsys_cfg->ddrc.DYN_SOFT_RESET_CR;
20000748:	687b      	ldr	r3, [r7, #4]
2000074a:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:735
    p_regs = &p_ddr_subsys_regs->ddrc.DYN_SOFT_RESET_CR;
2000074c:	683b      	ldr	r3, [r7, #0]
2000074e:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:737

    copy_cfg16_to_regs(p_regs, p_cfg, NB_OF_DDRC_REGS_TO_CONFIG);
20000750:	2239      	movs	r2, #57	; 0x39
20000752:	68f9      	ldr	r1, [r7, #12]
20000754:	68b8      	ldr	r0, [r7, #8]
20000756:	f7ff ffd1 	bl	200006fc <copy_cfg16_to_regs>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:742

    /*--------------------------------------------------------------------------
     * Configure DDR PHY.
     */
    p_cfg = &p_ddr_subsys_cfg->phy.LOOPBACK_TEST_CR;
2000075a:	687b      	ldr	r3, [r7, #4]
2000075c:	3372      	adds	r3, #114	; 0x72
2000075e:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:743
    p_regs = &p_ddr_subsys_regs->phy.LOOPBACK_TEST_CR;
20000760:	683b      	ldr	r3, [r7, #0]
20000762:	f503 7307 	add.w	r3, r3, #540	; 0x21c
20000766:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:745

    copy_cfg16_to_regs(p_regs, p_cfg, NB_OF_DDR_PHY_REGS_TO_CONFIG);
20000768:	2241      	movs	r2, #65	; 0x41
2000076a:	68f9      	ldr	r1, [r7, #12]
2000076c:	68b8      	ldr	r0, [r7, #8]
2000076e:	f7ff ffc5 	bl	200006fc <copy_cfg16_to_regs>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:750

    /*--------------------------------------------------------------------------
     * Configure DDR FIC.
     */
    p_ddr_subsys_regs->fic.NB_ADDR_CR = p_ddr_subsys_cfg->fic.NB_ADDR_CR;
20000772:	687b      	ldr	r3, [r7, #4]
20000774:	f8b3 30f4 	ldrh.w	r3, [r3, #244]	; 0xf4
20000778:	461a      	mov	r2, r3
2000077a:	683b      	ldr	r3, [r7, #0]
2000077c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:751
    p_ddr_subsys_regs->fic.NBRWB_SIZE_CR = p_ddr_subsys_cfg->fic.NBRWB_SIZE_CR;
20000780:	687b      	ldr	r3, [r7, #4]
20000782:	f8b3 30f6 	ldrh.w	r3, [r3, #246]	; 0xf6
20000786:	461a      	mov	r2, r3
20000788:	683b      	ldr	r3, [r7, #0]
2000078a:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:752
    p_ddr_subsys_regs->fic.WB_TIMEOUT_CR = p_ddr_subsys_cfg->fic.WB_TIMEOUT_CR;
2000078e:	687b      	ldr	r3, [r7, #4]
20000790:	f8b3 30f8 	ldrh.w	r3, [r3, #248]	; 0xf8
20000794:	461a      	mov	r2, r3
20000796:	683b      	ldr	r3, [r7, #0]
20000798:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:753
    p_ddr_subsys_regs->fic.HPD_SW_RW_EN_CR = p_ddr_subsys_cfg->fic.HPD_SW_RW_EN_CR;
2000079c:	687b      	ldr	r3, [r7, #4]
2000079e:	f8b3 30fa 	ldrh.w	r3, [r3, #250]	; 0xfa
200007a2:	461a      	mov	r2, r3
200007a4:	683b      	ldr	r3, [r7, #0]
200007a6:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:754
    p_ddr_subsys_regs->fic.HPD_SW_RW_INVAL_CR = p_ddr_subsys_cfg->fic.HPD_SW_RW_INVAL_CR;
200007aa:	687b      	ldr	r3, [r7, #4]
200007ac:	f8b3 30fc 	ldrh.w	r3, [r3, #252]	; 0xfc
200007b0:	461a      	mov	r2, r3
200007b2:	683b      	ldr	r3, [r7, #0]
200007b4:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:755
    p_ddr_subsys_regs->fic.SW_WR_ERCLR_CR = p_ddr_subsys_cfg->fic.SW_WR_ERCLR_CR;
200007b8:	687b      	ldr	r3, [r7, #4]
200007ba:	f8b3 30fe 	ldrh.w	r3, [r3, #254]	; 0xfe
200007be:	461a      	mov	r2, r3
200007c0:	683b      	ldr	r3, [r7, #0]
200007c2:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:756
    p_ddr_subsys_regs->fic.ERR_INT_ENABLE_CR = p_ddr_subsys_cfg->fic.ERR_INT_ENABLE_CR;
200007c6:	687b      	ldr	r3, [r7, #4]
200007c8:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
200007cc:	461a      	mov	r2, r3
200007ce:	683b      	ldr	r3, [r7, #0]
200007d0:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:757
    p_ddr_subsys_regs->fic.NUM_AHB_MASTERS_CR = p_ddr_subsys_cfg->fic.NUM_AHB_MASTERS_CR;
200007d4:	687b      	ldr	r3, [r7, #4]
200007d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
200007da:	461a      	mov	r2, r3
200007dc:	683b      	ldr	r3, [r7, #0]
200007de:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:758
    p_ddr_subsys_regs->fic.LOCK_TIMEOUTVAL_CR[0] = p_ddr_subsys_cfg->fic.LOCK_TIMEOUTVAL_1_CR;
200007e2:	687b      	ldr	r3, [r7, #4]
200007e4:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
200007e8:	461a      	mov	r2, r3
200007ea:	683b      	ldr	r3, [r7, #0]
200007ec:	f8c3 2440 	str.w	r2, [r3, #1088]	; 0x440
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:759
    p_ddr_subsys_regs->fic.LOCK_TIMEOUTVAL_CR[1] = p_ddr_subsys_cfg->fic.LOCK_TIMEOUTVAL_2_CR;
200007f0:	687b      	ldr	r3, [r7, #4]
200007f2:	f8b3 3106 	ldrh.w	r3, [r3, #262]	; 0x106
200007f6:	461a      	mov	r2, r3
200007f8:	683b      	ldr	r3, [r7, #0]
200007fa:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:760
    p_ddr_subsys_regs->fic.LOCK_TIMEOUT_EN_CR = p_ddr_subsys_cfg->fic.LOCK_TIMEOUT_EN_CR;
200007fe:	687b      	ldr	r3, [r7, #4]
20000800:	f8b3 3108 	ldrh.w	r3, [r3, #264]	; 0x108
20000804:	461a      	mov	r2, r3
20000806:	683b      	ldr	r3, [r7, #0]
20000808:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:765

    /*--------------------------------------------------------------------------
     * Enable DDR.
     */
    p_ddr_subsys_regs->ddrc.DYN_SOFT_RESET_CR = 0x01u;
2000080c:	683b      	ldr	r3, [r7, #0]
2000080e:	2201      	movs	r2, #1
20000810:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:767

    while(0x0000u == p_ddr_subsys_regs->ddrc.DDRC_SR)
20000812:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:767 (discriminator 1)
20000814:	683b      	ldr	r3, [r7, #0]
20000816:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
2000081a:	2b00      	cmp	r3, #0
2000081c:	d0fa      	beq.n	20000814 <config_ddr_subsys+0xd6>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:771
    {
        ;
    }
}
2000081e:	bf00      	nop
20000820:	bf00      	nop
20000822:	3710      	adds	r7, #16
20000824:	46bd      	mov	sp, r7
20000826:	bd80      	pop	{r7, pc}

20000828 <get_silicon_revision>:
get_silicon_revision():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:916

/*------------------------------------------------------------------------------
  Retrieve silicon revision from system registers.
 */
static uint32_t get_silicon_revision(void)
{
20000828:	b480      	push	{r7}
2000082a:	b083      	sub	sp, #12
2000082c:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:920
    uint32_t silicon_revision;
    uint32_t device_version;

    device_version = SYSREG->DEVICE_VERSION;
2000082e:	4b0e      	ldr	r3, [pc, #56]	; (20000868 <get_silicon_revision+0x40>)
20000830:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
20000834:	603b      	str	r3, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:921
    switch(device_version)
20000836:	683b      	ldr	r3, [r7, #0]
20000838:	f64f 0202 	movw	r2, #63490	; 0xf802
2000083c:	4293      	cmp	r3, r2
2000083e:	d004      	beq.n	2000084a <get_silicon_revision+0x22>
20000840:	683b      	ldr	r3, [r7, #0]
20000842:	4a0a      	ldr	r2, [pc, #40]	; (2000086c <get_silicon_revision+0x44>)
20000844:	4293      	cmp	r3, r2
20000846:	d003      	beq.n	20000850 <get_silicon_revision+0x28>
20000848:	e005      	b.n	20000856 <get_silicon_revision+0x2e>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:924
    {
        case 0x0000F802:
            silicon_revision = M2S050_REV_A_SILICON;
2000084a:	2301      	movs	r3, #1
2000084c:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:925
            break;
2000084e:	e005      	b.n	2000085c <get_silicon_revision+0x34>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:928

        case 0x0001F802:
            silicon_revision = M2S050_REV_B_SILICON;
20000850:	2302      	movs	r3, #2
20000852:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:929
            break;
20000854:	e002      	b.n	2000085c <get_silicon_revision+0x34>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:932

        default:
            silicon_revision = UNKNOWN_SILICON_REV;
20000856:	2300      	movs	r3, #0
20000858:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:933
            break;
2000085a:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:936
    }

    return silicon_revision;
2000085c:	687b      	ldr	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:937
}
2000085e:	4618      	mov	r0, r3
20000860:	370c      	adds	r7, #12
20000862:	46bd      	mov	sp, r7
20000864:	bc80      	pop	{r7}
20000866:	4770      	bx	lr
20000868:	40038000 	.word	0x40038000
2000086c:	0001f802 	.word	0x0001f802

20000870 <silicon_workarounds>:
silicon_workarounds():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:943

/*------------------------------------------------------------------------------
  Workarounds for various silicon versions.
 */
static void silicon_workarounds(void)
{
20000870:	b580      	push	{r7, lr}
20000872:	b082      	sub	sp, #8
20000874:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:946
    uint32_t silicon_revision;

    silicon_revision = get_silicon_revision();
20000876:	f7ff ffd7 	bl	20000828 <get_silicon_revision>
2000087a:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:948

    switch(silicon_revision)
2000087c:	687b      	ldr	r3, [r7, #4]
2000087e:	2b01      	cmp	r3, #1
20000880:	d102      	bne.n	20000888 <silicon_workarounds+0x18>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:951
    {
        case M2S050_REV_A_SILICON:
            m2s050_rev_a_workarounds();
20000882:	f000 f807 	bl	20000894 <m2s050_rev_a_workarounds>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:952
            break;
20000886:	e000      	b.n	2000088a <silicon_workarounds+0x1a>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:959
        case M2S050_REV_B_SILICON:
            /* Fall through. */
        case UNKNOWN_SILICON_REV:
            /* Fall through. */
        default:
            break;
20000888:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:961
    }
}
2000088a:	bf00      	nop
2000088c:	3708      	adds	r7, #8
2000088e:	46bd      	mov	sp, r7
20000890:	bd80      	pop	{r7, pc}
	...

20000894 <m2s050_rev_a_workarounds>:
m2s050_rev_a_workarounds():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:967

/*------------------------------------------------------------------------------
  Silicon workarounds for M2S050 rev A.
 */
static void m2s050_rev_a_workarounds(void)
{
20000894:	b480      	push	{r7}
20000896:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:972
    /*--------------------------------------------------------------------------
     * Work around a couple of silicon issues:
     */
    /* DDR_CLK_EN <- 1 */
    SYSREG->MSSDDR_FACC1_CR |= (uint32_t)1 << DDR_CLK_EN_SHIFT;
20000898:	4b09      	ldr	r3, [pc, #36]	; (200008c0 <m2s050_rev_a_workarounds+0x2c>)
2000089a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
2000089e:	4a08      	ldr	r2, [pc, #32]	; (200008c0 <m2s050_rev_a_workarounds+0x2c>)
200008a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
200008a4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:975

    /* CONTROLLER_PLL_INIT <- 0 */
    SYSREG->MSSDDR_FACC1_CR = SYSREG->MSSDDR_FACC1_CR & ~CONTROLLER_PLL_INIT_MASK;
200008a8:	4b05      	ldr	r3, [pc, #20]	; (200008c0 <m2s050_rev_a_workarounds+0x2c>)
200008aa:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
200008ae:	4a04      	ldr	r2, [pc, #16]	; (200008c0 <m2s050_rev_a_workarounds+0x2c>)
200008b0:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
200008b4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/system_m2sxxx.c:976
}
200008b8:	bf00      	nop
200008ba:	46bd      	mov	sp, r7
200008bc:	bc80      	pop	{r7}
200008be:	4770      	bx	lr
200008c0:	40038000 	.word	0x40038000

200008c4 <_close>:
_close():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:85

/*==============================================================================
 * Close a file.
 */
int _close(int file)
{
200008c4:	b480      	push	{r7}
200008c6:	b083      	sub	sp, #12
200008c8:	af00      	add	r7, sp, #0
200008ca:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:86
    return -1;
200008cc:	f04f 33ff 	mov.w	r3, #4294967295
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:87
}
200008d0:	4618      	mov	r0, r3
200008d2:	370c      	adds	r7, #12
200008d4:	46bd      	mov	sp, r7
200008d6:	bc80      	pop	{r7}
200008d8:	4770      	bx	lr

200008da <_exit>:
_exit():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:102

/*==============================================================================
 * Exit a program without cleaning up files.
 */
void _exit( int code )
{
200008da:	b480      	push	{r7}
200008dc:	b083      	sub	sp, #12
200008de:	af00      	add	r7, sp, #0
200008e0:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:104 (discriminator 1)
    /* Should we force a system reset? */
    while( 1 )
200008e2:	e7fe      	b.n	200008e2 <_exit+0x8>

200008e4 <_fstat>:
_fstat():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:123

/*==============================================================================
 * Status of an open file.
 */
int _fstat(int file, struct stat *st)
{
200008e4:	b480      	push	{r7}
200008e6:	b083      	sub	sp, #12
200008e8:	af00      	add	r7, sp, #0
200008ea:	6078      	str	r0, [r7, #4]
200008ec:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:124
    st->st_mode = S_IFCHR;
200008ee:	683b      	ldr	r3, [r7, #0]
200008f0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
200008f4:	605a      	str	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:125
    return 0;
200008f6:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:126
}
200008f8:	4618      	mov	r0, r3
200008fa:	370c      	adds	r7, #12
200008fc:	46bd      	mov	sp, r7
200008fe:	bc80      	pop	{r7}
20000900:	4770      	bx	lr

20000902 <_isatty>:
_isatty():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:140

/*==============================================================================
 * Query whether output stream is a terminal.
 */
int _isatty(int file)
{
20000902:	b480      	push	{r7}
20000904:	b083      	sub	sp, #12
20000906:	af00      	add	r7, sp, #0
20000908:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:141
    return 1;
2000090a:	2301      	movs	r3, #1
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:142
}
2000090c:	4618      	mov	r0, r3
2000090e:	370c      	adds	r7, #12
20000910:	46bd      	mov	sp, r7
20000912:	bc80      	pop	{r7}
20000914:	4770      	bx	lr

20000916 <_lseek>:
_lseek():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:166

/*==============================================================================
 * Set position in a file.
 */
int _lseek(int file, int ptr, int dir)
{
20000916:	b480      	push	{r7}
20000918:	b085      	sub	sp, #20
2000091a:	af00      	add	r7, sp, #0
2000091c:	60f8      	str	r0, [r7, #12]
2000091e:	60b9      	str	r1, [r7, #8]
20000920:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:167
    return 0;
20000922:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:168
}
20000924:	4618      	mov	r0, r3
20000926:	3714      	adds	r7, #20
20000928:	46bd      	mov	sp, r7
2000092a:	bc80      	pop	{r7}
2000092c:	4770      	bx	lr

2000092e <_read>:
_read():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:182

/*==============================================================================
 * Read from a file.
 */
int _read(int file, char *ptr, int len)
{
2000092e:	b480      	push	{r7}
20000930:	b085      	sub	sp, #20
20000932:	af00      	add	r7, sp, #0
20000934:	60f8      	str	r0, [r7, #12]
20000936:	60b9      	str	r1, [r7, #8]
20000938:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:183
    return 0;
2000093a:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:184
}
2000093c:	4618      	mov	r0, r3
2000093e:	3714      	adds	r7, #20
20000940:	46bd      	mov	sp, r7
20000942:	bc80      	pop	{r7}
20000944:	4770      	bx	lr
	...

20000948 <_write_r>:
_write_r():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:193
 * all files, including stdout�so if you need to generate any output, for
 * example to a serial port for debugging, you should make your minimal write
 * capable of doing this.
 */
int _write_r( void * reent, int file, char * ptr, int len )
{
20000948:	b580      	push	{r7, lr}
2000094a:	b084      	sub	sp, #16
2000094c:	af00      	add	r7, sp, #0
2000094e:	60f8      	str	r0, [r7, #12]
20000950:	60b9      	str	r1, [r7, #8]
20000952:	607a      	str	r2, [r7, #4]
20000954:	603b      	str	r3, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:218
    return len;
#else
    #ifdef MSCC_STDIO_THRU_CORE_UART_APB   /* MICROSEMI_STDIO_THRU_CORE_UART */


    if ( !g_stdio_uart_init_done )
20000956:	4b10      	ldr	r3, [pc, #64]	; (20000998 <_write_r+0x50>)
20000958:	681b      	ldr	r3, [r3, #0]
2000095a:	2b00      	cmp	r3, #0
2000095c:	d110      	bne.n	20000980 <_write_r+0x38>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:227
             * This value is calculated using the following equation:
             *      BAUD_VALUE = (CLOCK / (16 * BAUD_RATE)) - 1
             *****************************************************************************/
            UART_init( &g_stdio_uart,
                       MSCC_STDIO_UART_BASE_ADDR,
                       ((SYS_CLK_FREQ/(16 * MSCC_STDIO_BAUD_VALUE))-1),
2000095e:	4b0f      	ldr	r3, [pc, #60]	; (2000099c <_write_r+0x54>)
20000960:	681b      	ldr	r3, [r3, #0]
20000962:	4a0f      	ldr	r2, [pc, #60]	; (200009a0 <_write_r+0x58>)
20000964:	fba2 2303 	umull	r2, r3, r2, r3
20000968:	0d1b      	lsrs	r3, r3, #20
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:225
            UART_init( &g_stdio_uart,
2000096a:	b29b      	uxth	r3, r3
2000096c:	3b01      	subs	r3, #1
2000096e:	b29a      	uxth	r2, r3
20000970:	2301      	movs	r3, #1
20000972:	490c      	ldr	r1, [pc, #48]	; (200009a4 <_write_r+0x5c>)
20000974:	480c      	ldr	r0, [pc, #48]	; (200009a8 <_write_r+0x60>)
20000976:	f000 f9bb 	bl	20000cf0 <UART_init>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:230
                       (DATA_8_BITS | NO_PARITY));

            g_stdio_uart_init_done = 1;
2000097a:	4b07      	ldr	r3, [pc, #28]	; (20000998 <_write_r+0x50>)
2000097c:	2201      	movs	r2, #1
2000097e:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:237

    /*--------------------------------------------------------------------------
         * Output text to the UART.
         */
        //MSS_UART_polled_tx(gp_my_uart, (uint8_t *)ptr, len);
        UART_send( &g_stdio_uart, (uint8_t *)ptr, len );
20000980:	683b      	ldr	r3, [r7, #0]
20000982:	461a      	mov	r2, r3
20000984:	6879      	ldr	r1, [r7, #4]
20000986:	4808      	ldr	r0, [pc, #32]	; (200009a8 <_write_r+0x60>)
20000988:	f000 fa39 	bl	20000dfe <UART_send>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:239

        return len;
2000098c:	683b      	ldr	r3, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:247
     #else

      return 0;
    #endif
#endif  /* MICROSEMI_STDIO_THRU_UART */
}
2000098e:	4618      	mov	r0, r3
20000990:	3710      	adds	r7, #16
20000992:	46bd      	mov	sp, r7
20000994:	bd80      	pop	{r7, pc}
20000996:	bf00      	nop
20000998:	20009c3c 	.word	0x20009c3c
2000099c:	20009254 	.word	0x20009254
200009a0:	91a2b3c5 	.word	0x91a2b3c5
200009a4:	50001000 	.word	0x50001000
200009a8:	20009c40 	.word	0x20009c40

200009ac <_sbrk>:
_sbrk():
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:256
 * it is useful to have a working implementation. The following suffices for a
 * standalone system; it exploits the symbol _end automatically defined by the
 * GNU linker. 
 */
caddr_t _sbrk(int incr)
{
200009ac:	b580      	push	{r7, lr}
200009ae:	b086      	sub	sp, #24
200009b0:	af00      	add	r7, sp, #0
200009b2:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:262
    extern char _end;       /* Defined by the linker */
    static char *heap_end;
    char *prev_heap_end;
    char * stack_ptr;
    
    if (heap_end == 0)
200009b4:	4b1f      	ldr	r3, [pc, #124]	; (20000a34 <_sbrk+0x88>)
200009b6:	681b      	ldr	r3, [r3, #0]
200009b8:	2b00      	cmp	r3, #0
200009ba:	d102      	bne.n	200009c2 <_sbrk+0x16>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:264
    {
      heap_end = &_end;
200009bc:	4b1d      	ldr	r3, [pc, #116]	; (20000a34 <_sbrk+0x88>)
200009be:	4a1e      	ldr	r2, [pc, #120]	; (20000a38 <_sbrk+0x8c>)
200009c0:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:267
    }
    
    prev_heap_end = heap_end;
200009c2:	4b1c      	ldr	r3, [pc, #112]	; (20000a34 <_sbrk+0x88>)
200009c4:	681b      	ldr	r3, [r3, #0]
200009c6:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:269
    
    asm volatile ("MRS %0, msp" : "=r" (stack_ptr) );
200009c8:	f3ef 8308 	mrs	r3, MSP
200009cc:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:270
    if(heap_end < stack_ptr)
200009ce:	4b19      	ldr	r3, [pc, #100]	; (20000a34 <_sbrk+0x88>)
200009d0:	681b      	ldr	r3, [r3, #0]
200009d2:	693a      	ldr	r2, [r7, #16]
200009d4:	429a      	cmp	r2, r3
200009d6:	d90f      	bls.n	200009f8 <_sbrk+0x4c>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:277
        /*
         * Heap is at an address below the stack, growing up toward the stack.
         * The stack is above the heap, growing down towards the heap.
         * Make sure the stack and heap do not run into each other.
         */
        if (heap_end + incr > stack_ptr)
200009d8:	4b16      	ldr	r3, [pc, #88]	; (20000a34 <_sbrk+0x88>)
200009da:	681a      	ldr	r2, [r3, #0]
200009dc:	687b      	ldr	r3, [r7, #4]
200009de:	4413      	add	r3, r2
200009e0:	693a      	ldr	r2, [r7, #16]
200009e2:	429a      	cmp	r2, r3
200009e4:	d21a      	bcs.n	20000a1c <_sbrk+0x70>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:279
        {
          _write_r ((void *)0, 1, "Heap and stack collision\n", 25);
200009e6:	2319      	movs	r3, #25
200009e8:	4a14      	ldr	r2, [pc, #80]	; (20000a3c <_sbrk+0x90>)
200009ea:	2101      	movs	r1, #1
200009ec:	2000      	movs	r0, #0
200009ee:	f7ff ffab 	bl	20000948 <_write_r>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:280
          _exit (1);
200009f2:	2001      	movs	r0, #1
200009f4:	f7ff ff71 	bl	200008da <_exit>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:299
         * SmartFusion2 cache design.
         */
        extern char _eheap;     /* Defined by the linker */
        char *top_of_heap;
        
        top_of_heap = &_eheap;
200009f8:	4b11      	ldr	r3, [pc, #68]	; (20000a40 <_sbrk+0x94>)
200009fa:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:300
        if(heap_end + incr  > top_of_heap)
200009fc:	4b0d      	ldr	r3, [pc, #52]	; (20000a34 <_sbrk+0x88>)
200009fe:	681a      	ldr	r2, [r3, #0]
20000a00:	687b      	ldr	r3, [r7, #4]
20000a02:	4413      	add	r3, r2
20000a04:	68fa      	ldr	r2, [r7, #12]
20000a06:	429a      	cmp	r2, r3
20000a08:	d208      	bcs.n	20000a1c <_sbrk+0x70>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:302
        {
          _write_r ((void *)0, 1, "Out of heap memory\n", 25);
20000a0a:	2319      	movs	r3, #25
20000a0c:	4a0d      	ldr	r2, [pc, #52]	; (20000a44 <_sbrk+0x98>)
20000a0e:	2101      	movs	r1, #1
20000a10:	2000      	movs	r0, #0
20000a12:	f7ff ff99 	bl	20000948 <_write_r>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:303
          _exit (1);
20000a16:	2001      	movs	r0, #1
20000a18:	f7ff ff5f 	bl	200008da <_exit>
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:307
        }
    }
  
    heap_end += incr;
20000a1c:	4b05      	ldr	r3, [pc, #20]	; (20000a34 <_sbrk+0x88>)
20000a1e:	681a      	ldr	r2, [r3, #0]
20000a20:	687b      	ldr	r3, [r7, #4]
20000a22:	4413      	add	r3, r2
20000a24:	4a03      	ldr	r2, [pc, #12]	; (20000a34 <_sbrk+0x88>)
20000a26:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:308
    return (caddr_t) prev_heap_end;
20000a28:	697b      	ldr	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/CMSIS/startup_gcc/newlib_stubs.c:309
}
20000a2a:	4618      	mov	r0, r3
20000a2c:	3718      	adds	r7, #24
20000a2e:	46bd      	mov	sp, r7
20000a30:	bd80      	pop	{r7, pc}
20000a32:	bf00      	nop
20000a34:	20009c48 	.word	0x20009c48
20000a38:	2000a880 	.word	0x2000a880
20000a3c:	200089e8 	.word	0x200089e8
20000a40:	2000f000 	.word	0x2000f000
20000a44:	20008a04 	.word	0x20008a04

20000a48 <main>:
main():
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:85
 * main function.
 */


int main()
{
20000a48:	b580      	push	{r7, lr}
20000a4a:	b086      	sub	sp, #24
20000a4c:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:89
    uint32_t gpio_in;
    uint32_t timer2_load_value;
    uint8_t  key;
    uint32_t char_count=0;
20000a4e:	2300      	movs	r3, #0
20000a50:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:95

    uint8_t  char_array[16];



    hw_init();
20000a52:	f000 f8e9 	bl	20000c28 <hw_init>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:101



    /* load the spi_file_sys into the spi_dir structure;*/

     init_spi_file_sys ();
20000a56:	f001 f8b7 	bl	20001bc8 <init_spi_file_sys>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:109
    /*--------------------------------------------------------------------------
         * Send greeting message over the UART.
         *
    */

        PRINT_TEXT("\n\n\n<< Smartfusion2  Ymodem Bootloader >>\n\n");
20000a5a:	4805      	ldr	r0, [pc, #20]	; (20000a70 <main+0x28>)
20000a5c:	f001 fac0 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:111

        print_help();
20000a60:	f000 f8d8 	bl	20000c14 <print_help>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:112
        display_prompt();
20000a64:	f000 f806 	bl	20000a74 <display_prompt>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:123 (discriminator 1)
     * Foreground loop.
     */
    for(;;)
    {

        menu();
20000a68:	f000 f80e 	bl	20000a88 <menu>
20000a6c:	e7fc      	b.n	20000a68 <main+0x20>
20000a6e:	bf00      	nop
20000a70:	20008a18 	.word	0x20008a18

20000a74 <display_prompt>:
display_prompt():
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:129

    }
}


void display_prompt(void) {
20000a74:	b580      	push	{r7, lr}
20000a76:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:131

    PRINT_TEXT("\r\nCREATIVE-BRD>");
20000a78:	4802      	ldr	r0, [pc, #8]	; (20000a84 <display_prompt+0x10>)
20000a7a:	f001 fab1 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:133

}
20000a7e:	bf00      	nop
20000a80:	bd80      	pop	{r7, pc}
20000a82:	bf00      	nop
20000a84:	20008a44 	.word	0x20008a44

20000a88 <menu>:
menu():
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:141





void menu (void){
20000a88:	b580      	push	{r7, lr}
20000a8a:	b0a4      	sub	sp, #144	; 0x90
20000a8c:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:143
  uint8_t key,i,errors ;
  uint32_t addr_offset=0;
20000a8e:	2300      	movs	r3, #0
20000a90:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:144
  uint32_t d_size = 256 ;
20000a94:	f44f 7380 	mov.w	r3, #256	; 0x100
20000a98:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:150
  uint32_t spi_addr;
  uint32_t g_buffer[4] ;
  uint32_t test_addr;
  uint32_t offset;

  spi_addr = SPI_FILE_BASE_ADDR;
20000a9c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
20000aa0:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:152
  uint8_t  file_valid;
  errors = 0;
20000aa4:	2300      	movs	r3, #0
20000aa6:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:153
  offset =0;
20000aaa:	2300      	movs	r3, #0
20000aac:	67bb      	str	r3, [r7, #120]	; 0x78
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:168

             /**********************************************************************
             * Read data received by the UART.
             *********************************************************************/

                key = uart_getchar();
20000aae:	f001 fa53 	bl	20001f58 <uart_getchar>
20000ab2:	4603      	mov	r3, r0
20000ab4:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:169
                uart_putc(key);
20000ab8:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
20000abc:	4618      	mov	r0, r3
20000abe:	f001 fa63 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:172


                switch(key)
20000ac2:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
20000ac6:	3b4c      	subs	r3, #76	; 0x4c
20000ac8:	2b2c      	cmp	r3, #44	; 0x2c
20000aca:	f200 8098 	bhi.w	20000bfe <menu+0x176>
20000ace:	a201      	add	r2, pc, #4	; (adr r2, 20000ad4 <menu+0x4c>)
20000ad0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
20000ad4:	20000b9f 	.word	0x20000b9f
20000ad8:	20000bff 	.word	0x20000bff
20000adc:	20000bff 	.word	0x20000bff
20000ae0:	20000bff 	.word	0x20000bff
20000ae4:	20000bff 	.word	0x20000bff
20000ae8:	20000bff 	.word	0x20000bff
20000aec:	20000bff 	.word	0x20000bff
20000af0:	20000bff 	.word	0x20000bff
20000af4:	20000bff 	.word	0x20000bff
20000af8:	20000bff 	.word	0x20000bff
20000afc:	20000bff 	.word	0x20000bff
20000b00:	20000bff 	.word	0x20000bff
20000b04:	20000bff 	.word	0x20000bff
20000b08:	20000bff 	.word	0x20000bff
20000b0c:	20000bff 	.word	0x20000bff
20000b10:	20000bff 	.word	0x20000bff
20000b14:	20000bff 	.word	0x20000bff
20000b18:	20000bff 	.word	0x20000bff
20000b1c:	20000bff 	.word	0x20000bff
20000b20:	20000bff 	.word	0x20000bff
20000b24:	20000bff 	.word	0x20000bff
20000b28:	20000bff 	.word	0x20000bff
20000b2c:	20000bff 	.word	0x20000bff
20000b30:	20000bff 	.word	0x20000bff
20000b34:	20000ba5 	.word	0x20000ba5
20000b38:	20000bff 	.word	0x20000bff
20000b3c:	20000bff 	.word	0x20000bff
20000b40:	20000bff 	.word	0x20000bff
20000b44:	20000b89 	.word	0x20000b89
20000b48:	20000b8f 	.word	0x20000b8f
20000b4c:	20000bff 	.word	0x20000bff
20000b50:	20000bff 	.word	0x20000bff
20000b54:	20000b9f 	.word	0x20000b9f
20000b58:	20000bff 	.word	0x20000bff
20000b5c:	20000bff 	.word	0x20000bff
20000b60:	20000bff 	.word	0x20000bff
20000b64:	20000bff 	.word	0x20000bff
20000b68:	20000bff 	.word	0x20000bff
20000b6c:	20000bff 	.word	0x20000bff
20000b70:	20000bff 	.word	0x20000bff
20000b74:	20000bff 	.word	0x20000bff
20000b78:	20000b95 	.word	0x20000b95
20000b7c:	20000bff 	.word	0x20000bff
20000b80:	20000bff 	.word	0x20000bff
20000b84:	20000bd7 	.word	0x20000bd7
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:176
                {

                    case 'h':
                        print_help();
20000b88:	f000 f844 	bl	20000c14 <print_help>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:177
                        break;
20000b8c:	e037      	b.n	20000bfe <menu+0x176>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:179
                    case 'i':
                       clear_spi_file_sys();
20000b8e:	f001 f87b 	bl	20001c88 <clear_spi_file_sys>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:181

                            break;
20000b92:	e034      	b.n	20000bfe <menu+0x176>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:184
                    case 'u':

                        g_file_size = spi_file_download();
20000b94:	f001 f8a0 	bl	20001cd8 <spi_file_download>
20000b98:	f8c7 008c 	str.w	r0, [r7, #140]	; 0x8c
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:185
                        break;
20000b9c:	e02f      	b.n	20000bfe <menu+0x176>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:190

                    case 'L':
                    case 'l':

                        spi_print_dir();
20000b9e:	f000 ff43 	bl	20001a28 <spi_print_dir>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:191
                            break;
20000ba2:	e02c      	b.n	20000bfe <menu+0x176>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:238
                    case 'd':
                      //PRINT_TEXT("\r\n Flash address:");
                      //PRINT_XNUM(spi_addr);
                      //hex_view_spi_flash(SPI_DIR_ROOT_ADDR, 4096);

                      spi_print_dir();
20000ba4:	f000 ff40 	bl	20001a28 <spi_print_dir>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:240

                      PRINT_TEXT("\r\n Enter the File index to Display content:");
20000ba8:	4816      	ldr	r0, [pc, #88]	; (20000c04 <menu+0x17c>)
20000baa:	f001 fa19 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:241
                      key = uart_getchar();
20000bae:	f001 f9d3 	bl	20001f58 <uart_getchar>
20000bb2:	4603      	mov	r3, r0
20000bb4:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:242
                      uart_putc(key);
20000bb8:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
20000bbc:	4618      	mov	r0, r3
20000bbe:	f001 f9e3 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:244

                      int index = key - '0';  // Subtract '0' to get the integer value
20000bc2:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
20000bc6:	3b30      	subs	r3, #48	; 0x30
20000bc8:	673b      	str	r3, [r7, #112]	; 0x70
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:247


                      spi_file_display(index );
20000bca:	6f3b      	ldr	r3, [r7, #112]	; 0x70
20000bcc:	b2db      	uxtb	r3, r3
20000bce:	4618      	mov	r0, r3
20000bd0:	f001 f8b6 	bl	20001d40 <spi_file_display>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:248
                      break;
20000bd4:	e013      	b.n	20000bfe <menu+0x176>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:252


                    case 'x':
                        if (g_file_size){
20000bd6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
20000bda:	2b00      	cmp	r3, #0
20000bdc:	d00b      	beq.n	20000bf6 <menu+0x16e>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:254
                            /*copy the file from downlaod location to boot location */
                            memcpy(g_ddr_boot_ptr,g_ddr_upload_ptr, g_file_size );
20000bde:	4b0a      	ldr	r3, [pc, #40]	; (20000c08 <menu+0x180>)
20000be0:	681b      	ldr	r3, [r3, #0]
20000be2:	4a0a      	ldr	r2, [pc, #40]	; (20000c0c <menu+0x184>)
20000be4:	6811      	ldr	r1, [r2, #0]
20000be6:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
20000bea:	4618      	mov	r0, r3
20000bec:	f002 fb84 	bl	200032f8 <memcpy>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:255
                            bx_user_code_ddr();
20000bf0:	f001 ff36 	bl	20002a60 <bx_user_code_ddr>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:261
                        }

                        else{
                            PRINT_TEXT("\r\n upload a  binary file to execute from ddr");
                            }
                        break;
20000bf4:	e002      	b.n	20000bfc <menu+0x174>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:259
                            PRINT_TEXT("\r\n upload a  binary file to execute from ddr");
20000bf6:	4806      	ldr	r0, [pc, #24]	; (20000c10 <menu+0x188>)
20000bf8:	f001 f9f2 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:261
                        break;
20000bfc:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:267



                }

                display_prompt();
20000bfe:	f7ff ff39 	bl	20000a74 <display_prompt>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:168
                key = uart_getchar();
20000c02:	e754      	b.n	20000aae <menu+0x26>
20000c04:	20008a54 	.word	0x20008a54
20000c08:	20009270 	.word	0x20009270
20000c0c:	2000926c 	.word	0x2000926c
20000c10:	20008a80 	.word	0x20008a80

20000c14 <print_help>:
print_help():
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:280


/**********************************************************************//**
 * Print help menu.
 **************************************************************************/
void print_help(void) {
20000c14:	b580      	push	{r7, lr}
20000c16:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:282

  PRINT_TEXT("Available CMDs:\n"
20000c18:	4802      	ldr	r0, [pc, #8]	; (20000c24 <print_help+0x10>)
20000c1a:	f001 f9e1 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/main.c:290
                     " u: Upload binary file via Ymodem Protocol\n"
                     " d: Display SPI Flash Directory and File in hex view\n"
                     " l: List The File system Directory\n"

                     );
}
20000c1e:	bf00      	nop
20000c20:	bd80      	pop	{r7, pc}
20000c22:	bf00      	nop
20000c24:	20008ab0 	.word	0x20008ab0

20000c28 <hw_init>:
hw_init():
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:28
UART_instance_t g_uart;
gpio_instance_t g_gpio;
spi_instance_t  g_spi_0;


void hw_init(void){
20000c28:	b580      	push	{r7, lr}
20000c2a:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:31

    /* Turn off the watchdog */
         SYSREG->WDOG_CR = 0;
20000c2c:	4b27      	ldr	r3, [pc, #156]	; (20000ccc <hw_init+0xa4>)
20000c2e:	2200      	movs	r2, #0
20000c30:	66da      	str	r2, [r3, #108]	; 0x6c
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:33

        SystemCoreClockUpdate();
20000c32:	f7ff fc97 	bl	20000564 <SystemCoreClockUpdate>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:36

        /* Initialise Systick for delay_ms */
         SysTick_Init ();
20000c36:	f001 f93f 	bl	20001eb8 <SysTick_Init>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:43
        /*--------------------------------------------------------------------------
         * Configure GPIOs
         */
        //gpio_init();
        //MSS_GPIO_init(); // initialise the GPIO peripheral
        GPIO_init( &g_gpio,    COREGPIO_C1, GPIO_APB_32_BITS_BUS );
20000c3a:	2202      	movs	r2, #2
20000c3c:	4924      	ldr	r1, [pc, #144]	; (20000cd0 <hw_init+0xa8>)
20000c3e:	4825      	ldr	r0, [pc, #148]	; (20000cd4 <hw_init+0xac>)
20000c40:	f000 f97c 	bl	20000f3c <GPIO_init>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:52
        /*  gpio is preconfigured in Libero , so no need to do it here */




        GPIO_config( &g_gpio,GPIO_0, GPIO_OUTPUT_MODE); // LED0:
20000c44:	2205      	movs	r2, #5
20000c46:	2100      	movs	r1, #0
20000c48:	4822      	ldr	r0, [pc, #136]	; (20000cd4 <hw_init+0xac>)
20000c4a:	f000 f9e2 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:53
        GPIO_config( &g_gpio,GPIO_1, GPIO_OUTPUT_MODE); // LED1:
20000c4e:	2205      	movs	r2, #5
20000c50:	2101      	movs	r1, #1
20000c52:	4820      	ldr	r0, [pc, #128]	; (20000cd4 <hw_init+0xac>)
20000c54:	f000 f9dd 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:56


        GPIO_config( &g_gpio,GPIO_2, GPIO_OUTPUT_MODE); // LCD_BL: DISPLAY Backlit
20000c58:	2205      	movs	r2, #5
20000c5a:	2102      	movs	r1, #2
20000c5c:	481d      	ldr	r0, [pc, #116]	; (20000cd4 <hw_init+0xac>)
20000c5e:	f000 f9d8 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:57
        GPIO_config( &g_gpio,GPIO_3, GPIO_OUTPUT_MODE); // SD_CS:
20000c62:	2205      	movs	r2, #5
20000c64:	2103      	movs	r1, #3
20000c66:	481b      	ldr	r0, [pc, #108]	; (20000cd4 <hw_init+0xac>)
20000c68:	f000 f9d3 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:58
        GPIO_config( &g_gpio,GPIO_4, GPIO_OUTPUT_MODE); // TP_CS
20000c6c:	2205      	movs	r2, #5
20000c6e:	2104      	movs	r1, #4
20000c70:	4818      	ldr	r0, [pc, #96]	; (20000cd4 <hw_init+0xac>)
20000c72:	f000 f9ce 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:60

        GPIO_config( &g_gpio,GPIO_5, GPIO_OUTPUT_MODE); // LED1
20000c76:	2205      	movs	r2, #5
20000c78:	2105      	movs	r1, #5
20000c7a:	4816      	ldr	r0, [pc, #88]	; (20000cd4 <hw_init+0xac>)
20000c7c:	f000 f9c9 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:61
        GPIO_config( &g_gpio,GPIO_6, GPIO_OUTPUT_MODE); // LED2:
20000c80:	2205      	movs	r2, #5
20000c82:	2106      	movs	r1, #6
20000c84:	4813      	ldr	r0, [pc, #76]	; (20000cd4 <hw_init+0xac>)
20000c86:	f000 f9c4 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:63

        GPIO_config( &g_gpio,GPIO_7, GPIO_INPUT_MODE); // TP_IRQ
20000c8a:	2202      	movs	r2, #2
20000c8c:	2107      	movs	r1, #7
20000c8e:	4811      	ldr	r0, [pc, #68]	; (20000cd4 <hw_init+0xac>)
20000c90:	f000 f9bf 	bl	20001012 <GPIO_config>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:67

        /* Configure the UART */

        UART_init(&g_uart, COREUARTAPB_C0,BAUD_VALUE_115200, (DATA_8_BITS | NO_PARITY) );
20000c94:	4b10      	ldr	r3, [pc, #64]	; (20000cd8 <hw_init+0xb0>)
20000c96:	681b      	ldr	r3, [r3, #0]
20000c98:	4a10      	ldr	r2, [pc, #64]	; (20000cdc <hw_init+0xb4>)
20000c9a:	fba2 2303 	umull	r2, r3, r2, r3
20000c9e:	0d1b      	lsrs	r3, r3, #20
20000ca0:	b29b      	uxth	r3, r3
20000ca2:	3b01      	subs	r3, #1
20000ca4:	b29a      	uxth	r2, r3
20000ca6:	2301      	movs	r3, #1
20000ca8:	490d      	ldr	r1, [pc, #52]	; (20000ce0 <hw_init+0xb8>)
20000caa:	480e      	ldr	r0, [pc, #56]	; (20000ce4 <hw_init+0xbc>)
20000cac:	f000 f820 	bl	20000cf0 <UART_init>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:76
        /*--------------------------------------------------------------------------
             * Configure SPI. CORESPI_C0 is connected to onboard SPI flash memory
             */


            SPI_init(&g_spi_0, CORESPI_C0,32 );
20000cb0:	2220      	movs	r2, #32
20000cb2:	490d      	ldr	r1, [pc, #52]	; (20000ce8 <hw_init+0xc0>)
20000cb4:	480d      	ldr	r0, [pc, #52]	; (20000cec <hw_init+0xc4>)
20000cb6:	f000 f9d3 	bl	20001060 <SPI_init>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:77
            SPI_configure_master_mode( &g_spi_0 );
20000cba:	480c      	ldr	r0, [pc, #48]	; (20000cec <hw_init+0xc4>)
20000cbc:	f000 fa31 	bl	20001122 <SPI_configure_master_mode>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:78
            SPI_enable(&g_spi_0);
20000cc0:	480a      	ldr	r0, [pc, #40]	; (20000cec <hw_init+0xc4>)
20000cc2:	f000 fca5 	bl	20001610 <SPI_enable>
C:\jijeesh\github\m2s-fabric-ip/application/cm3-ymodem-bootloader/hw_init.c:81


}
20000cc6:	bf00      	nop
20000cc8:	bd80      	pop	{r7, pc}
20000cca:	bf00      	nop
20000ccc:	40038000 	.word	0x40038000
20000cd0:	50004000 	.word	0x50004000
20000cd4:	2000a7f8 	.word	0x2000a7f8
20000cd8:	20009254 	.word	0x20009254
20000cdc:	91a2b3c5 	.word	0x91a2b3c5
20000ce0:	50001000 	.word	0x50001000
20000ce4:	2000a800 	.word	0x2000a800
20000ce8:	50006000 	.word	0x50006000
20000cec:	2000a808 	.word	0x2000a808

20000cf0 <UART_init>:
UART_init():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:45
    UART_instance_t * this_uart,
    addr_t base_addr,
    uint16_t baud_value,
    uint8_t line_config
)
{
20000cf0:	b580      	push	{r7, lr}
20000cf2:	b086      	sub	sp, #24
20000cf4:	af00      	add	r7, sp, #0
20000cf6:	60f8      	str	r0, [r7, #12]
20000cf8:	60b9      	str	r1, [r7, #8]
20000cfa:	4611      	mov	r1, r2
20000cfc:	461a      	mov	r2, r3
20000cfe:	460b      	mov	r3, r1
20000d00:	80fb      	strh	r3, [r7, #6]
20000d02:	4613      	mov	r3, r2
20000d04:	717b      	strb	r3, [r7, #5]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:48
    uint8_t rx_full;
    
    HAL_ASSERT( this_uart != NULL_INSTANCE )
20000d06:	68fb      	ldr	r3, [r7, #12]
20000d08:	2b00      	cmp	r3, #0
20000d0a:	d100      	bne.n	20000d0e <UART_init+0x1e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:48 (discriminator 1)
20000d0c:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:49
    HAL_ASSERT( line_config <= MAX_LINE_CONFIG )
20000d0e:	797b      	ldrb	r3, [r7, #5]
20000d10:	2b07      	cmp	r3, #7
20000d12:	d900      	bls.n	20000d16 <UART_init+0x26>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:49 (discriminator 1)
20000d14:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:50
    HAL_ASSERT( baud_value <= MAX_BAUD_VALUE )
20000d16:	88fb      	ldrh	r3, [r7, #6]
20000d18:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
20000d1c:	d300      	bcc.n	20000d20 <UART_init+0x30>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:50 (discriminator 1)
20000d1e:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:52

    if( ( this_uart != NULL_INSTANCE ) &&
20000d20:	68fb      	ldr	r3, [r7, #12]
20000d22:	2b00      	cmp	r3, #0
20000d24:	d067      	beq.n	20000df6 <UART_init+0x106>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:52 (discriminator 1)
20000d26:	797b      	ldrb	r3, [r7, #5]
20000d28:	2b07      	cmp	r3, #7
20000d2a:	d864      	bhi.n	20000df6 <UART_init+0x106>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:53
        ( line_config <= MAX_LINE_CONFIG ) &&
20000d2c:	88fb      	ldrh	r3, [r7, #6]
20000d2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
20000d32:	d260      	bcs.n	20000df6 <UART_init+0x106>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:59
        ( baud_value <= MAX_BAUD_VALUE ) )
    {
        /*
         * Store lower 8-bits of baud value in CTRL1.
         */
        HAL_set_8bit_reg( base_addr, CTRL1, (uint_fast8_t)(baud_value &
20000d34:	68bb      	ldr	r3, [r7, #8]
20000d36:	3308      	adds	r3, #8
20000d38:	88fa      	ldrh	r2, [r7, #6]
20000d3a:	b2d2      	uxtb	r2, r2
20000d3c:	4611      	mov	r1, r2
20000d3e:	4618      	mov	r0, r3
20000d40:	f001 fed0 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:66
    
        /*
         * Extract higher 5-bits of baud value and store in higher 5-bits 
         * of CTRL2, along with line configuration in lower 3 three bits.
         */
        HAL_set_8bit_reg( base_addr, CTRL2, (uint_fast8_t)line_config | 
20000d44:	68bb      	ldr	r3, [r7, #8]
20000d46:	f103 000c 	add.w	r0, r3, #12
20000d4a:	797a      	ldrb	r2, [r7, #5]
20000d4c:	88fb      	ldrh	r3, [r7, #6]
20000d4e:	115b      	asrs	r3, r3, #5
20000d50:	f403 63ff 	and.w	r3, r3, #2040	; 0x7f8
20000d54:	4313      	orrs	r3, r2
20000d56:	4619      	mov	r1, r3
20000d58:	f001 fec4 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:70
                                           (uint_fast8_t)((baud_value &
                                   BAUDVALUE_MSB) >> BAUDVALUE_SHIFT ) );
    
        this_uart->base_address = base_addr;
20000d5c:	68fb      	ldr	r3, [r7, #12]
20000d5e:	68ba      	ldr	r2, [r7, #8]
20000d60:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:76
#ifndef NDEBUG
        {
            uint8_t  config;
            uint8_t  temp;
            uint16_t baud_val;
            baud_val = HAL_get_8bit_reg( this_uart->base_address, CTRL1 );
20000d62:	68fb      	ldr	r3, [r7, #12]
20000d64:	681b      	ldr	r3, [r3, #0]
20000d66:	3308      	adds	r3, #8
20000d68:	4618      	mov	r0, r3
20000d6a:	f001 febd 	bl	20002ae8 <HW_get_8bit_reg>
20000d6e:	4603      	mov	r3, r0
20000d70:	82bb      	strh	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:77
            config =  HAL_get_8bit_reg( this_uart->base_address, CTRL2 );
20000d72:	68fb      	ldr	r3, [r7, #12]
20000d74:	681b      	ldr	r3, [r3, #0]
20000d76:	330c      	adds	r3, #12
20000d78:	4618      	mov	r0, r3
20000d7a:	f001 feb5 	bl	20002ae8 <HW_get_8bit_reg>
20000d7e:	4603      	mov	r3, r0
20000d80:	74fb      	strb	r3, [r7, #19]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:81
            /*
             * To resolve operator precedence between & and <<
             */
            temp =  ( config  &  (uint8_t)(CTRL2_BAUDVALUE_MASK ) );
20000d82:	7cfb      	ldrb	r3, [r7, #19]
20000d84:	f023 0307 	bic.w	r3, r3, #7
20000d88:	74bb      	strb	r3, [r7, #18]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:82
            baud_val |= (uint16_t)( (uint16_t)(temp) << BAUDVALUE_SHIFT );
20000d8a:	7cbb      	ldrb	r3, [r7, #18]
20000d8c:	b29b      	uxth	r3, r3
20000d8e:	015b      	lsls	r3, r3, #5
20000d90:	b29a      	uxth	r2, r3
20000d92:	8abb      	ldrh	r3, [r7, #20]
20000d94:	4313      	orrs	r3, r2
20000d96:	82bb      	strh	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:83
            config &= (uint8_t)(~CTRL2_BAUDVALUE_MASK);
20000d98:	7cfb      	ldrb	r3, [r7, #19]
20000d9a:	f003 0307 	and.w	r3, r3, #7
20000d9e:	74fb      	strb	r3, [r7, #19]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:84
            HAL_ASSERT( baud_val == baud_value );
20000da0:	8aba      	ldrh	r2, [r7, #20]
20000da2:	88fb      	ldrh	r3, [r7, #6]
20000da4:	429a      	cmp	r2, r3
20000da6:	d000      	beq.n	20000daa <UART_init+0xba>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:84 (discriminator 1)
20000da8:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:85
            HAL_ASSERT( config == line_config );
20000daa:	7cfa      	ldrb	r2, [r7, #19]
20000dac:	797b      	ldrb	r3, [r7, #5]
20000dae:	429a      	cmp	r2, r3
20000db0:	d000      	beq.n	20000db4 <UART_init+0xc4>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:85 (discriminator 1)
20000db2:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:93
        
        /*
         * Flush the receive FIFO of data that may have been received before the
         * driver was initialized.
         */
        rx_full = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
20000db4:	68fb      	ldr	r3, [r7, #12]
20000db6:	681b      	ldr	r3, [r3, #0]
20000db8:	3310      	adds	r3, #16
20000dba:	4618      	mov	r0, r3
20000dbc:	f001 fe94 	bl	20002ae8 <HW_get_8bit_reg>
20000dc0:	4603      	mov	r3, r0
20000dc2:	f003 0302 	and.w	r3, r3, #2
20000dc6:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:95
                                                    STATUS_RXFULL_MASK;
        while ( rx_full )
20000dc8:	e00f      	b.n	20000dea <UART_init+0xfa>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:97
        {
            HAL_get_8bit_reg( this_uart->base_address, RXDATA );
20000dca:	68fb      	ldr	r3, [r7, #12]
20000dcc:	681b      	ldr	r3, [r3, #0]
20000dce:	3304      	adds	r3, #4
20000dd0:	4618      	mov	r0, r3
20000dd2:	f001 fe89 	bl	20002ae8 <HW_get_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:98
            rx_full = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
20000dd6:	68fb      	ldr	r3, [r7, #12]
20000dd8:	681b      	ldr	r3, [r3, #0]
20000dda:	3310      	adds	r3, #16
20000ddc:	4618      	mov	r0, r3
20000dde:	f001 fe83 	bl	20002ae8 <HW_get_8bit_reg>
20000de2:	4603      	mov	r3, r0
20000de4:	f003 0302 	and.w	r3, r3, #2
20000de8:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:95
        while ( rx_full )
20000dea:	7dfb      	ldrb	r3, [r7, #23]
20000dec:	2b00      	cmp	r3, #0
20000dee:	d1ec      	bne.n	20000dca <UART_init+0xda>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:105
        }

        /*
         * Clear status of the UART instance.
         */
        this_uart->status = (uint8_t)0;
20000df0:	68fb      	ldr	r3, [r7, #12]
20000df2:	2200      	movs	r2, #0
20000df4:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:107
    }
}
20000df6:	bf00      	nop
20000df8:	3718      	adds	r7, #24
20000dfa:	46bd      	mov	sp, r7
20000dfc:	bd80      	pop	{r7, pc}

20000dfe <UART_send>:
UART_send():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:120
(
    UART_instance_t * this_uart,
    const uint8_t * tx_buffer,
    size_t tx_size
)
{
20000dfe:	b580      	push	{r7, lr}
20000e00:	b086      	sub	sp, #24
20000e02:	af00      	add	r7, sp, #0
20000e04:	60f8      	str	r0, [r7, #12]
20000e06:	60b9      	str	r1, [r7, #8]
20000e08:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:124
    size_t char_idx;
    uint8_t tx_ready;

    HAL_ASSERT( this_uart != NULL_INSTANCE )
20000e0a:	68fb      	ldr	r3, [r7, #12]
20000e0c:	2b00      	cmp	r3, #0
20000e0e:	d100      	bne.n	20000e12 <UART_send+0x14>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:124 (discriminator 1)
20000e10:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:125
    HAL_ASSERT( tx_buffer != NULL_BUFFER )
20000e12:	68bb      	ldr	r3, [r7, #8]
20000e14:	2b00      	cmp	r3, #0
20000e16:	d100      	bne.n	20000e1a <UART_send+0x1c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:125 (discriminator 1)
20000e18:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:126
    HAL_ASSERT( tx_size > 0 )
20000e1a:	687b      	ldr	r3, [r7, #4]
20000e1c:	2b00      	cmp	r3, #0
20000e1e:	d100      	bne.n	20000e22 <UART_send+0x24>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:126 (discriminator 1)
20000e20:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:128
      
    if( (this_uart != NULL_INSTANCE) &&
20000e22:	68fb      	ldr	r3, [r7, #12]
20000e24:	2b00      	cmp	r3, #0
20000e26:	d025      	beq.n	20000e74 <UART_send+0x76>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:128 (discriminator 1)
20000e28:	68bb      	ldr	r3, [r7, #8]
20000e2a:	2b00      	cmp	r3, #0
20000e2c:	d022      	beq.n	20000e74 <UART_send+0x76>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:129
        (tx_buffer != NULL_BUFFER)   &&
20000e2e:	687b      	ldr	r3, [r7, #4]
20000e30:	2b00      	cmp	r3, #0
20000e32:	d01f      	beq.n	20000e74 <UART_send+0x76>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:132
        (tx_size > (size_t)0) )
    {
        for ( char_idx = (size_t)0; char_idx < tx_size; char_idx++ )
20000e34:	2300      	movs	r3, #0
20000e36:	617b      	str	r3, [r7, #20]
20000e38:	e018      	b.n	20000e6c <UART_send+0x6e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:136 (discriminator 1)
        {
            /* Wait for UART to become ready to transmit. */
            do {
                tx_ready = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
20000e3a:	68fb      	ldr	r3, [r7, #12]
20000e3c:	681b      	ldr	r3, [r3, #0]
20000e3e:	3310      	adds	r3, #16
20000e40:	4618      	mov	r0, r3
20000e42:	f001 fe51 	bl	20002ae8 <HW_get_8bit_reg>
20000e46:	4603      	mov	r3, r0
20000e48:	f003 0301 	and.w	r3, r3, #1
20000e4c:	74fb      	strb	r3, [r7, #19]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:138 (discriminator 1)
                                                              STATUS_TXRDY_MASK;
            } while ( !tx_ready );
20000e4e:	7cfb      	ldrb	r3, [r7, #19]
20000e50:	2b00      	cmp	r3, #0
20000e52:	d0f2      	beq.n	20000e3a <UART_send+0x3c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:140 (discriminator 2)
            /* Send next character in the buffer. */
            HAL_set_8bit_reg( this_uart->base_address, TXDATA,
20000e54:	68fb      	ldr	r3, [r7, #12]
20000e56:	6818      	ldr	r0, [r3, #0]
20000e58:	68ba      	ldr	r2, [r7, #8]
20000e5a:	697b      	ldr	r3, [r7, #20]
20000e5c:	4413      	add	r3, r2
20000e5e:	781b      	ldrb	r3, [r3, #0]
20000e60:	4619      	mov	r1, r3
20000e62:	f001 fe3f 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:132 (discriminator 2)
        for ( char_idx = (size_t)0; char_idx < tx_size; char_idx++ )
20000e66:	697b      	ldr	r3, [r7, #20]
20000e68:	3301      	adds	r3, #1
20000e6a:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:132 (discriminator 1)
20000e6c:	697a      	ldr	r2, [r7, #20]
20000e6e:	687b      	ldr	r3, [r7, #4]
20000e70:	429a      	cmp	r2, r3
20000e72:	d3e2      	bcc.n	20000e3a <UART_send+0x3c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:144
                              (uint_fast8_t)tx_buffer[char_idx] );
        }
    }
}
20000e74:	bf00      	nop
20000e76:	3718      	adds	r7, #24
20000e78:	46bd      	mov	sp, r7
20000e7a:	bd80      	pop	{r7, pc}

20000e7c <UART_get_rx>:
UART_get_rx():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:198
(
    UART_instance_t * this_uart,
    uint8_t * rx_buffer,
    size_t buff_size
)
{
20000e7c:	b590      	push	{r4, r7, lr}
20000e7e:	b089      	sub	sp, #36	; 0x24
20000e80:	af00      	add	r7, sp, #0
20000e82:	60f8      	str	r0, [r7, #12]
20000e84:	60b9      	str	r1, [r7, #8]
20000e86:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:201
    uint8_t new_status;
    uint8_t rx_full;
    size_t rx_idx = 0u;
20000e88:	2300      	movs	r3, #0
20000e8a:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:203
    
    HAL_ASSERT( this_uart != NULL_INSTANCE )
20000e8c:	68fb      	ldr	r3, [r7, #12]
20000e8e:	2b00      	cmp	r3, #0
20000e90:	d100      	bne.n	20000e94 <UART_get_rx+0x18>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:203 (discriminator 1)
20000e92:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:204
    HAL_ASSERT( rx_buffer != NULL_BUFFER )
20000e94:	68bb      	ldr	r3, [r7, #8]
20000e96:	2b00      	cmp	r3, #0
20000e98:	d100      	bne.n	20000e9c <UART_get_rx+0x20>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:204 (discriminator 1)
20000e9a:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:205
    HAL_ASSERT( buff_size > 0 )
20000e9c:	687b      	ldr	r3, [r7, #4]
20000e9e:	2b00      	cmp	r3, #0
20000ea0:	d100      	bne.n	20000ea4 <UART_get_rx+0x28>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:205 (discriminator 1)
20000ea2:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:207
      
    if( (this_uart != NULL_INSTANCE) &&
20000ea4:	68fb      	ldr	r3, [r7, #12]
20000ea6:	2b00      	cmp	r3, #0
20000ea8:	d043      	beq.n	20000f32 <UART_get_rx+0xb6>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:207 (discriminator 1)
20000eaa:	68bb      	ldr	r3, [r7, #8]
20000eac:	2b00      	cmp	r3, #0
20000eae:	d040      	beq.n	20000f32 <UART_get_rx+0xb6>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:208
        (rx_buffer != NULL_BUFFER)   &&
20000eb0:	687b      	ldr	r3, [r7, #4]
20000eb2:	2b00      	cmp	r3, #0
20000eb4:	d03d      	beq.n	20000f32 <UART_get_rx+0xb6>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:211
        (buff_size > 0u) )
    {
        rx_idx = 0u;
20000eb6:	2300      	movs	r3, #0
20000eb8:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:212
        new_status = HAL_get_8bit_reg( this_uart->base_address, STATUS );
20000eba:	68fb      	ldr	r3, [r7, #12]
20000ebc:	681b      	ldr	r3, [r3, #0]
20000ebe:	3310      	adds	r3, #16
20000ec0:	4618      	mov	r0, r3
20000ec2:	f001 fe11 	bl	20002ae8 <HW_get_8bit_reg>
20000ec6:	4603      	mov	r3, r0
20000ec8:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:213
        this_uart->status |= new_status;
20000eca:	68fb      	ldr	r3, [r7, #12]
20000ecc:	791a      	ldrb	r2, [r3, #4]
20000ece:	7dfb      	ldrb	r3, [r7, #23]
20000ed0:	4313      	orrs	r3, r2
20000ed2:	b2da      	uxtb	r2, r3
20000ed4:	68fb      	ldr	r3, [r7, #12]
20000ed6:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:214
        rx_full = new_status & STATUS_RXFULL_MASK;
20000ed8:	7dfb      	ldrb	r3, [r7, #23]
20000eda:	f003 0302 	and.w	r3, r3, #2
20000ede:	77fb      	strb	r3, [r7, #31]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:215
        while ( ( rx_full ) && ( rx_idx < buff_size ) )
20000ee0:	e020      	b.n	20000f24 <UART_get_rx+0xa8>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:217
        {
            rx_buffer[rx_idx] = HAL_get_8bit_reg( this_uart->base_address,
20000ee2:	68fb      	ldr	r3, [r7, #12]
20000ee4:	681b      	ldr	r3, [r3, #0]
20000ee6:	1d19      	adds	r1, r3, #4
20000ee8:	68ba      	ldr	r2, [r7, #8]
20000eea:	69bb      	ldr	r3, [r7, #24]
20000eec:	18d4      	adds	r4, r2, r3
20000eee:	4608      	mov	r0, r1
20000ef0:	f001 fdfa 	bl	20002ae8 <HW_get_8bit_reg>
20000ef4:	4603      	mov	r3, r0
20000ef6:	7023      	strb	r3, [r4, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:219
                                                  RXDATA );
            rx_idx++;
20000ef8:	69bb      	ldr	r3, [r7, #24]
20000efa:	3301      	adds	r3, #1
20000efc:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:220
            new_status = HAL_get_8bit_reg( this_uart->base_address, STATUS );
20000efe:	68fb      	ldr	r3, [r7, #12]
20000f00:	681b      	ldr	r3, [r3, #0]
20000f02:	3310      	adds	r3, #16
20000f04:	4618      	mov	r0, r3
20000f06:	f001 fdef 	bl	20002ae8 <HW_get_8bit_reg>
20000f0a:	4603      	mov	r3, r0
20000f0c:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:221
            this_uart->status |= new_status;
20000f0e:	68fb      	ldr	r3, [r7, #12]
20000f10:	791a      	ldrb	r2, [r3, #4]
20000f12:	7dfb      	ldrb	r3, [r7, #23]
20000f14:	4313      	orrs	r3, r2
20000f16:	b2da      	uxtb	r2, r3
20000f18:	68fb      	ldr	r3, [r7, #12]
20000f1a:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:222
            rx_full = new_status & STATUS_RXFULL_MASK;
20000f1c:	7dfb      	ldrb	r3, [r7, #23]
20000f1e:	f003 0302 	and.w	r3, r3, #2
20000f22:	77fb      	strb	r3, [r7, #31]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:215
        while ( ( rx_full ) && ( rx_idx < buff_size ) )
20000f24:	7ffb      	ldrb	r3, [r7, #31]
20000f26:	2b00      	cmp	r3, #0
20000f28:	d003      	beq.n	20000f32 <UART_get_rx+0xb6>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:215 (discriminator 1)
20000f2a:	69ba      	ldr	r2, [r7, #24]
20000f2c:	687b      	ldr	r3, [r7, #4]
20000f2e:	429a      	cmp	r2, r3
20000f30:	d3d7      	bcc.n	20000ee2 <UART_get_rx+0x66>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:225
        }
    }
    return rx_idx;
20000f32:	69bb      	ldr	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreUARTapb/core_uart_apb.c:226
}
20000f34:	4618      	mov	r0, r3
20000f36:	3724      	adds	r7, #36	; 0x24
20000f38:	46bd      	mov	sp, r7
20000f3a:	bd90      	pop	{r4, r7, pc}

20000f3c <GPIO_init>:
GPIO_init():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:37
(
    gpio_instance_t *   this_gpio,
    addr_t              base_addr,
    gpio_apb_width_t    bus_width
)
{
20000f3c:	b580      	push	{r7, lr}
20000f3e:	b086      	sub	sp, #24
20000f40:	af00      	add	r7, sp, #0
20000f42:	60f8      	str	r0, [r7, #12]
20000f44:	60b9      	str	r1, [r7, #8]
20000f46:	4613      	mov	r3, r2
20000f48:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:38
    uint8_t i = 0;
20000f4a:	2300      	movs	r3, #0
20000f4c:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:39
    addr_t cfg_reg_addr = base_addr;
20000f4e:	68bb      	ldr	r3, [r7, #8]
20000f50:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:41
    
    this_gpio->base_addr = base_addr;
20000f52:	68fb      	ldr	r3, [r7, #12]
20000f54:	68ba      	ldr	r2, [r7, #8]
20000f56:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:42
    this_gpio->apb_bus_width = bus_width;
20000f58:	68fb      	ldr	r3, [r7, #12]
20000f5a:	79fa      	ldrb	r2, [r7, #7]
20000f5c:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:45
    
    /* Clear configuration. */
    for( i = 0, cfg_reg_addr = base_addr; i < NB_OF_GPIO; ++i )
20000f5e:	2300      	movs	r3, #0
20000f60:	75fb      	strb	r3, [r7, #23]
20000f62:	68bb      	ldr	r3, [r7, #8]
20000f64:	613b      	str	r3, [r7, #16]
20000f66:	e009      	b.n	20000f7c <GPIO_init+0x40>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:47 (discriminator 3)
    {
        HW_set_8bit_reg( cfg_reg_addr, 0 );
20000f68:	2100      	movs	r1, #0
20000f6a:	6938      	ldr	r0, [r7, #16]
20000f6c:	f001 fdba 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:48 (discriminator 3)
        cfg_reg_addr += 4;
20000f70:	693b      	ldr	r3, [r7, #16]
20000f72:	3304      	adds	r3, #4
20000f74:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:45 (discriminator 3)
    for( i = 0, cfg_reg_addr = base_addr; i < NB_OF_GPIO; ++i )
20000f76:	7dfb      	ldrb	r3, [r7, #23]
20000f78:	3301      	adds	r3, #1
20000f7a:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:45 (discriminator 1)
20000f7c:	7dfb      	ldrb	r3, [r7, #23]
20000f7e:	2b1f      	cmp	r3, #31
20000f80:	d9f2      	bls.n	20000f68 <GPIO_init+0x2c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:51
    }
    /* Clear any pending interrupts */
    switch( this_gpio->apb_bus_width )
20000f82:	68fb      	ldr	r3, [r7, #12]
20000f84:	791b      	ldrb	r3, [r3, #4]
20000f86:	2b02      	cmp	r3, #2
20000f88:	d006      	beq.n	20000f98 <GPIO_init+0x5c>
20000f8a:	2b02      	cmp	r3, #2
20000f8c:	dc3b      	bgt.n	20001006 <GPIO_init+0xca>
20000f8e:	2b00      	cmp	r3, #0
20000f90:	d01c      	beq.n	20000fcc <GPIO_init+0x90>
20000f92:	2b01      	cmp	r3, #1
20000f94:	d009      	beq.n	20000faa <GPIO_init+0x6e>
20000f96:	e036      	b.n	20001006 <GPIO_init+0xca>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:54
    {
        case GPIO_APB_32_BITS_BUS:
            HAL_set_32bit_reg( this_gpio->base_addr, IRQ, CLEAR_ALL_IRQ32 );
20000f98:	68fb      	ldr	r3, [r7, #12]
20000f9a:	681b      	ldr	r3, [r3, #0]
20000f9c:	3380      	adds	r3, #128	; 0x80
20000f9e:	f04f 31ff 	mov.w	r1, #4294967295
20000fa2:	4618      	mov	r0, r3
20000fa4:	f001 fd6e 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:55
            break;
20000fa8:	e02f      	b.n	2000100a <GPIO_init+0xce>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:58
            
        case GPIO_APB_16_BITS_BUS:
            HAL_set_16bit_reg( this_gpio->base_addr, IRQ0, (uint16_t)CLEAR_ALL_IRQ16 );
20000faa:	68fb      	ldr	r3, [r7, #12]
20000fac:	681b      	ldr	r3, [r3, #0]
20000fae:	3380      	adds	r3, #128	; 0x80
20000fb0:	f64f 71ff 	movw	r1, #65535	; 0xffff
20000fb4:	4618      	mov	r0, r3
20000fb6:	f001 fd7d 	bl	20002ab4 <HW_set_16bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:59
            HAL_set_16bit_reg( this_gpio->base_addr, IRQ1, (uint16_t)CLEAR_ALL_IRQ16 );
20000fba:	68fb      	ldr	r3, [r7, #12]
20000fbc:	681b      	ldr	r3, [r3, #0]
20000fbe:	3384      	adds	r3, #132	; 0x84
20000fc0:	f64f 71ff 	movw	r1, #65535	; 0xffff
20000fc4:	4618      	mov	r0, r3
20000fc6:	f001 fd75 	bl	20002ab4 <HW_set_16bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:60
            break;
20000fca:	e01e      	b.n	2000100a <GPIO_init+0xce>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:63
            
        case GPIO_APB_8_BITS_BUS:
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ0, (uint8_t)CLEAR_ALL_IRQ8 );
20000fcc:	68fb      	ldr	r3, [r7, #12]
20000fce:	681b      	ldr	r3, [r3, #0]
20000fd0:	3380      	adds	r3, #128	; 0x80
20000fd2:	21ff      	movs	r1, #255	; 0xff
20000fd4:	4618      	mov	r0, r3
20000fd6:	f001 fd85 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:64
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ1, (uint8_t)CLEAR_ALL_IRQ8 );
20000fda:	68fb      	ldr	r3, [r7, #12]
20000fdc:	681b      	ldr	r3, [r3, #0]
20000fde:	3384      	adds	r3, #132	; 0x84
20000fe0:	21ff      	movs	r1, #255	; 0xff
20000fe2:	4618      	mov	r0, r3
20000fe4:	f001 fd7e 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:65
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ2, (uint8_t)CLEAR_ALL_IRQ8 );
20000fe8:	68fb      	ldr	r3, [r7, #12]
20000fea:	681b      	ldr	r3, [r3, #0]
20000fec:	3388      	adds	r3, #136	; 0x88
20000fee:	21ff      	movs	r1, #255	; 0xff
20000ff0:	4618      	mov	r0, r3
20000ff2:	f001 fd77 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:66
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ3, (uint8_t)CLEAR_ALL_IRQ8 );
20000ff6:	68fb      	ldr	r3, [r7, #12]
20000ff8:	681b      	ldr	r3, [r3, #0]
20000ffa:	338c      	adds	r3, #140	; 0x8c
20000ffc:	21ff      	movs	r1, #255	; 0xff
20000ffe:	4618      	mov	r0, r3
20001000:	f001 fd70 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:67
            break;
20001004:	e001      	b.n	2000100a <GPIO_init+0xce>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:70 (discriminator 1)
            
        default:
            HAL_ASSERT(0);
20001006:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:71 (discriminator 1)
            break;
20001008:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:73
    }
}
2000100a:	bf00      	nop
2000100c:	3718      	adds	r7, #24
2000100e:	46bd      	mov	sp, r7
20001010:	bd80      	pop	{r7, pc}

20001012 <GPIO_config>:
GPIO_config():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:85
(
    gpio_instance_t *   this_gpio,
    gpio_id_t           port_id,
    uint32_t            config
)
{
20001012:	b580      	push	{r7, lr}
20001014:	b086      	sub	sp, #24
20001016:	af00      	add	r7, sp, #0
20001018:	60f8      	str	r0, [r7, #12]
2000101a:	460b      	mov	r3, r1
2000101c:	607a      	str	r2, [r7, #4]
2000101e:	72fb      	strb	r3, [r7, #11]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:86
    HAL_ASSERT( port_id < NB_OF_GPIO );
20001020:	7afb      	ldrb	r3, [r7, #11]
20001022:	2b1f      	cmp	r3, #31
20001024:	d900      	bls.n	20001028 <GPIO_config+0x16>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:86 (discriminator 1)
20001026:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:88
    
    if ( port_id < NB_OF_GPIO )
20001028:	7afb      	ldrb	r3, [r7, #11]
2000102a:	2b1f      	cmp	r3, #31
2000102c:	d814      	bhi.n	20001058 <GPIO_config+0x46>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:90
    {
        uint32_t cfg_reg_addr = this_gpio->base_addr;
2000102e:	68fb      	ldr	r3, [r7, #12]
20001030:	681b      	ldr	r3, [r3, #0]
20001032:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:91
        cfg_reg_addr += (port_id * 4);
20001034:	7afb      	ldrb	r3, [r7, #11]
20001036:	009b      	lsls	r3, r3, #2
20001038:	461a      	mov	r2, r3
2000103a:	697b      	ldr	r3, [r7, #20]
2000103c:	4413      	add	r3, r2
2000103e:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:92
        HW_set_32bit_reg( cfg_reg_addr, config );
20001040:	6879      	ldr	r1, [r7, #4]
20001042:	6978      	ldr	r0, [r7, #20]
20001044:	f001 fd1e 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:101
         * back the expected value may indicate that the GPIO port was configured
         * as part of the hardware flow and cannot be modified through software.
         * It may also indicate that the base address passed as parameter to
         * GPIO_init() was incorrect.
         */
        HAL_ASSERT( HW_get_32bit_reg( cfg_reg_addr ) == config );
20001048:	6978      	ldr	r0, [r7, #20]
2000104a:	f001 fd1d 	bl	20002a88 <HW_get_32bit_reg>
2000104e:	4602      	mov	r2, r0
20001050:	687b      	ldr	r3, [r7, #4]
20001052:	4293      	cmp	r3, r2
20001054:	d000      	beq.n	20001058 <GPIO_config+0x46>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:101 (discriminator 1)
20001056:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreGPIO/core_gpio.c:103
    }
}
20001058:	bf00      	nop
2000105a:	3718      	adds	r7, #24
2000105c:	46bd      	mov	sp, r7
2000105e:	bd80      	pop	{r7, pc}

20001060 <SPI_init>:
SPI_init():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:66
(
    spi_instance_t * this_spi,
    addr_t base_addr,
    uint16_t fifo_depth
)
{
20001060:	b580      	push	{r7, lr}
20001062:	b084      	sub	sp, #16
20001064:	af00      	add	r7, sp, #0
20001066:	60f8      	str	r0, [r7, #12]
20001068:	60b9      	str	r1, [r7, #8]
2000106a:	4613      	mov	r3, r2
2000106c:	80fb      	strh	r3, [r7, #6]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:67
    HAL_ASSERT( NULL_INSTANCE != this_spi );
2000106e:	68fb      	ldr	r3, [r7, #12]
20001070:	2b00      	cmp	r3, #0
20001072:	d100      	bne.n	20001076 <SPI_init+0x16>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:67 (discriminator 1)
20001074:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:68
    HAL_ASSERT( NULL_ADDR != base_addr );
20001076:	68bb      	ldr	r3, [r7, #8]
20001078:	2b00      	cmp	r3, #0
2000107a:	d100      	bne.n	2000107e <SPI_init+0x1e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:68 (discriminator 1)
2000107c:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:69
    HAL_ASSERT( SPI_MAX_FIFO_DEPTH  >= fifo_depth );
2000107e:	88fb      	ldrh	r3, [r7, #6]
20001080:	2b20      	cmp	r3, #32
20001082:	d900      	bls.n	20001086 <SPI_init+0x26>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:69 (discriminator 1)
20001084:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:70
    HAL_ASSERT( SPI_MIN_FIFO_DEPTH  <= fifo_depth );
20001086:	88fb      	ldrh	r3, [r7, #6]
20001088:	2b00      	cmp	r3, #0
2000108a:	d100      	bne.n	2000108e <SPI_init+0x2e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:70 (discriminator 1)
2000108c:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:72

    if( ( NULL_INSTANCE != this_spi ) && ( base_addr != NULL_ADDR ) )
2000108e:	68fb      	ldr	r3, [r7, #12]
20001090:	2b00      	cmp	r3, #0
20001092:	d042      	beq.n	2000111a <SPI_init+0xba>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:72 (discriminator 1)
20001094:	68bb      	ldr	r3, [r7, #8]
20001096:	2b00      	cmp	r3, #0
20001098:	d03f      	beq.n	2000111a <SPI_init+0xba>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:82
         * Relies on the fact that byte filling with 0x00 will equate
         * to 0 for any non byte sized items too.
         */

        /* First fill struct with 0s */
        memset( this_spi, 0, sizeof(spi_instance_t) );
2000109a:	2248      	movs	r2, #72	; 0x48
2000109c:	2100      	movs	r1, #0
2000109e:	68f8      	ldr	r0, [r7, #12]
200010a0:	f002 f9a0 	bl	200033e4 <memset>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:85

        /* Configure CoreSPI instance attributes */
        this_spi->base_addr = (addr_t)base_addr;
200010a4:	68fb      	ldr	r3, [r7, #12]
200010a6:	68ba      	ldr	r2, [r7, #8]
200010a8:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:88

        /* Store FIFO depth or fall back to minimum if out of range */
        if( ( SPI_MAX_FIFO_DEPTH  >= fifo_depth ) && ( SPI_MIN_FIFO_DEPTH  <= fifo_depth ) )
200010aa:	88fb      	ldrh	r3, [r7, #6]
200010ac:	2b20      	cmp	r3, #32
200010ae:	d807      	bhi.n	200010c0 <SPI_init+0x60>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:88 (discriminator 1)
200010b0:	88fb      	ldrh	r3, [r7, #6]
200010b2:	2b00      	cmp	r3, #0
200010b4:	d004      	beq.n	200010c0 <SPI_init+0x60>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:90
        {
            this_spi->fifo_depth = fifo_depth;
200010b6:	68fb      	ldr	r3, [r7, #12]
200010b8:	88fa      	ldrh	r2, [r7, #6]
200010ba:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
200010be:	e003      	b.n	200010c8 <SPI_init+0x68>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:94
        }
        else
        {
            this_spi->fifo_depth = SPI_MIN_FIFO_DEPTH;
200010c0:	68fb      	ldr	r3, [r7, #12]
200010c2:	2201      	movs	r2, #1
200010c4:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:97
        }
        /* Make sure the CoreSPI is disabled while we configure it */
        HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, DISABLE );
200010c8:	68fb      	ldr	r3, [r7, #12]
200010ca:	6818      	ldr	r0, [r3, #0]
200010cc:	2300      	movs	r3, #0
200010ce:	2201      	movs	r2, #1
200010d0:	2100      	movs	r1, #0
200010d2:	f001 fd0b 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:100

        /* Ensure all slaves are deselected */
        HAL_set_8bit_reg( this_spi->base_addr, SSEL, 0u );
200010d6:	68fb      	ldr	r3, [r7, #12]
200010d8:	681b      	ldr	r3, [r3, #0]
200010da:	3324      	adds	r3, #36	; 0x24
200010dc:	2100      	movs	r1, #0
200010de:	4618      	mov	r0, r3
200010e0:	f001 fd00 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:103

        /* Flush the receive and transmit FIFOs*/
        HAL_set_8bit_reg( this_spi->base_addr, CMD, CMD_TXFIFORST_MASK | CMD_RXFIFORST_MASK );
200010e4:	68fb      	ldr	r3, [r7, #12]
200010e6:	681b      	ldr	r3, [r3, #0]
200010e8:	331c      	adds	r3, #28
200010ea:	2103      	movs	r1, #3
200010ec:	4618      	mov	r0, r3
200010ee:	f001 fcf9 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:106

        /* Clear all interrupts */
        HAL_set_8bit_reg( this_spi->base_addr, INTCLR, SPI_ALL_INTS );
200010f2:	68fb      	ldr	r3, [r7, #12]
200010f4:	681b      	ldr	r3, [r3, #0]
200010f6:	3304      	adds	r3, #4
200010f8:	21ff      	movs	r1, #255	; 0xff
200010fa:	4618      	mov	r0, r3
200010fc:	f001 fcf2 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:109

        /* Ensure RXAVAIL, TXRFM, SSEND and CMDINT are disabled */
        HAL_set_8bit_reg( this_spi->base_addr, CTRL2, 0u );
20001100:	68fb      	ldr	r3, [r7, #12]
20001102:	681b      	ldr	r3, [r3, #0]
20001104:	3318      	adds	r3, #24
20001106:	2100      	movs	r1, #0
20001108:	4618      	mov	r0, r3
2000110a:	f001 fceb 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:115
        /*
         * Enable the CoreSPI in the reset default of master mode
         * with TXUNDERRUN, RXOVFLOW and TXDONE interrupts disabled.
         * The driver does not currently use interrupts in master mode.
         */
        HAL_set_8bit_reg( this_spi->base_addr, CTRL1,  ENABLE | CTRL1_MASTER_MASK );
2000110e:	68fb      	ldr	r3, [r7, #12]
20001110:	681b      	ldr	r3, [r3, #0]
20001112:	2103      	movs	r1, #3
20001114:	4618      	mov	r0, r3
20001116:	f001 fce5 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:117
    }
}
2000111a:	bf00      	nop
2000111c:	3710      	adds	r7, #16
2000111e:	46bd      	mov	sp, r7
20001120:	bd80      	pop	{r7, pc}

20001122 <SPI_configure_master_mode>:
SPI_configure_master_mode():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:163
 */
void SPI_configure_master_mode
(
    spi_instance_t * this_spi
)
{
20001122:	b580      	push	{r7, lr}
20001124:	b082      	sub	sp, #8
20001126:	af00      	add	r7, sp, #0
20001128:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:164
    HAL_ASSERT( NULL_INSTANCE != this_spi );
2000112a:	687b      	ldr	r3, [r7, #4]
2000112c:	2b00      	cmp	r3, #0
2000112e:	d100      	bne.n	20001132 <SPI_configure_master_mode+0x10>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:164 (discriminator 1)
20001130:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:166
    
    if( NULL_INSTANCE != this_spi )
20001132:	687b      	ldr	r3, [r7, #4]
20001134:	2b00      	cmp	r3, #0
20001136:	d025      	beq.n	20001184 <SPI_configure_master_mode+0x62>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:169
    {
        /* Disable the CoreSPI for a little while, while we configure the CoreSPI */
        HAL_set_8bit_reg_field(this_spi->base_addr, CTRL1_ENABLE, DISABLE);
20001138:	687b      	ldr	r3, [r7, #4]
2000113a:	6818      	ldr	r0, [r3, #0]
2000113c:	2300      	movs	r3, #0
2000113e:	2201      	movs	r2, #1
20001140:	2100      	movs	r1, #0
20001142:	f001 fcd3 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:172

        /* Reset slave transfer mode to unknown in case it has been set previously */
        this_spi->slave_xfer_mode = SPI_SLAVE_XFER_NONE;
20001146:	687b      	ldr	r3, [r7, #4]
20001148:	2200      	movs	r2, #0
2000114a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:175

        /* Flush the receive and transmit FIFOs*/
        HAL_set_8bit_reg( this_spi->base_addr, CMD, CMD_TXFIFORST_MASK | CMD_RXFIFORST_MASK );
2000114e:	687b      	ldr	r3, [r7, #4]
20001150:	681b      	ldr	r3, [r3, #0]
20001152:	331c      	adds	r3, #28
20001154:	2103      	movs	r1, #3
20001156:	4618      	mov	r0, r3
20001158:	f001 fcc4 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:178

        /* Clear all interrupts */
        HAL_set_8bit_reg( this_spi->base_addr, INTCLR, SPI_ALL_INTS );
2000115c:	687b      	ldr	r3, [r7, #4]
2000115e:	681b      	ldr	r3, [r3, #0]
20001160:	3304      	adds	r3, #4
20001162:	21ff      	movs	r1, #255	; 0xff
20001164:	4618      	mov	r0, r3
20001166:	f001 fcbd 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:181

        /* Ensure RXAVAIL, TXRFM, SSEND and CMDINT are disabled */
        HAL_set_8bit_reg( this_spi->base_addr, CTRL2, 0u );
2000116a:	687b      	ldr	r3, [r7, #4]
2000116c:	681b      	ldr	r3, [r3, #0]
2000116e:	3318      	adds	r3, #24
20001170:	2100      	movs	r1, #0
20001172:	4618      	mov	r0, r3
20001174:	f001 fcb6 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:184

        /* Enable the CoreSPI in master mode with TXUNDERRUN, RXOVFLOW and TXDONE interrupts disabled */
        HAL_set_8bit_reg( this_spi->base_addr, CTRL1, ENABLE | CTRL1_MASTER_MASK );
20001178:	687b      	ldr	r3, [r7, #4]
2000117a:	681b      	ldr	r3, [r3, #0]
2000117c:	2103      	movs	r1, #3
2000117e:	4618      	mov	r0, r3
20001180:	f001 fcb0 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:186
    }
}
20001184:	bf00      	nop
20001186:	3708      	adds	r7, #8
20001188:	46bd      	mov	sp, r7
2000118a:	bd80      	pop	{r7, pc}

2000118c <SPI_set_slave_select>:
SPI_set_slave_select():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:197
void SPI_set_slave_select
(
    spi_instance_t * this_spi,
    spi_slave_t slave
)
{
2000118c:	b580      	push	{r7, lr}
2000118e:	b084      	sub	sp, #16
20001190:	af00      	add	r7, sp, #0
20001192:	6078      	str	r0, [r7, #4]
20001194:	460b      	mov	r3, r1
20001196:	70fb      	strb	r3, [r7, #3]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:198
    spi_slave_t temp = (spi_slave_t)(0x00u) ;
20001198:	2300      	movs	r3, #0
2000119a:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:200

    HAL_ASSERT( NULL_INSTANCE != this_spi );
2000119c:	687b      	ldr	r3, [r7, #4]
2000119e:	2b00      	cmp	r3, #0
200011a0:	d100      	bne.n	200011a4 <SPI_set_slave_select+0x18>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:200 (discriminator 1)
200011a2:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:201
    HAL_ASSERT( SPI_MAX_NB_OF_SLAVES > slave );
200011a4:	78fb      	ldrb	r3, [r7, #3]
200011a6:	2b07      	cmp	r3, #7
200011a8:	d900      	bls.n	200011ac <SPI_set_slave_select+0x20>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:201 (discriminator 1)
200011aa:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:203
    
    if( ( NULL_INSTANCE != this_spi ) && ( SPI_MAX_NB_OF_SLAVES > slave ) )
200011ac:	687b      	ldr	r3, [r7, #4]
200011ae:	2b00      	cmp	r3, #0
200011b0:	d031      	beq.n	20001216 <SPI_set_slave_select+0x8a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:203 (discriminator 1)
200011b2:	78fb      	ldrb	r3, [r7, #3]
200011b4:	2b07      	cmp	r3, #7
200011b6:	d82e      	bhi.n	20001216 <SPI_set_slave_select+0x8a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:206
    {
        /* This function is only intended to be used with an SPI master */
        if( DISABLE != HAL_get_8bit_reg_field(this_spi->base_addr, CTRL1_MASTER ) )
200011b8:	687b      	ldr	r3, [r7, #4]
200011ba:	681b      	ldr	r3, [r3, #0]
200011bc:	2202      	movs	r2, #2
200011be:	2101      	movs	r1, #1
200011c0:	4618      	mov	r0, r3
200011c2:	f001 fca1 	bl	20002b08 <HW_get_8bit_reg_field>
200011c6:	4603      	mov	r3, r0
200011c8:	2b00      	cmp	r3, #0
200011ca:	d024      	beq.n	20001216 <SPI_set_slave_select+0x8a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:209
        {
            /* Recover from receiver overflow because of previous slave */
            if( ENABLE == HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXOVFLOW ) )
200011cc:	687b      	ldr	r3, [r7, #4]
200011ce:	681b      	ldr	r3, [r3, #0]
200011d0:	3320      	adds	r3, #32
200011d2:	2210      	movs	r2, #16
200011d4:	2104      	movs	r1, #4
200011d6:	4618      	mov	r0, r3
200011d8:	f001 fc96 	bl	20002b08 <HW_get_8bit_reg_field>
200011dc:	4603      	mov	r3, r0
200011de:	2b01      	cmp	r3, #1
200011e0:	d102      	bne.n	200011e8 <SPI_set_slave_select+0x5c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:211
            {
                 recover_from_rx_overflow( this_spi );
200011e2:	6878      	ldr	r0, [r7, #4]
200011e4:	f000 fa2a 	bl	2000163c <recover_from_rx_overflow>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:214
            }
            /* Set the correct slave select bit */
            temp = (spi_slave_t)( HAL_get_8bit_reg( this_spi->base_addr, SSEL ) | ((uint32_t)1u << (uint32_t)slave) );
200011e8:	687b      	ldr	r3, [r7, #4]
200011ea:	681b      	ldr	r3, [r3, #0]
200011ec:	3324      	adds	r3, #36	; 0x24
200011ee:	4618      	mov	r0, r3
200011f0:	f001 fc7a 	bl	20002ae8 <HW_get_8bit_reg>
200011f4:	4603      	mov	r3, r0
200011f6:	4619      	mov	r1, r3
200011f8:	78fb      	ldrb	r3, [r7, #3]
200011fa:	2201      	movs	r2, #1
200011fc:	fa02 f303 	lsl.w	r3, r2, r3
20001200:	b2db      	uxtb	r3, r3
20001202:	430b      	orrs	r3, r1
20001204:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:215
            HAL_set_8bit_reg( this_spi->base_addr, SSEL, (uint_fast8_t)temp );
20001206:	687b      	ldr	r3, [r7, #4]
20001208:	681b      	ldr	r3, [r3, #0]
2000120a:	3324      	adds	r3, #36	; 0x24
2000120c:	7bfa      	ldrb	r2, [r7, #15]
2000120e:	4611      	mov	r1, r2
20001210:	4618      	mov	r0, r3
20001212:	f001 fc67 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:218
        }
    }
}
20001216:	bf00      	nop
20001218:	3710      	adds	r7, #16
2000121a:	46bd      	mov	sp, r7
2000121c:	bd80      	pop	{r7, pc}

2000121e <SPI_clear_slave_select>:
SPI_clear_slave_select():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:229
void SPI_clear_slave_select
(
    spi_instance_t * this_spi,
    spi_slave_t slave
)
{
2000121e:	b580      	push	{r7, lr}
20001220:	b084      	sub	sp, #16
20001222:	af00      	add	r7, sp, #0
20001224:	6078      	str	r0, [r7, #4]
20001226:	460b      	mov	r3, r1
20001228:	70fb      	strb	r3, [r7, #3]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:230
    spi_slave_t temp = (spi_slave_t) (0x00u) ;
2000122a:	2300      	movs	r3, #0
2000122c:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:232

    HAL_ASSERT( NULL_INSTANCE != this_spi );
2000122e:	687b      	ldr	r3, [r7, #4]
20001230:	2b00      	cmp	r3, #0
20001232:	d100      	bne.n	20001236 <SPI_clear_slave_select+0x18>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:232 (discriminator 1)
20001234:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:233
    HAL_ASSERT( SPI_MAX_NB_OF_SLAVES > slave );
20001236:	78fb      	ldrb	r3, [r7, #3]
20001238:	2b07      	cmp	r3, #7
2000123a:	d900      	bls.n	2000123e <SPI_clear_slave_select+0x20>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:233 (discriminator 1)
2000123c:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:235
    
    if( ( NULL_INSTANCE != this_spi ) && ( SPI_MAX_NB_OF_SLAVES > slave ) )
2000123e:	687b      	ldr	r3, [r7, #4]
20001240:	2b00      	cmp	r3, #0
20001242:	d033      	beq.n	200012ac <SPI_clear_slave_select+0x8e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:235 (discriminator 1)
20001244:	78fb      	ldrb	r3, [r7, #3]
20001246:	2b07      	cmp	r3, #7
20001248:	d830      	bhi.n	200012ac <SPI_clear_slave_select+0x8e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:238
    {
        /* This function is only intended to be used with an SPI master. */
        if( DISABLE != HAL_get_8bit_reg_field(this_spi->base_addr, CTRL1_MASTER ) )
2000124a:	687b      	ldr	r3, [r7, #4]
2000124c:	681b      	ldr	r3, [r3, #0]
2000124e:	2202      	movs	r2, #2
20001250:	2101      	movs	r1, #1
20001252:	4618      	mov	r0, r3
20001254:	f001 fc58 	bl	20002b08 <HW_get_8bit_reg_field>
20001258:	4603      	mov	r3, r0
2000125a:	2b00      	cmp	r3, #0
2000125c:	d026      	beq.n	200012ac <SPI_clear_slave_select+0x8e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:241
        {
            /* Recover from receiver overflow because of previous slave */
            if( ENABLE == HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXOVFLOW) )
2000125e:	687b      	ldr	r3, [r7, #4]
20001260:	681b      	ldr	r3, [r3, #0]
20001262:	3320      	adds	r3, #32
20001264:	2210      	movs	r2, #16
20001266:	2104      	movs	r1, #4
20001268:	4618      	mov	r0, r3
2000126a:	f001 fc4d 	bl	20002b08 <HW_get_8bit_reg_field>
2000126e:	4603      	mov	r3, r0
20001270:	2b01      	cmp	r3, #1
20001272:	d102      	bne.n	2000127a <SPI_clear_slave_select+0x5c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:243
            {
                 recover_from_rx_overflow( this_spi );
20001274:	6878      	ldr	r0, [r7, #4]
20001276:	f000 f9e1 	bl	2000163c <recover_from_rx_overflow>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:246
            }
            /* Clear the correct slave select bit */
            temp = (spi_slave_t)( HAL_get_8bit_reg( this_spi->base_addr, SSEL ) & ~((uint32_t)1u << (uint32_t)slave) );
2000127a:	687b      	ldr	r3, [r7, #4]
2000127c:	681b      	ldr	r3, [r3, #0]
2000127e:	3324      	adds	r3, #36	; 0x24
20001280:	4618      	mov	r0, r3
20001282:	f001 fc31 	bl	20002ae8 <HW_get_8bit_reg>
20001286:	4603      	mov	r3, r0
20001288:	4619      	mov	r1, r3
2000128a:	78fb      	ldrb	r3, [r7, #3]
2000128c:	2201      	movs	r2, #1
2000128e:	fa02 f303 	lsl.w	r3, r2, r3
20001292:	b2db      	uxtb	r3, r3
20001294:	43db      	mvns	r3, r3
20001296:	b2db      	uxtb	r3, r3
20001298:	400b      	ands	r3, r1
2000129a:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:247
            HAL_set_8bit_reg( this_spi->base_addr, SSEL, (uint_fast8_t)temp ) ;
2000129c:	687b      	ldr	r3, [r7, #4]
2000129e:	681b      	ldr	r3, [r3, #0]
200012a0:	3324      	adds	r3, #36	; 0x24
200012a2:	7bfa      	ldrb	r2, [r7, #15]
200012a4:	4611      	mov	r1, r2
200012a6:	4618      	mov	r0, r3
200012a8:	f001 fc1c 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:250
        }
    }
}
200012ac:	bf00      	nop
200012ae:	3710      	adds	r7, #16
200012b0:	46bd      	mov	sp, r7
200012b2:	bd80      	pop	{r7, pc}

200012b4 <SPI_transfer_block>:
SPI_transfer_block():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:305
    const uint8_t * cmd_buffer,
    uint16_t cmd_byte_size,
    uint8_t * rx_buffer,
    uint16_t rx_byte_size
)
{
200012b4:	b580      	push	{r7, lr}
200012b6:	b088      	sub	sp, #32
200012b8:	af00      	add	r7, sp, #0
200012ba:	60f8      	str	r0, [r7, #12]
200012bc:	60b9      	str	r1, [r7, #8]
200012be:	603b      	str	r3, [r7, #0]
200012c0:	4613      	mov	r3, r2
200012c2:	80fb      	strh	r3, [r7, #6]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:306
    uint32_t transfer_size = 0U;   /* Total number of bytes to  transfer. */
200012c4:	2300      	movs	r3, #0
200012c6:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:307
    uint16_t transfer_idx = 0U;    /* Number of bytes transferred so far */
200012c8:	2300      	movs	r3, #0
200012ca:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:308
    uint16_t tx_idx = 0u;          /* Number of valid data bytes sent */
200012cc:	2300      	movs	r3, #0
200012ce:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:309
    uint16_t rx_idx = 0u;          /* Number of valid response bytes received */
200012d0:	2300      	movs	r3, #0
200012d2:	837b      	strh	r3, [r7, #26]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:310
    uint16_t transit = 0U;         /* Number of bytes "in flight" to avoid FIFO errors */
200012d4:	2300      	movs	r3, #0
200012d6:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:312

    HAL_ASSERT( NULL_INSTANCE != this_spi );
200012d8:	68fb      	ldr	r3, [r7, #12]
200012da:	2b00      	cmp	r3, #0
200012dc:	d100      	bne.n	200012e0 <SPI_transfer_block+0x2c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:312 (discriminator 1)
200012de:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:314

    if( NULL_INSTANCE != this_spi )
200012e0:	68fb      	ldr	r3, [r7, #12]
200012e2:	2b00      	cmp	r3, #0
200012e4:	f000 8190 	beq.w	20001608 <SPI_transfer_block+0x354>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:317
    {
        /* This function is only intended to be used with an SPI master. */
        if( ( DISABLE != HAL_get_8bit_reg_field(this_spi->base_addr, CTRL1_MASTER ) ) &&
200012e8:	68fb      	ldr	r3, [r7, #12]
200012ea:	681b      	ldr	r3, [r3, #0]
200012ec:	2202      	movs	r2, #2
200012ee:	2101      	movs	r1, #1
200012f0:	4618      	mov	r0, r3
200012f2:	f001 fc09 	bl	20002b08 <HW_get_8bit_reg_field>
200012f6:	4603      	mov	r3, r0
200012f8:	2b00      	cmp	r3, #0
200012fa:	f000 8185 	beq.w	20001608 <SPI_transfer_block+0x354>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:319 (discriminator 1)
            /* Check for empty transfer as well */
            ( 0u != ( (uint32_t)cmd_byte_size + (uint32_t)rx_byte_size ) ) )
200012fe:	88fa      	ldrh	r2, [r7, #6]
20001300:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
20001302:	4413      	add	r3, r2
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:317 (discriminator 1)
        if( ( DISABLE != HAL_get_8bit_reg_field(this_spi->base_addr, CTRL1_MASTER ) ) &&
20001304:	2b00      	cmp	r3, #0
20001306:	f000 817f 	beq.w	20001608 <SPI_transfer_block+0x354>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:326
            /*
             * tansfer_size is one less than the real amount as we have to write
             * the last frame separately to trigger the slave deselect in case
             * the SPS option is in place.
             */
            transfer_size = ( (uint32_t)cmd_byte_size + (uint32_t)rx_byte_size ) - 1u;
2000130a:	88fa      	ldrh	r2, [r7, #6]
2000130c:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
2000130e:	4413      	add	r3, r2
20001310:	3b01      	subs	r3, #1
20001312:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:328
            /* Flush the receive and transmit FIFOs */
            HAL_set_8bit_reg(this_spi->base_addr, CMD, (uint32_t)(CMD_TXFIFORST_MASK | CMD_RXFIFORST_MASK ));
20001314:	68fb      	ldr	r3, [r7, #12]
20001316:	681b      	ldr	r3, [r3, #0]
20001318:	331c      	adds	r3, #28
2000131a:	2103      	movs	r1, #3
2000131c:	4618      	mov	r0, r3
2000131e:	f001 fbe1 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:331

            /* Recover from receiver overflow because of previous slave */
            if( ENABLE == HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXOVFLOW) )
20001322:	68fb      	ldr	r3, [r7, #12]
20001324:	681b      	ldr	r3, [r3, #0]
20001326:	3320      	adds	r3, #32
20001328:	2210      	movs	r2, #16
2000132a:	2104      	movs	r1, #4
2000132c:	4618      	mov	r0, r3
2000132e:	f001 fbeb 	bl	20002b08 <HW_get_8bit_reg_field>
20001332:	4603      	mov	r3, r0
20001334:	2b01      	cmp	r3, #1
20001336:	d102      	bne.n	2000133e <SPI_transfer_block+0x8a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:333
            {
                 recover_from_rx_overflow( this_spi );
20001338:	68f8      	ldr	r0, [r7, #12]
2000133a:	f000 f97f 	bl	2000163c <recover_from_rx_overflow>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:337
            }

            /* Disable the Core SPI for a little bit, while we load the TX FIFO */
            HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, DISABLE );
2000133e:	68fb      	ldr	r3, [r7, #12]
20001340:	6818      	ldr	r0, [r3, #0]
20001342:	2300      	movs	r3, #0
20001344:	2201      	movs	r2, #1
20001346:	2100      	movs	r1, #0
20001348:	f001 fbd0 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:339

            while( ( tx_idx < transfer_size ) && ( tx_idx < this_spi->fifo_depth ) )
2000134c:	e01c      	b.n	20001388 <SPI_transfer_block+0xd4>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:341
            {
                if( tx_idx < cmd_byte_size )
2000134e:	8bba      	ldrh	r2, [r7, #28]
20001350:	88fb      	ldrh	r3, [r7, #6]
20001352:	429a      	cmp	r2, r3
20001354:	d20b      	bcs.n	2000136e <SPI_transfer_block+0xba>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:344
                {
                    /* Push out valid data */
                    HAL_set_32bit_reg( this_spi->base_addr, TXDATA, (uint32_t)cmd_buffer[tx_idx] );
20001356:	68fb      	ldr	r3, [r7, #12]
20001358:	681b      	ldr	r3, [r3, #0]
2000135a:	f103 000c 	add.w	r0, r3, #12
2000135e:	8bbb      	ldrh	r3, [r7, #28]
20001360:	68ba      	ldr	r2, [r7, #8]
20001362:	4413      	add	r3, r2
20001364:	781b      	ldrb	r3, [r3, #0]
20001366:	4619      	mov	r1, r3
20001368:	f001 fb8c 	bl	20002a84 <HW_set_32bit_reg>
2000136c:	e006      	b.n	2000137c <SPI_transfer_block+0xc8>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:349
                }
                else
                {
                    /* Push out 0s to get data back from slave */
                    HAL_set_32bit_reg( this_spi->base_addr, TXDATA, 0U );
2000136e:	68fb      	ldr	r3, [r7, #12]
20001370:	681b      	ldr	r3, [r3, #0]
20001372:	330c      	adds	r3, #12
20001374:	2100      	movs	r1, #0
20001376:	4618      	mov	r0, r3
20001378:	f001 fb84 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:351
                }
                ++transit;
2000137c:	8b3b      	ldrh	r3, [r7, #24]
2000137e:	3301      	adds	r3, #1
20001380:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:352
                ++tx_idx;
20001382:	8bbb      	ldrh	r3, [r7, #28]
20001384:	3301      	adds	r3, #1
20001386:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:339
            while( ( tx_idx < transfer_size ) && ( tx_idx < this_spi->fifo_depth ) )
20001388:	8bbb      	ldrh	r3, [r7, #28]
2000138a:	697a      	ldr	r2, [r7, #20]
2000138c:	429a      	cmp	r2, r3
2000138e:	d905      	bls.n	2000139c <SPI_transfer_block+0xe8>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:339 (discriminator 1)
20001390:	68fb      	ldr	r3, [r7, #12]
20001392:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
20001396:	8bba      	ldrh	r2, [r7, #28]
20001398:	429a      	cmp	r2, r3
2000139a:	d3d8      	bcc.n	2000134e <SPI_transfer_block+0x9a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:356
            }

            /* If room left to put last frame in before the off, then do it */
            if( ( tx_idx == transfer_size ) && ( tx_idx < this_spi->fifo_depth ) )
2000139c:	8bbb      	ldrh	r3, [r7, #28]
2000139e:	697a      	ldr	r2, [r7, #20]
200013a0:	429a      	cmp	r2, r3
200013a2:	d122      	bne.n	200013ea <SPI_transfer_block+0x136>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:356 (discriminator 1)
200013a4:	68fb      	ldr	r3, [r7, #12]
200013a6:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
200013aa:	8bba      	ldrh	r2, [r7, #28]
200013ac:	429a      	cmp	r2, r3
200013ae:	d21c      	bcs.n	200013ea <SPI_transfer_block+0x136>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:358
            {
                if( tx_idx < cmd_byte_size )
200013b0:	8bba      	ldrh	r2, [r7, #28]
200013b2:	88fb      	ldrh	r3, [r7, #6]
200013b4:	429a      	cmp	r2, r3
200013b6:	d20b      	bcs.n	200013d0 <SPI_transfer_block+0x11c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:361
                {
                    /* Push out valid data, not expecting any reply this time */
                    HAL_set_32bit_reg( this_spi->base_addr, TXLAST, (uint32_t)cmd_buffer[tx_idx] );
200013b8:	68fb      	ldr	r3, [r7, #12]
200013ba:	681b      	ldr	r3, [r3, #0]
200013bc:	f103 0028 	add.w	r0, r3, #40	; 0x28
200013c0:	8bbb      	ldrh	r3, [r7, #28]
200013c2:	68ba      	ldr	r2, [r7, #8]
200013c4:	4413      	add	r3, r2
200013c6:	781b      	ldrb	r3, [r3, #0]
200013c8:	4619      	mov	r1, r3
200013ca:	f001 fb5b 	bl	20002a84 <HW_set_32bit_reg>
200013ce:	e006      	b.n	200013de <SPI_transfer_block+0x12a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:366
                }
                else
                {
                    /* Push out last 0 to get data back from slave */
                    HAL_set_32bit_reg( this_spi->base_addr, TXLAST, 0U );
200013d0:	68fb      	ldr	r3, [r7, #12]
200013d2:	681b      	ldr	r3, [r3, #0]
200013d4:	3328      	adds	r3, #40	; 0x28
200013d6:	2100      	movs	r1, #0
200013d8:	4618      	mov	r0, r3
200013da:	f001 fb53 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:369
                }

                ++transit;
200013de:	8b3b      	ldrh	r3, [r7, #24]
200013e0:	3301      	adds	r3, #1
200013e2:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:370
                ++tx_idx;
200013e4:	8bbb      	ldrh	r3, [r7, #28]
200013e6:	3301      	adds	r3, #1
200013e8:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:374
            }

            /* FIFO is all loaded up so enable Core SPI to start transfer */
            HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, ENABLE );
200013ea:	68fb      	ldr	r3, [r7, #12]
200013ec:	6818      	ldr	r0, [r3, #0]
200013ee:	2301      	movs	r3, #1
200013f0:	2201      	movs	r2, #1
200013f2:	2100      	movs	r1, #0
200013f4:	f001 fb7a 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:389
             *
             * First stage transfers remaining command bytes (if any).
             * At this stage anything in the RX FIFO can be discarded as it is
             * not part of a valid response.
             */
            while( tx_idx < cmd_byte_size )
200013f8:	e03d      	b.n	20001476 <SPI_transfer_block+0x1c2>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:391
            {
                if( transit < this_spi->fifo_depth )
200013fa:	68fb      	ldr	r3, [r7, #12]
200013fc:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
20001400:	8b3a      	ldrh	r2, [r7, #24]
20001402:	429a      	cmp	r2, r3
20001404:	d220      	bcs.n	20001448 <SPI_transfer_block+0x194>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:394
                {
                    /* Send another byte. */
                    if( tx_idx == transfer_size ) /* Last frame is special... */
20001406:	8bbb      	ldrh	r3, [r7, #28]
20001408:	697a      	ldr	r2, [r7, #20]
2000140a:	429a      	cmp	r2, r3
2000140c:	d10b      	bne.n	20001426 <SPI_transfer_block+0x172>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:396
                    {
                        HAL_set_32bit_reg( this_spi->base_addr, TXLAST, (uint32_t)cmd_buffer[tx_idx] );
2000140e:	68fb      	ldr	r3, [r7, #12]
20001410:	681b      	ldr	r3, [r3, #0]
20001412:	f103 0028 	add.w	r0, r3, #40	; 0x28
20001416:	8bbb      	ldrh	r3, [r7, #28]
20001418:	68ba      	ldr	r2, [r7, #8]
2000141a:	4413      	add	r3, r2
2000141c:	781b      	ldrb	r3, [r3, #0]
2000141e:	4619      	mov	r1, r3
20001420:	f001 fb30 	bl	20002a84 <HW_set_32bit_reg>
20001424:	e00a      	b.n	2000143c <SPI_transfer_block+0x188>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:400
                    }
                    else
                    {
                        HAL_set_32bit_reg( this_spi->base_addr, TXDATA, (uint32_t)cmd_buffer[tx_idx] );
20001426:	68fb      	ldr	r3, [r7, #12]
20001428:	681b      	ldr	r3, [r3, #0]
2000142a:	f103 000c 	add.w	r0, r3, #12
2000142e:	8bbb      	ldrh	r3, [r7, #28]
20001430:	68ba      	ldr	r2, [r7, #8]
20001432:	4413      	add	r3, r2
20001434:	781b      	ldrb	r3, [r3, #0]
20001436:	4619      	mov	r1, r3
20001438:	f001 fb24 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:402
                    }
                    ++tx_idx;
2000143c:	8bbb      	ldrh	r3, [r7, #28]
2000143e:	3301      	adds	r3, #1
20001440:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:403
                    ++transit;
20001442:	8b3b      	ldrh	r3, [r7, #24]
20001444:	3301      	adds	r3, #1
20001446:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:405
                }
                if( !HAL_get_8bit_reg_field( this_spi->base_addr, STATUS_RXEMPTY ) )
20001448:	68fb      	ldr	r3, [r7, #12]
2000144a:	681b      	ldr	r3, [r3, #0]
2000144c:	3320      	adds	r3, #32
2000144e:	2204      	movs	r2, #4
20001450:	2102      	movs	r1, #2
20001452:	4618      	mov	r0, r3
20001454:	f001 fb58 	bl	20002b08 <HW_get_8bit_reg_field>
20001458:	4603      	mov	r3, r0
2000145a:	2b00      	cmp	r3, #0
2000145c:	d10b      	bne.n	20001476 <SPI_transfer_block+0x1c2>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:408
                {
                    /* Read and discard. */
                    HAL_get_32bit_reg( this_spi->base_addr, RXDATA );
2000145e:	68fb      	ldr	r3, [r7, #12]
20001460:	681b      	ldr	r3, [r3, #0]
20001462:	3308      	adds	r3, #8
20001464:	4618      	mov	r0, r3
20001466:	f001 fb0f 	bl	20002a88 <HW_get_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:409
                    ++transfer_idx;
2000146a:	8bfb      	ldrh	r3, [r7, #30]
2000146c:	3301      	adds	r3, #1
2000146e:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:410
                    --transit;
20001470:	8b3b      	ldrh	r3, [r7, #24]
20001472:	3b01      	subs	r3, #1
20001474:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:389
            while( tx_idx < cmd_byte_size )
20001476:	8bba      	ldrh	r2, [r7, #28]
20001478:	88fb      	ldrh	r3, [r7, #6]
2000147a:	429a      	cmp	r2, r3
2000147c:	d3bd      	bcc.n	200013fa <SPI_transfer_block+0x146>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:418
            /*
             * Now, we are writing dummy bytes to push through the response from
             * the slave but we still have to keep discarding any read data that
             * corresponds with one of our command bytes.
             */
            while( transfer_idx < cmd_byte_size )
2000147e:	e02d      	b.n	200014dc <SPI_transfer_block+0x228>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:420
            {
                if( transit < this_spi->fifo_depth )
20001480:	68fb      	ldr	r3, [r7, #12]
20001482:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
20001486:	8b3a      	ldrh	r2, [r7, #24]
20001488:	429a      	cmp	r2, r3
2000148a:	d210      	bcs.n	200014ae <SPI_transfer_block+0x1fa>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:422
                {
                    if( tx_idx < transfer_size )
2000148c:	8bbb      	ldrh	r3, [r7, #28]
2000148e:	697a      	ldr	r2, [r7, #20]
20001490:	429a      	cmp	r2, r3
20001492:	d90c      	bls.n	200014ae <SPI_transfer_block+0x1fa>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:424
                    {
                        HAL_set_32bit_reg( this_spi->base_addr, TXDATA, 0U );
20001494:	68fb      	ldr	r3, [r7, #12]
20001496:	681b      	ldr	r3, [r3, #0]
20001498:	330c      	adds	r3, #12
2000149a:	2100      	movs	r1, #0
2000149c:	4618      	mov	r0, r3
2000149e:	f001 faf1 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:425
                        ++tx_idx;
200014a2:	8bbb      	ldrh	r3, [r7, #28]
200014a4:	3301      	adds	r3, #1
200014a6:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:426
                        ++transit;
200014a8:	8b3b      	ldrh	r3, [r7, #24]
200014aa:	3301      	adds	r3, #1
200014ac:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:429
                    }
                }
                if( !HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXEMPTY ) )
200014ae:	68fb      	ldr	r3, [r7, #12]
200014b0:	681b      	ldr	r3, [r3, #0]
200014b2:	3320      	adds	r3, #32
200014b4:	2204      	movs	r2, #4
200014b6:	2102      	movs	r1, #2
200014b8:	4618      	mov	r0, r3
200014ba:	f001 fb25 	bl	20002b08 <HW_get_8bit_reg_field>
200014be:	4603      	mov	r3, r0
200014c0:	2b00      	cmp	r3, #0
200014c2:	d10b      	bne.n	200014dc <SPI_transfer_block+0x228>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:432
                {
                    /* Read and discard. */
                    HAL_get_32bit_reg( this_spi->base_addr, RXDATA );
200014c4:	68fb      	ldr	r3, [r7, #12]
200014c6:	681b      	ldr	r3, [r3, #0]
200014c8:	3308      	adds	r3, #8
200014ca:	4618      	mov	r0, r3
200014cc:	f001 fadc 	bl	20002a88 <HW_get_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:433
                    ++transfer_idx;
200014d0:	8bfb      	ldrh	r3, [r7, #30]
200014d2:	3301      	adds	r3, #1
200014d4:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:434
                    --transit;
200014d6:	8b3b      	ldrh	r3, [r7, #24]
200014d8:	3b01      	subs	r3, #1
200014da:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:418
            while( transfer_idx < cmd_byte_size )
200014dc:	8bfa      	ldrh	r2, [r7, #30]
200014de:	88fb      	ldrh	r3, [r7, #6]
200014e0:	429a      	cmp	r2, r3
200014e2:	d3cd      	bcc.n	20001480 <SPI_transfer_block+0x1cc>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:441
            }
            /*
             * Now we are now only sending dummy data to push through the
             * valid response data which we store in the response buffer.
             */
            while( tx_idx < transfer_size )
200014e4:	e032      	b.n	2000154c <SPI_transfer_block+0x298>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:443
            {
                if( transit < this_spi->fifo_depth )
200014e6:	68fb      	ldr	r3, [r7, #12]
200014e8:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
200014ec:	8b3a      	ldrh	r2, [r7, #24]
200014ee:	429a      	cmp	r2, r3
200014f0:	d20c      	bcs.n	2000150c <SPI_transfer_block+0x258>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:445
                {
                    HAL_set_32bit_reg( this_spi->base_addr, TXDATA, 0U );
200014f2:	68fb      	ldr	r3, [r7, #12]
200014f4:	681b      	ldr	r3, [r3, #0]
200014f6:	330c      	adds	r3, #12
200014f8:	2100      	movs	r1, #0
200014fa:	4618      	mov	r0, r3
200014fc:	f001 fac2 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:446
                    ++tx_idx;
20001500:	8bbb      	ldrh	r3, [r7, #28]
20001502:	3301      	adds	r3, #1
20001504:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:447
                    ++transit;
20001506:	8b3b      	ldrh	r3, [r7, #24]
20001508:	3301      	adds	r3, #1
2000150a:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:449
                }
                if( !HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXEMPTY ) )
2000150c:	68fb      	ldr	r3, [r7, #12]
2000150e:	681b      	ldr	r3, [r3, #0]
20001510:	3320      	adds	r3, #32
20001512:	2204      	movs	r2, #4
20001514:	2102      	movs	r1, #2
20001516:	4618      	mov	r0, r3
20001518:	f001 faf6 	bl	20002b08 <HW_get_8bit_reg_field>
2000151c:	4603      	mov	r3, r0
2000151e:	2b00      	cmp	r3, #0
20001520:	d114      	bne.n	2000154c <SPI_transfer_block+0x298>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:452
                {
                    /* Process received byte. */
                    rx_buffer[rx_idx] = (uint8_t)HAL_get_32bit_reg( this_spi->base_addr, RXDATA );
20001522:	68fb      	ldr	r3, [r7, #12]
20001524:	681b      	ldr	r3, [r3, #0]
20001526:	3308      	adds	r3, #8
20001528:	4618      	mov	r0, r3
2000152a:	f001 faad 	bl	20002a88 <HW_get_32bit_reg>
2000152e:	4601      	mov	r1, r0
20001530:	8b7b      	ldrh	r3, [r7, #26]
20001532:	683a      	ldr	r2, [r7, #0]
20001534:	4413      	add	r3, r2
20001536:	b2ca      	uxtb	r2, r1
20001538:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:453
                    ++rx_idx;
2000153a:	8b7b      	ldrh	r3, [r7, #26]
2000153c:	3301      	adds	r3, #1
2000153e:	837b      	strh	r3, [r7, #26]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:454
                    ++transfer_idx;
20001540:	8bfb      	ldrh	r3, [r7, #30]
20001542:	3301      	adds	r3, #1
20001544:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:455
                    --transit;
20001546:	8b3b      	ldrh	r3, [r7, #24]
20001548:	3b01      	subs	r3, #1
2000154a:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:441
            while( tx_idx < transfer_size )
2000154c:	8bbb      	ldrh	r3, [r7, #28]
2000154e:	697a      	ldr	r2, [r7, #20]
20001550:	429a      	cmp	r2, r3
20001552:	d8c8      	bhi.n	200014e6 <SPI_transfer_block+0x232>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:459
                }
            }
            /* If we still need to send the last frame */
            while( tx_idx == transfer_size )
20001554:	e032      	b.n	200015bc <SPI_transfer_block+0x308>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:461
            {
                if( transit < this_spi->fifo_depth )
20001556:	68fb      	ldr	r3, [r7, #12]
20001558:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
2000155c:	8b3a      	ldrh	r2, [r7, #24]
2000155e:	429a      	cmp	r2, r3
20001560:	d20c      	bcs.n	2000157c <SPI_transfer_block+0x2c8>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:463
                {
                    HAL_set_32bit_reg( this_spi->base_addr, TXLAST, 0U );
20001562:	68fb      	ldr	r3, [r7, #12]
20001564:	681b      	ldr	r3, [r3, #0]
20001566:	3328      	adds	r3, #40	; 0x28
20001568:	2100      	movs	r1, #0
2000156a:	4618      	mov	r0, r3
2000156c:	f001 fa8a 	bl	20002a84 <HW_set_32bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:464
                    ++tx_idx;
20001570:	8bbb      	ldrh	r3, [r7, #28]
20001572:	3301      	adds	r3, #1
20001574:	83bb      	strh	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:465
                    ++transit;
20001576:	8b3b      	ldrh	r3, [r7, #24]
20001578:	3301      	adds	r3, #1
2000157a:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:467
                }
                if( !HAL_get_8bit_reg_field( this_spi->base_addr, STATUS_RXEMPTY ) )
2000157c:	68fb      	ldr	r3, [r7, #12]
2000157e:	681b      	ldr	r3, [r3, #0]
20001580:	3320      	adds	r3, #32
20001582:	2204      	movs	r2, #4
20001584:	2102      	movs	r1, #2
20001586:	4618      	mov	r0, r3
20001588:	f001 fabe 	bl	20002b08 <HW_get_8bit_reg_field>
2000158c:	4603      	mov	r3, r0
2000158e:	2b00      	cmp	r3, #0
20001590:	d114      	bne.n	200015bc <SPI_transfer_block+0x308>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:470
                {
                    /* Process received byte. */
                    rx_buffer[rx_idx] = (uint8_t)HAL_get_32bit_reg( this_spi->base_addr, RXDATA );
20001592:	68fb      	ldr	r3, [r7, #12]
20001594:	681b      	ldr	r3, [r3, #0]
20001596:	3308      	adds	r3, #8
20001598:	4618      	mov	r0, r3
2000159a:	f001 fa75 	bl	20002a88 <HW_get_32bit_reg>
2000159e:	4601      	mov	r1, r0
200015a0:	8b7b      	ldrh	r3, [r7, #26]
200015a2:	683a      	ldr	r2, [r7, #0]
200015a4:	4413      	add	r3, r2
200015a6:	b2ca      	uxtb	r2, r1
200015a8:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:471
                    ++rx_idx;
200015aa:	8b7b      	ldrh	r3, [r7, #26]
200015ac:	3301      	adds	r3, #1
200015ae:	837b      	strh	r3, [r7, #26]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:472
                    ++transfer_idx;
200015b0:	8bfb      	ldrh	r3, [r7, #30]
200015b2:	3301      	adds	r3, #1
200015b4:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:473
                    --transit;
200015b6:	8b3b      	ldrh	r3, [r7, #24]
200015b8:	3b01      	subs	r3, #1
200015ba:	833b      	strh	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:459
            while( tx_idx == transfer_size )
200015bc:	8bbb      	ldrh	r3, [r7, #28]
200015be:	697a      	ldr	r2, [r7, #20]
200015c0:	429a      	cmp	r2, r3
200015c2:	d0c8      	beq.n	20001556 <SPI_transfer_block+0x2a2>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:480
            }
            /*
             * Finally, we are now finished sending data and are only reading
             * valid response data which we store in the response buffer.
             */
            while( transfer_idx <= transfer_size )
200015c4:	e01c      	b.n	20001600 <SPI_transfer_block+0x34c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:482
            {
                if( !HAL_get_8bit_reg_field(this_spi->base_addr, STATUS_RXEMPTY ) )
200015c6:	68fb      	ldr	r3, [r7, #12]
200015c8:	681b      	ldr	r3, [r3, #0]
200015ca:	3320      	adds	r3, #32
200015cc:	2204      	movs	r2, #4
200015ce:	2102      	movs	r1, #2
200015d0:	4618      	mov	r0, r3
200015d2:	f001 fa99 	bl	20002b08 <HW_get_8bit_reg_field>
200015d6:	4603      	mov	r3, r0
200015d8:	2b00      	cmp	r3, #0
200015da:	d111      	bne.n	20001600 <SPI_transfer_block+0x34c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:485
                {
                    /* Process received byte. */
                    rx_buffer[rx_idx] = (uint8_t)HAL_get_32bit_reg( this_spi->base_addr, RXDATA );
200015dc:	68fb      	ldr	r3, [r7, #12]
200015de:	681b      	ldr	r3, [r3, #0]
200015e0:	3308      	adds	r3, #8
200015e2:	4618      	mov	r0, r3
200015e4:	f001 fa50 	bl	20002a88 <HW_get_32bit_reg>
200015e8:	4601      	mov	r1, r0
200015ea:	8b7b      	ldrh	r3, [r7, #26]
200015ec:	683a      	ldr	r2, [r7, #0]
200015ee:	4413      	add	r3, r2
200015f0:	b2ca      	uxtb	r2, r1
200015f2:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:486
                    ++rx_idx;
200015f4:	8b7b      	ldrh	r3, [r7, #26]
200015f6:	3301      	adds	r3, #1
200015f8:	837b      	strh	r3, [r7, #26]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:487
                    ++transfer_idx;
200015fa:	8bfb      	ldrh	r3, [r7, #30]
200015fc:	3301      	adds	r3, #1
200015fe:	83fb      	strh	r3, [r7, #30]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:480
            while( transfer_idx <= transfer_size )
20001600:	8bfb      	ldrh	r3, [r7, #30]
20001602:	697a      	ldr	r2, [r7, #20]
20001604:	429a      	cmp	r2, r3
20001606:	d2de      	bcs.n	200015c6 <SPI_transfer_block+0x312>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:492
                }
            }
        }
    }
}
20001608:	bf00      	nop
2000160a:	3720      	adds	r7, #32
2000160c:	46bd      	mov	sp, r7
2000160e:	bd80      	pop	{r7, pc}

20001610 <SPI_enable>:
SPI_enable():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:790
 */
void SPI_enable
(
    spi_instance_t * this_spi
)
{
20001610:	b580      	push	{r7, lr}
20001612:	b082      	sub	sp, #8
20001614:	af00      	add	r7, sp, #0
20001616:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:791
    HAL_ASSERT( NULL_INSTANCE != this_spi );
20001618:	687b      	ldr	r3, [r7, #4]
2000161a:	2b00      	cmp	r3, #0
2000161c:	d100      	bne.n	20001620 <SPI_enable+0x10>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:791 (discriminator 1)
2000161e:	be00      	bkpt	0x0000
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:793

    if( NULL_INSTANCE != this_spi )
20001620:	687b      	ldr	r3, [r7, #4]
20001622:	2b00      	cmp	r3, #0
20001624:	d006      	beq.n	20001634 <SPI_enable+0x24>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:796
    {
        /* Disable the Core SPI while we configure */
        HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, ENABLE );
20001626:	687b      	ldr	r3, [r7, #4]
20001628:	6818      	ldr	r0, [r3, #0]
2000162a:	2301      	movs	r3, #1
2000162c:	2201      	movs	r2, #1
2000162e:	2100      	movs	r1, #0
20001630:	f001 fa5c 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:798
    }
}
20001634:	bf00      	nop
20001636:	3708      	adds	r7, #8
20001638:	46bd      	mov	sp, r7
2000163a:	bd80      	pop	{r7, pc}

2000163c <recover_from_rx_overflow>:
recover_from_rx_overflow():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1129
 */
static void recover_from_rx_overflow
(
    const spi_instance_t * this_spi
)
{
2000163c:	b580      	push	{r7, lr}
2000163e:	b082      	sub	sp, #8
20001640:	af00      	add	r7, sp, #0
20001642:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1131
    /* Disable CoreSPI */
    HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, DISABLE );
20001644:	687b      	ldr	r3, [r7, #4]
20001646:	6818      	ldr	r0, [r3, #0]
20001648:	2300      	movs	r3, #0
2000164a:	2201      	movs	r2, #1
2000164c:	2100      	movs	r1, #0
2000164e:	f001 fa4d 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1134

    /* Reset TX and RX FIFOs */
    HAL_set_8bit_reg( this_spi->base_addr, CMD, CMD_TXFIFORST_MASK | CMD_RXFIFORST_MASK );
20001652:	687b      	ldr	r3, [r7, #4]
20001654:	681b      	ldr	r3, [r3, #0]
20001656:	331c      	adds	r3, #28
20001658:	2103      	movs	r1, #3
2000165a:	4618      	mov	r0, r3
2000165c:	f001 fa42 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1137

    /* Clear all interrupts */
    HAL_set_8bit_reg( this_spi->base_addr, INTCLR, SPI_ALL_INTS );
20001660:	687b      	ldr	r3, [r7, #4]
20001662:	681b      	ldr	r3, [r3, #0]
20001664:	3304      	adds	r3, #4
20001666:	21ff      	movs	r1, #255	; 0xff
20001668:	4618      	mov	r0, r3
2000166a:	f001 fa3b 	bl	20002ae4 <HW_set_8bit_reg>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1140

    /* Enable CoreSPI */
    HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, ENABLE );
2000166e:	687b      	ldr	r3, [r7, #4]
20001670:	6818      	ldr	r0, [r3, #0]
20001672:	2301      	movs	r3, #1
20001674:	2201      	movs	r2, #1
20001676:	2100      	movs	r1, #0
20001678:	f001 fa38 	bl	20002aec <HW_set_8bit_reg_field>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/fpga_ip/CoreSPI/core_spi.c:1141
}
2000167c:	bf00      	nop
2000167e:	3708      	adds	r7, #8
20001680:	46bd      	mov	sp, r7
20001682:	bd80      	pop	{r7, pc}

20001684 <spi_flash_read>:
spi_flash_read():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:117
(
		uint32_t address,
		uint8_t * rx_buffer,
		size_t size_in_bytes
)
{
20001684:	b580      	push	{r7, lr}
20001686:	b088      	sub	sp, #32
20001688:	af02      	add	r7, sp, #8
2000168a:	60f8      	str	r0, [r7, #12]
2000168c:	60b9      	str	r1, [r7, #8]
2000168e:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:123
	uint8_t cmd_buffer[4];

	//write_enable();
	//enter_4byte_address_mode();

	cmd_buffer[0] = READ_ARRAY_OPCODE;
20001690:	2303      	movs	r3, #3
20001692:	753b      	strb	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:124
	cmd_buffer[1] = (uint8_t)((address >> 16) & 0xFF);
20001694:	68fb      	ldr	r3, [r7, #12]
20001696:	0c1b      	lsrs	r3, r3, #16
20001698:	b2db      	uxtb	r3, r3
2000169a:	757b      	strb	r3, [r7, #21]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:125
	cmd_buffer[2] = (uint8_t)((address >> 8) & 0xFF);
2000169c:	68fb      	ldr	r3, [r7, #12]
2000169e:	0a1b      	lsrs	r3, r3, #8
200016a0:	b2db      	uxtb	r3, r3
200016a2:	75bb      	strb	r3, [r7, #22]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:126
	cmd_buffer[3] = (uint8_t)(address & 0xFF);
200016a4:	68fb      	ldr	r3, [r7, #12]
200016a6:	b2db      	uxtb	r3, r3
200016a8:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:128

	SPI_set_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0);
200016aa:	2100      	movs	r1, #0
200016ac:	480c      	ldr	r0, [pc, #48]	; (200016e0 <spi_flash_read+0x5c>)
200016ae:	f7ff fd6d 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:129
	wait_ready();
200016b2:	f000 f927 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:130
	SPI_transfer_block( SPI_FLASH_INSTANCE, cmd_buffer, 4, rx_buffer, size_in_bytes );
200016b6:	687b      	ldr	r3, [r7, #4]
200016b8:	b29b      	uxth	r3, r3
200016ba:	f107 0114 	add.w	r1, r7, #20
200016be:	9300      	str	r3, [sp, #0]
200016c0:	68bb      	ldr	r3, [r7, #8]
200016c2:	2204      	movs	r2, #4
200016c4:	4806      	ldr	r0, [pc, #24]	; (200016e0 <spi_flash_read+0x5c>)
200016c6:	f7ff fdf5 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:131
	wait_ready();
200016ca:	f000 f91b 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:132
	SPI_clear_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
200016ce:	2100      	movs	r1, #0
200016d0:	4803      	ldr	r0, [pc, #12]	; (200016e0 <spi_flash_read+0x5c>)
200016d2:	f7ff fda4 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:133
	return 0;
200016d6:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:135

}
200016d8:	4618      	mov	r0, r3
200016da:	3718      	adds	r7, #24
200016dc:	46bd      	mov	sp, r7
200016de:	bd80      	pop	{r7, pc}
200016e0:	2000a808 	.word	0x2000a808

200016e4 <spi_flash_global_unprotect>:
spi_flash_global_unprotect():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:141

/*******************************************************************************
 *
 */
spi_flash_status_t spi_flash_global_unprotect( void )
{
200016e4:	b580      	push	{r7, lr}
200016e6:	b084      	sub	sp, #16
200016e8:	af02      	add	r7, sp, #8
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:143
	uint8_t cmd_buffer[2];
	write_enable();
200016ea:	f000 f881 	bl	200017f0 <write_enable>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:144
	cmd_buffer[0] = GLOBAL_UNPROTECT;
200016ee:	2398      	movs	r3, #152	; 0x98
200016f0:	713b      	strb	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:145
	cmd_buffer[1] = 0;
200016f2:	2300      	movs	r3, #0
200016f4:	717b      	strb	r3, [r7, #5]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:147

	SPI_set_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0);
200016f6:	2100      	movs	r1, #0
200016f8:	4809      	ldr	r0, [pc, #36]	; (20001720 <spi_flash_global_unprotect+0x3c>)
200016fa:	f7ff fd47 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:149
	//wait_ready();
	SPI_transfer_block( SPI_FLASH_INSTANCE, cmd_buffer, 2, 0, 0 );
200016fe:	1d39      	adds	r1, r7, #4
20001700:	2300      	movs	r3, #0
20001702:	9300      	str	r3, [sp, #0]
20001704:	2300      	movs	r3, #0
20001706:	2202      	movs	r2, #2
20001708:	4805      	ldr	r0, [pc, #20]	; (20001720 <spi_flash_global_unprotect+0x3c>)
2000170a:	f7ff fdd3 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:151
	//wait_ready();
	SPI_clear_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
2000170e:	2100      	movs	r1, #0
20001710:	4803      	ldr	r0, [pc, #12]	; (20001720 <spi_flash_global_unprotect+0x3c>)
20001712:	f7ff fd84 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:152
	return 0;
20001716:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:154

}
20001718:	4618      	mov	r0, r3
2000171a:	3708      	adds	r7, #8
2000171c:	46bd      	mov	sp, r7
2000171e:	bd80      	pop	{r7, pc}
20001720:	2000a808 	.word	0x2000a808

20001724 <write_cmd_data>:
write_cmd_data():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:167
		const uint8_t * cmd_buffer,
		uint16_t cmd_byte_size,
		uint8_t * data_buffer,
		uint16_t data_byte_size
)
{
20001724:	b590      	push	{r4, r7, lr}
20001726:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
2000172a:	af02      	add	r7, sp, #8
2000172c:	f107 040c 	add.w	r4, r7, #12
20001730:	6020      	str	r0, [r4, #0]
20001732:	f107 0008 	add.w	r0, r7, #8
20001736:	6001      	str	r1, [r0, #0]
20001738:	4611      	mov	r1, r2
2000173a:	463a      	mov	r2, r7
2000173c:	6013      	str	r3, [r2, #0]
2000173e:	1dbb      	adds	r3, r7, #6
20001740:	460a      	mov	r2, r1
20001742:	801a      	strh	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:171

	uint8_t tx_buffer[520];
	uint16_t transfer_size;
	uint16_t idx = 0;
20001744:	2300      	movs	r3, #0
20001746:	f8a7 321e 	strh.w	r3, [r7, #542]	; 0x21e
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:173

	transfer_size = cmd_byte_size + data_byte_size;
2000174a:	1dbb      	adds	r3, r7, #6
2000174c:	881a      	ldrh	r2, [r3, #0]
2000174e:	f8b7 3230 	ldrh.w	r3, [r7, #560]	; 0x230
20001752:	4413      	add	r3, r2
20001754:	f8a7 321c 	strh.w	r3, [r7, #540]	; 0x21c
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:175

	for(idx = 0; idx < cmd_byte_size; ++idx)
20001758:	2300      	movs	r3, #0
2000175a:	f8a7 321e 	strh.w	r3, [r7, #542]	; 0x21e
2000175e:	e010      	b.n	20001782 <write_cmd_data+0x5e>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:177 (discriminator 3)
	{
		tx_buffer[idx] = cmd_buffer[idx];
20001760:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
20001764:	f107 0208 	add.w	r2, r7, #8
20001768:	6812      	ldr	r2, [r2, #0]
2000176a:	441a      	add	r2, r3
2000176c:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
20001770:	7811      	ldrb	r1, [r2, #0]
20001772:	f107 0214 	add.w	r2, r7, #20
20001776:	54d1      	strb	r1, [r2, r3]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:175 (discriminator 3)
	for(idx = 0; idx < cmd_byte_size; ++idx)
20001778:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
2000177c:	3301      	adds	r3, #1
2000177e:	f8a7 321e 	strh.w	r3, [r7, #542]	; 0x21e
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:175 (discriminator 1)
20001782:	1dbb      	adds	r3, r7, #6
20001784:	f8b7 221e 	ldrh.w	r2, [r7, #542]	; 0x21e
20001788:	881b      	ldrh	r3, [r3, #0]
2000178a:	429a      	cmp	r2, r3
2000178c:	d3e8      	bcc.n	20001760 <write_cmd_data+0x3c>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:180
	}

	for(idx = 0; idx < data_byte_size; ++idx)
2000178e:	2300      	movs	r3, #0
20001790:	f8a7 321e 	strh.w	r3, [r7, #542]	; 0x21e
20001794:	e012      	b.n	200017bc <write_cmd_data+0x98>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:182 (discriminator 3)
	{
		tx_buffer[cmd_byte_size + idx] = data_buffer[idx];
20001796:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
2000179a:	463a      	mov	r2, r7
2000179c:	6812      	ldr	r2, [r2, #0]
2000179e:	441a      	add	r2, r3
200017a0:	1dbb      	adds	r3, r7, #6
200017a2:	8819      	ldrh	r1, [r3, #0]
200017a4:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
200017a8:	440b      	add	r3, r1
200017aa:	7811      	ldrb	r1, [r2, #0]
200017ac:	f107 0214 	add.w	r2, r7, #20
200017b0:	54d1      	strb	r1, [r2, r3]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:180 (discriminator 3)
	for(idx = 0; idx < data_byte_size; ++idx)
200017b2:	f8b7 321e 	ldrh.w	r3, [r7, #542]	; 0x21e
200017b6:	3301      	adds	r3, #1
200017b8:	f8a7 321e 	strh.w	r3, [r7, #542]	; 0x21e
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:180 (discriminator 1)
200017bc:	f8b7 221e 	ldrh.w	r2, [r7, #542]	; 0x21e
200017c0:	f8b7 3230 	ldrh.w	r3, [r7, #560]	; 0x230
200017c4:	429a      	cmp	r2, r3
200017c6:	d3e6      	bcc.n	20001796 <write_cmd_data+0x72>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:185
	}

	SPI_transfer_block( SPI_FLASH_INSTANCE, tx_buffer, transfer_size, 0, 0 );
200017c8:	f8b7 221c 	ldrh.w	r2, [r7, #540]	; 0x21c
200017cc:	f107 0114 	add.w	r1, r7, #20
200017d0:	2300      	movs	r3, #0
200017d2:	9300      	str	r3, [sp, #0]
200017d4:	2300      	movs	r3, #0
200017d6:	4805      	ldr	r0, [pc, #20]	; (200017ec <write_cmd_data+0xc8>)
200017d8:	f7ff fd6c 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:187

	wait_ready();
200017dc:	f000 f892 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:194
/*
	while ( !MSS_SPI_tx_done(this_spi) )
	{
		;
	} */
}
200017e0:	bf00      	nop
200017e2:	f507 7709 	add.w	r7, r7, #548	; 0x224
200017e6:	46bd      	mov	sp, r7
200017e8:	bd90      	pop	{r4, r7, pc}
200017ea:	bf00      	nop
200017ec:	2000a808 	.word	0x2000a808

200017f0 <write_enable>:
write_enable():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:196
static void write_enable()
{
200017f0:	b580      	push	{r7, lr}
200017f2:	b084      	sub	sp, #16
200017f4:	af02      	add	r7, sp, #8
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:198
	uint8_t cmd_buffer;
	SPI_set_slave_select( SPI_FLASH_INSTANCE,SPI_SLAVE_0 );
200017f6:	2100      	movs	r1, #0
200017f8:	480a      	ldr	r0, [pc, #40]	; (20001824 <write_enable+0x34>)
200017fa:	f7ff fcc7 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:200
	/* Send Write Enable command */
	cmd_buffer = WRITE_ENABLE_CMD;
200017fe:	2306      	movs	r3, #6
20001800:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:202
	//wait_ready();
	SPI_transfer_block( SPI_FLASH_INSTANCE, &cmd_buffer, 1, 0, 0 );
20001802:	1df9      	adds	r1, r7, #7
20001804:	2300      	movs	r3, #0
20001806:	9300      	str	r3, [sp, #0]
20001808:	2300      	movs	r3, #0
2000180a:	2201      	movs	r2, #1
2000180c:	4805      	ldr	r0, [pc, #20]	; (20001824 <write_enable+0x34>)
2000180e:	f7ff fd51 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:204
	//wait_ready();
	SPI_clear_slave_select( SPI_FLASH_INSTANCE,SPI_SLAVE_0);
20001812:	2100      	movs	r1, #0
20001814:	4803      	ldr	r0, [pc, #12]	; (20001824 <write_enable+0x34>)
20001816:	f7ff fd02 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:205
}
2000181a:	bf00      	nop
2000181c:	3708      	adds	r7, #8
2000181e:	46bd      	mov	sp, r7
20001820:	bd80      	pop	{r7, pc}
20001822:	bf00      	nop
20001824:	2000a808 	.word	0x2000a808

20001828 <spi_flash_write>:
spi_flash_write():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:213
(
		uint32_t address,
		uint8_t * write_buffer,
		size_t size_in_bytes
)
{
20001828:	b580      	push	{r7, lr}
2000182a:	b08c      	sub	sp, #48	; 0x30
2000182c:	af02      	add	r7, sp, #8
2000182e:	60f8      	str	r0, [r7, #12]
20001830:	60b9      	str	r1, [r7, #8]
20001832:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:222
	uint32_t nb_bytes_to_write;
	uint32_t target_addr;



	in_buffer_idx = 0;
20001834:	2300      	movs	r3, #0
20001836:	627b      	str	r3, [r7, #36]	; 0x24
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:223
	nb_bytes_to_write = size_in_bytes;
20001838:	687b      	ldr	r3, [r7, #4]
2000183a:	623b      	str	r3, [r7, #32]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:224
	target_addr = address;
2000183c:	68fb      	ldr	r3, [r7, #12]
2000183e:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:226

	while ( in_buffer_idx < size_in_bytes )
20001840:	e03e      	b.n	200018c0 <spi_flash_write+0x98>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:229
	{
		uint32_t size_left;
		nb_bytes_to_write = 0x100 - (target_addr & 0xFF);   /* adjust max possible size to page boundary. */
20001842:	69fb      	ldr	r3, [r7, #28]
20001844:	b2db      	uxtb	r3, r3
20001846:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
2000184a:	623b      	str	r3, [r7, #32]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:230
		size_left = size_in_bytes - in_buffer_idx;
2000184c:	687a      	ldr	r2, [r7, #4]
2000184e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20001850:	1ad3      	subs	r3, r2, r3
20001852:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:231
		if ( size_left < nb_bytes_to_write )
20001854:	69ba      	ldr	r2, [r7, #24]
20001856:	6a3b      	ldr	r3, [r7, #32]
20001858:	429a      	cmp	r2, r3
2000185a:	d201      	bcs.n	20001860 <spi_flash_write+0x38>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:233
		{
			nb_bytes_to_write = size_left;
2000185c:	69bb      	ldr	r3, [r7, #24]
2000185e:	623b      	str	r3, [r7, #32]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:237
		}


		write_enable();
20001860:	f7ff ffc6 	bl	200017f0 <write_enable>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:241
		/* Program page */


		cmd_buffer[0] = PROGRAM_PAGE_CMD;
20001864:	2302      	movs	r3, #2
20001866:	753b      	strb	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:242
		cmd_buffer[1] = (uint8_t)((target_addr >> 16) & 0xFF);
20001868:	69fb      	ldr	r3, [r7, #28]
2000186a:	0c1b      	lsrs	r3, r3, #16
2000186c:	b2db      	uxtb	r3, r3
2000186e:	757b      	strb	r3, [r7, #21]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:243
		cmd_buffer[2] = (uint8_t)((target_addr >> 8) & 0xFF);
20001870:	69fb      	ldr	r3, [r7, #28]
20001872:	0a1b      	lsrs	r3, r3, #8
20001874:	b2db      	uxtb	r3, r3
20001876:	75bb      	strb	r3, [r7, #22]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:244
		cmd_buffer[3] = (uint8_t)(target_addr & 0xFF);
20001878:	69fb      	ldr	r3, [r7, #28]
2000187a:	b2db      	uxtb	r3, r3
2000187c:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:245
		SPI_set_slave_select( SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
2000187e:	2100      	movs	r1, #0
20001880:	481f      	ldr	r0, [pc, #124]	; (20001900 <spi_flash_write+0xd8>)
20001882:	f7ff fc83 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:246
		wait_ready();
20001886:	f000 f83d 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:247
		write_cmd_data
2000188a:	68ba      	ldr	r2, [r7, #8]
2000188c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000188e:	441a      	add	r2, r3
20001890:	6a3b      	ldr	r3, [r7, #32]
20001892:	b29b      	uxth	r3, r3
20001894:	f107 0114 	add.w	r1, r7, #20
20001898:	9300      	str	r3, [sp, #0]
2000189a:	4613      	mov	r3, r2
2000189c:	2204      	movs	r2, #4
2000189e:	4818      	ldr	r0, [pc, #96]	; (20001900 <spi_flash_write+0xd8>)
200018a0:	f7ff ff40 	bl	20001724 <write_cmd_data>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:255
				cmd_buffer,
				sizeof(cmd_buffer),
				&write_buffer[in_buffer_idx],
				nb_bytes_to_write
		);
		wait_ready();
200018a4:	f000 f82e 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:257

		SPI_clear_slave_select( SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
200018a8:	2100      	movs	r1, #0
200018aa:	4815      	ldr	r0, [pc, #84]	; (20001900 <spi_flash_write+0xd8>)
200018ac:	f7ff fcb7 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:258
		target_addr += nb_bytes_to_write;
200018b0:	69fa      	ldr	r2, [r7, #28]
200018b2:	6a3b      	ldr	r3, [r7, #32]
200018b4:	4413      	add	r3, r2
200018b6:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:259
		in_buffer_idx += nb_bytes_to_write;
200018b8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200018ba:	6a3b      	ldr	r3, [r7, #32]
200018bc:	4413      	add	r3, r2
200018be:	627b      	str	r3, [r7, #36]	; 0x24
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:226
	while ( in_buffer_idx < size_in_bytes )
200018c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200018c2:	687b      	ldr	r3, [r7, #4]
200018c4:	429a      	cmp	r2, r3
200018c6:	d3bc      	bcc.n	20001842 <spi_flash_write+0x1a>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:263
	}

	/* Send Write Disable command. */
	SPI_set_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
200018c8:	2100      	movs	r1, #0
200018ca:	480d      	ldr	r0, [pc, #52]	; (20001900 <spi_flash_write+0xd8>)
200018cc:	f7ff fc5e 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:264
	cmd_buffer[0] = WRITE_DISABLE_CMD;
200018d0:	2304      	movs	r3, #4
200018d2:	753b      	strb	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:265
	wait_ready();
200018d4:	f000 f816 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:266
	SPI_transfer_block( SPI_FLASH_INSTANCE, cmd_buffer, 1, 0, 0 );
200018d8:	f107 0114 	add.w	r1, r7, #20
200018dc:	2300      	movs	r3, #0
200018de:	9300      	str	r3, [sp, #0]
200018e0:	2300      	movs	r3, #0
200018e2:	2201      	movs	r2, #1
200018e4:	4806      	ldr	r0, [pc, #24]	; (20001900 <spi_flash_write+0xd8>)
200018e6:	f7ff fce5 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:267
	wait_ready();
200018ea:	f000 f80b 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:268
	SPI_clear_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0 );
200018ee:	2100      	movs	r1, #0
200018f0:	4803      	ldr	r0, [pc, #12]	; (20001900 <spi_flash_write+0xd8>)
200018f2:	f7ff fc94 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:269
	return 0;
200018f6:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:270
}
200018f8:	4618      	mov	r0, r3
200018fa:	3728      	adds	r7, #40	; 0x28
200018fc:	46bd      	mov	sp, r7
200018fe:	bd80      	pop	{r7, pc}
20001900:	2000a808 	.word	0x2000a808

20001904 <wait_ready>:
wait_ready():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:278
/*******************************************************************************
 *
 */

static void wait_ready( void )
{
20001904:	b580      	push	{r7, lr}
20001906:	b084      	sub	sp, #16
20001908:	af02      	add	r7, sp, #8
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:280
	uint8_t ready_bit;
	uint8_t command = READ_STATUS;
2000190a:	2305      	movs	r3, #5
2000190c:	71bb      	strb	r3, [r7, #6]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:284 (discriminator 1)

	do {

		SPI_transfer_block( SPI_FLASH_INSTANCE, &command, sizeof(command), &ready_bit, sizeof(ready_bit) );
2000190e:	1dfb      	adds	r3, r7, #7
20001910:	1db9      	adds	r1, r7, #6
20001912:	2201      	movs	r2, #1
20001914:	9200      	str	r2, [sp, #0]
20001916:	2201      	movs	r2, #1
20001918:	4807      	ldr	r0, [pc, #28]	; (20001938 <wait_ready+0x34>)
2000191a:	f7ff fccb 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:285 (discriminator 1)
		ready_bit = ready_bit & READY_BIT_MASK;
2000191e:	79fb      	ldrb	r3, [r7, #7]
20001920:	f003 0301 	and.w	r3, r3, #1
20001924:	b2db      	uxtb	r3, r3
20001926:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:287 (discriminator 1)

	} while( ready_bit == 1 );
20001928:	79fb      	ldrb	r3, [r7, #7]
2000192a:	2b01      	cmp	r3, #1
2000192c:	d0ef      	beq.n	2000190e <wait_ready+0xa>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:289

}
2000192e:	bf00      	nop
20001930:	bf00      	nop
20001932:	3708      	adds	r7, #8
20001934:	46bd      	mov	sp, r7
20001936:	bd80      	pop	{r7, pc}
20001938:	2000a808 	.word	0x2000a808

2000193c <spi_flash_erase_4k_block>:
spi_flash_erase_4k_block():
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:331

spi_flash_status_t spi_flash_erase_4k_block
(
		uint32_t address
)
{
2000193c:	b580      	push	{r7, lr}
2000193e:	b086      	sub	sp, #24
20001940:	af02      	add	r7, sp, #8
20001942:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:338
	uint8_t cmd_buffer[5];
	/* Send Write Enable command */

	//write_enable();
	//enter_4byte_address_mode();
	write_enable();
20001944:	f7ff ff54 	bl	200017f0 <write_enable>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:341


	SPI_set_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0);
20001948:	2100      	movs	r1, #0
2000194a:	4813      	ldr	r0, [pc, #76]	; (20001998 <spi_flash_erase_4k_block+0x5c>)
2000194c:	f7ff fc1e 	bl	2000118c <SPI_set_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:344


	cmd_buffer[0] = ERASE_4K_BLOCK_OPCODE;
20001950:	2320      	movs	r3, #32
20001952:	723b      	strb	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:345
	cmd_buffer[1] = (uint8_t)((address >> 16) & 0xFF);
20001954:	687b      	ldr	r3, [r7, #4]
20001956:	0c1b      	lsrs	r3, r3, #16
20001958:	b2db      	uxtb	r3, r3
2000195a:	727b      	strb	r3, [r7, #9]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:346
	cmd_buffer[2] = (uint8_t)((address >> 8) & 0xFF);
2000195c:	687b      	ldr	r3, [r7, #4]
2000195e:	0a1b      	lsrs	r3, r3, #8
20001960:	b2db      	uxtb	r3, r3
20001962:	72bb      	strb	r3, [r7, #10]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:347
	cmd_buffer[3] = (uint8_t)(address & 0xFF);
20001964:	687b      	ldr	r3, [r7, #4]
20001966:	b2db      	uxtb	r3, r3
20001968:	72fb      	strb	r3, [r7, #11]
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:348
	wait_ready();
2000196a:	f7ff ffcb 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:349
	SPI_transfer_block(SPI_FLASH_INSTANCE, cmd_buffer,4, 0, 0 );
2000196e:	f107 0108 	add.w	r1, r7, #8
20001972:	2300      	movs	r3, #0
20001974:	9300      	str	r3, [sp, #0]
20001976:	2300      	movs	r3, #0
20001978:	2204      	movs	r2, #4
2000197a:	4807      	ldr	r0, [pc, #28]	; (20001998 <spi_flash_erase_4k_block+0x5c>)
2000197c:	f7ff fc9a 	bl	200012b4 <SPI_transfer_block>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:350
	wait_ready();
20001980:	f7ff ffc0 	bl	20001904 <wait_ready>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:352

	SPI_clear_slave_select(SPI_FLASH_INSTANCE, SPI_SLAVE_0);
20001984:	2100      	movs	r1, #0
20001986:	4804      	ldr	r0, [pc, #16]	; (20001998 <spi_flash_erase_4k_block+0x5c>)
20001988:	f7ff fc49 	bl	2000121e <SPI_clear_slave_select>
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:354

   return 0;
2000198c:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/platform/drivers/off_chip/sst26vf/sst26vf.c:356

}
2000198e:	4618      	mov	r0, r3
20001990:	3710      	adds	r7, #16
20001992:	46bd      	mov	sp, r7
20001994:	bd80      	pop	{r7, pc}
20001996:	bf00      	nop
20001998:	2000a808 	.word	0x2000a808

2000199c <spi_flash_write_file>:
spi_flash_write_file():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:65
 * @param[in] buffer  :  uint8_t pointer to the buffer where file is kept.
 * @param[in] size    :  size of the image to be written in bytes
 **************************************************************************/


void spi_flash_write_file ( uint32_t addr, uint8_t *  buffer, uint32_t size){
2000199c:	b580      	push	{r7, lr}
2000199e:	b088      	sub	sp, #32
200019a0:	af00      	add	r7, sp, #0
200019a2:	60f8      	str	r0, [r7, #12]
200019a4:	60b9      	str	r1, [r7, #8]
200019a6:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:68

     uint32_t i,numb_4k_sectors;
     uint32_t  sector_addr =  addr;
200019a8:	68fb      	ldr	r3, [r7, #12]
200019aa:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:71

     /* erase atleast 1 sector */
     numb_4k_sectors = (size / (SPI_FLASH_4K_SIZE)) + 1;
200019ac:	687b      	ldr	r3, [r7, #4]
200019ae:	0b1b      	lsrs	r3, r3, #12
200019b0:	3301      	adds	r3, #1
200019b2:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:79
     PRINT_DNUM(numb_4k_sectors);
     #endif

    /* disable the protection bit if not doen already */

    spi_flash_global_unprotect();
200019b4:	f7ff fe96 	bl	200016e4 <spi_flash_global_unprotect>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:84

   /* this function uses the 48 block erase command,
    * you can also use the 64K sector erase command as well */

  for (i= 0 ; i < numb_4k_sectors ; i++ ){
200019b8:	2300      	movs	r3, #0
200019ba:	61fb      	str	r3, [r7, #28]
200019bc:	e00c      	b.n	200019d8 <spi_flash_write_file+0x3c>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:91 (discriminator 3)
      PRINT_TEXT("\r\n Erasing Sector @ " );
     PRINT_XNUM(sector_addr);
    #endif
    //memset(g_flash_wr_buf, 'p', 1024);
    /* erase each sector */
    spi_flash_erase_4k_block(sector_addr);
200019be:	69b8      	ldr	r0, [r7, #24]
200019c0:	f7ff ffbc 	bl	2000193c <spi_flash_erase_4k_block>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:96 (discriminator 3)
    #ifdef DEBUG
     PRINT_TEXT("\r\n Erasing Completed \r\n :");
    #endif
    /* added a delay to make sure that the erase is completed */
     delay_ms(50);
200019c4:	2032      	movs	r0, #50	; 0x32
200019c6:	f000 fa99 	bl	20001efc <delay_ms>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:98 (discriminator 3)

    sector_addr += SPI_FLASH_4K_SIZE;
200019ca:	69bb      	ldr	r3, [r7, #24]
200019cc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
200019d0:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:84 (discriminator 3)
  for (i= 0 ; i < numb_4k_sectors ; i++ ){
200019d2:	69fb      	ldr	r3, [r7, #28]
200019d4:	3301      	adds	r3, #1
200019d6:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:84 (discriminator 1)
200019d8:	69fa      	ldr	r2, [r7, #28]
200019da:	697b      	ldr	r3, [r7, #20]
200019dc:	429a      	cmp	r2, r3
200019de:	d3ee      	bcc.n	200019be <spi_flash_write_file+0x22>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:101
  }
  /* program the file to the locatio nspecified */
  spi_flash_write(addr, buffer, size);
200019e0:	687a      	ldr	r2, [r7, #4]
200019e2:	68b9      	ldr	r1, [r7, #8]
200019e4:	68f8      	ldr	r0, [r7, #12]
200019e6:	f7ff ff1f 	bl	20001828 <spi_flash_write>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:102
  PRINT_TEXT("\r\nProgramming  Completed \r\n");
200019ea:	4803      	ldr	r0, [pc, #12]	; (200019f8 <spi_flash_write_file+0x5c>)
200019ec:	f000 faf8 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:104

}
200019f0:	bf00      	nop
200019f2:	3720      	adds	r7, #32
200019f4:	46bd      	mov	sp, r7
200019f6:	bd80      	pop	{r7, pc}
200019f8:	20008b80 	.word	0x20008b80

200019fc <spi_flash_read_file>:
spi_flash_read_file():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:117
 * @param[in] addr  : Flash read address.
 * @return Read byte from SPI flash.
 **************************************************************************/


void spi_flash_read_file (uint32_t addr , uint8_t *  rd_buffer ,uint32_t size ){
200019fc:	b580      	push	{r7, lr}
200019fe:	b088      	sub	sp, #32
20001a00:	af00      	add	r7, sp, #0
20001a02:	60f8      	str	r0, [r7, #12]
20001a04:	60b9      	str	r1, [r7, #8]
20001a06:	607a      	str	r2, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:124
   uint8_t *file_ptr;
   uint32_t rcvd_size;
   uint32_t addr_offset;
   uint32_t spi_addr;

   spi_addr = addr;
20001a08:	68fb      	ldr	r3, [r7, #12]
20001a0a:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:125
   file_ptr = rd_buffer;
20001a0c:	68bb      	ldr	r3, [r7, #8]
20001a0e:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:126
   addr_offset =0;
20001a10:	2300      	movs	r3, #0
20001a12:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:128

   spi_flash_read(addr , rd_buffer, size);
20001a14:	687a      	ldr	r2, [r7, #4]
20001a16:	68b9      	ldr	r1, [r7, #8]
20001a18:	68f8      	ldr	r0, [r7, #12]
20001a1a:	f7ff fe33 	bl	20001684 <spi_flash_read>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:139
    PRINT_XNUM(addr);
    PRINT_TEXT("\r\n");
    hex_view_buffer( rd_buffer,0, size);
#endif

}
20001a1e:	bf00      	nop
20001a20:	3720      	adds	r7, #32
20001a22:	46bd      	mov	sp, r7
20001a24:	bd80      	pop	{r7, pc}
	...

20001a28 <spi_print_dir>:
spi_print_dir():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:286





 void spi_print_dir(void) {
20001a28:	b5b0      	push	{r4, r5, r7, lr}
20001a2a:	b088      	sub	sp, #32
20001a2c:	af04      	add	r7, sp, #16
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:288

     spi_dir_t* spi_dir_ptr =  &spi_dir;
20001a2e:	4b2f      	ldr	r3, [pc, #188]	; (20001aec <spi_print_dir+0xc4>)
20001a30:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:290

     printf("\r\nSPI Flash Directory:\n");
20001a32:	482f      	ldr	r0, [pc, #188]	; (20001af0 <spi_print_dir+0xc8>)
20001a34:	f001 fd88 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:292

     printf("\rSPI Flash File Count : %d\n",      spi_dir_ptr->file_count);
20001a38:	68bb      	ldr	r3, [r7, #8]
20001a3a:	791b      	ldrb	r3, [r3, #4]
20001a3c:	4619      	mov	r1, r3
20001a3e:	482d      	ldr	r0, [pc, #180]	; (20001af4 <spi_print_dir+0xcc>)
20001a40:	f001 fd20 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:293
     printf("\rSPI Flash Next Addr  : 0x%-12X\n", spi_dir_ptr->next_addr);
20001a44:	68bb      	ldr	r3, [r7, #8]
20001a46:	689b      	ldr	r3, [r3, #8]
20001a48:	4619      	mov	r1, r3
20001a4a:	482b      	ldr	r0, [pc, #172]	; (20001af8 <spi_print_dir+0xd0>)
20001a4c:	f001 fd1a 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:294
     printf("\rSPI Flash init flag  : 0x%-12X\n", spi_dir_ptr->init_status);
20001a50:	68bb      	ldr	r3, [r7, #8]
20001a52:	681b      	ldr	r3, [r3, #0]
20001a54:	4619      	mov	r1, r3
20001a56:	4829      	ldr	r0, [pc, #164]	; (20001afc <spi_print_dir+0xd4>)
20001a58:	f001 fd14 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:296

     printf("\r----------------------------------------------------------------------------\n");
20001a5c:	4828      	ldr	r0, [pc, #160]	; (20001b00 <spi_print_dir+0xd8>)
20001a5e:	f001 fd73 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:297
     printf("\r| %-4s | %-34s | %-10s | %-12s |\n", "#", "File Name", "Size (KB)", "Addr Offset");
20001a62:	4b28      	ldr	r3, [pc, #160]	; (20001b04 <spi_print_dir+0xdc>)
20001a64:	9300      	str	r3, [sp, #0]
20001a66:	4b28      	ldr	r3, [pc, #160]	; (20001b08 <spi_print_dir+0xe0>)
20001a68:	4a28      	ldr	r2, [pc, #160]	; (20001b0c <spi_print_dir+0xe4>)
20001a6a:	4929      	ldr	r1, [pc, #164]	; (20001b10 <spi_print_dir+0xe8>)
20001a6c:	4829      	ldr	r0, [pc, #164]	; (20001b14 <spi_print_dir+0xec>)
20001a6e:	f001 fd09 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:298
     printf("\r----------------------------------------------------------------------------\n");
20001a72:	4823      	ldr	r0, [pc, #140]	; (20001b00 <spi_print_dir+0xd8>)
20001a74:	f001 fd68 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:300

     for (int i = 0; i < spi_dir_ptr->file_count; i++) {
20001a78:	2300      	movs	r3, #0
20001a7a:	60fb      	str	r3, [r7, #12]
20001a7c:	e028      	b.n	20001ad0 <spi_print_dir+0xa8>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:301
         spi_file_t *spi_file = &spi_dir_ptr->files[i];  // Pointer to the current file
20001a7e:	68fb      	ldr	r3, [r7, #12]
20001a80:	225c      	movs	r2, #92	; 0x5c
20001a82:	fb02 f303 	mul.w	r3, r2, r3
20001a86:	3308      	adds	r3, #8
20001a88:	68ba      	ldr	r2, [r7, #8]
20001a8a:	4413      	add	r3, r2
20001a8c:	3304      	adds	r3, #4
20001a8e:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:302
         if (spi_file->file_name[0] != '\0') {       // Check if entry is valid
20001a90:	687b      	ldr	r3, [r7, #4]
20001a92:	781b      	ldrb	r3, [r3, #0]
20001a94:	2b00      	cmp	r3, #0
20001a96:	d018      	beq.n	20001aca <spi_print_dir+0xa2>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:303
             printf("\r| %-4d | %-34s  |  %10.2f| 0x%-10X |\n",
20001a98:	68fb      	ldr	r3, [r7, #12]
20001a9a:	1c5c      	adds	r4, r3, #1
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:305
                    i + 1,
                    spi_file->file_name,
20001a9c:	687d      	ldr	r5, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:306
                    spi_file->file_size / 1024.0,
20001a9e:	687b      	ldr	r3, [r7, #4]
20001aa0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:303
             printf("\r| %-4d | %-34s  |  %10.2f| 0x%-10X |\n",
20001aa2:	4618      	mov	r0, r3
20001aa4:	f001 f978 	bl	20002d98 <__aeabi_ui2d>
20001aa8:	f04f 0200 	mov.w	r2, #0
20001aac:	4b1a      	ldr	r3, [pc, #104]	; (20001b18 <spi_print_dir+0xf0>)
20001aae:	f001 fb17 	bl	200030e0 <__aeabi_ddiv>
20001ab2:	4602      	mov	r2, r0
20001ab4:	460b      	mov	r3, r1
20001ab6:	6879      	ldr	r1, [r7, #4]
20001ab8:	6d49      	ldr	r1, [r1, #84]	; 0x54
20001aba:	9102      	str	r1, [sp, #8]
20001abc:	e9cd 2300 	strd	r2, r3, [sp]
20001ac0:	462a      	mov	r2, r5
20001ac2:	4621      	mov	r1, r4
20001ac4:	4815      	ldr	r0, [pc, #84]	; (20001b1c <spi_print_dir+0xf4>)
20001ac6:	f001 fcdd 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:300 (discriminator 2)
     for (int i = 0; i < spi_dir_ptr->file_count; i++) {
20001aca:	68fb      	ldr	r3, [r7, #12]
20001acc:	3301      	adds	r3, #1
20001ace:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:300 (discriminator 1)
20001ad0:	68bb      	ldr	r3, [r7, #8]
20001ad2:	791b      	ldrb	r3, [r3, #4]
20001ad4:	461a      	mov	r2, r3
20001ad6:	68fb      	ldr	r3, [r7, #12]
20001ad8:	4293      	cmp	r3, r2
20001ada:	dbd0      	blt.n	20001a7e <spi_print_dir+0x56>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:310
                    spi_file->file_addr);
         }
     }
     printf("\r----------------------------------------------------------------------------\n");
20001adc:	4808      	ldr	r0, [pc, #32]	; (20001b00 <spi_print_dir+0xd8>)
20001ade:	f001 fd33 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:311
 }
20001ae2:	bf00      	nop
20001ae4:	3710      	adds	r7, #16
20001ae6:	46bd      	mov	sp, r7
20001ae8:	bdb0      	pop	{r4, r5, r7, pc}
20001aea:	bf00      	nop
20001aec:	2000a088 	.word	0x2000a088
20001af0:	20008c6c 	.word	0x20008c6c
20001af4:	20008c84 	.word	0x20008c84
20001af8:	20008ca0 	.word	0x20008ca0
20001afc:	20008cc4 	.word	0x20008cc4
20001b00:	20008ce8 	.word	0x20008ce8
20001b04:	20008d78 	.word	0x20008d78
20001b08:	20008d38 	.word	0x20008d38
20001b0c:	20008d44 	.word	0x20008d44
20001b10:	20008d50 	.word	0x20008d50
20001b14:	20008d54 	.word	0x20008d54
20001b18:	40900000 	.word	0x40900000
20001b1c:	20008d84 	.word	0x20008d84

20001b20 <spi_add_file_to_dir>:
spi_add_file_to_dir():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:317



 /* Add the File entry to the spi_file_sys */

 int spi_add_file_to_dir(spi_file_t* file_info) {
20001b20:	b580      	push	{r7, lr}
20001b22:	b086      	sub	sp, #24
20001b24:	af00      	add	r7, sp, #0
20001b26:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:320
      uint32_t next_addr ;

      spi_dir_t* spi_dir_ptr =  &spi_dir;
20001b28:	4b26      	ldr	r3, [pc, #152]	; (20001bc4 <spi_add_file_to_dir+0xa4>)
20001b2a:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:323

      // Find the first empty slot or calculate the start address for the new file
      for (uint8_t i = 0; i < SPI_MAX_FILES; i++) {
20001b2c:	2300      	movs	r3, #0
20001b2e:	75fb      	strb	r3, [r7, #23]
20001b30:	e03e      	b.n	20001bb0 <spi_add_file_to_dir+0x90>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:324
          spi_file_t *file = &spi_dir_ptr->files[i]; // Pointer to the current file
20001b32:	7dfb      	ldrb	r3, [r7, #23]
20001b34:	225c      	movs	r2, #92	; 0x5c
20001b36:	fb02 f303 	mul.w	r3, r2, r3
20001b3a:	3308      	adds	r3, #8
20001b3c:	693a      	ldr	r2, [r7, #16]
20001b3e:	4413      	add	r3, r2
20001b40:	3304      	adds	r3, #4
20001b42:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:326

          if (file->file_name[0] == '\0') {  // empty slot found
20001b44:	68fb      	ldr	r3, [r7, #12]
20001b46:	781b      	ldrb	r3, [r3, #0]
20001b48:	2b00      	cmp	r3, #0
20001b4a:	d12e      	bne.n	20001baa <spi_add_file_to_dir+0x8a>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:328
              // Empty entry found, use this slot for the new file entry
                strncpy(file->file_name, file_info->file_name, sizeof(file->file_name) - 1);
20001b4c:	68fb      	ldr	r3, [r7, #12]
20001b4e:	6879      	ldr	r1, [r7, #4]
20001b50:	223f      	movs	r2, #63	; 0x3f
20001b52:	4618      	mov	r0, r3
20001b54:	f001 fd2e 	bl	200035b4 <strncpy>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:329
                file->file_name[sizeof(file->file_name) - 1] = '\0';  // Ensure null-termination
20001b58:	68fb      	ldr	r3, [r7, #12]
20001b5a:	2200      	movs	r2, #0
20001b5c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:330
                file->file_size = file_info->file_size;
20001b60:	687b      	ldr	r3, [r7, #4]
20001b62:	6d1a      	ldr	r2, [r3, #80]	; 0x50
20001b64:	68fb      	ldr	r3, [r7, #12]
20001b66:	651a      	str	r2, [r3, #80]	; 0x50
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:331
                file->file_addr = file_info->file_addr; // update the current file addr with the value from dir entry
20001b68:	687b      	ldr	r3, [r7, #4]
20001b6a:	6d5a      	ldr	r2, [r3, #84]	; 0x54
20001b6c:	68fb      	ldr	r3, [r7, #12]
20001b6e:	655a      	str	r2, [r3, #84]	; 0x54
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:333

                spi_dir_ptr->file_count++;  // Increment the file count in the directory
20001b70:	693b      	ldr	r3, [r7, #16]
20001b72:	791b      	ldrb	r3, [r3, #4]
20001b74:	3301      	adds	r3, #1
20001b76:	b2da      	uxtb	r2, r3
20001b78:	693b      	ldr	r3, [r7, #16]
20001b7a:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:335

                next_addr = (file->file_addr + file->file_size  + SPI_SECTOR_SIZE - 1) & ~(SPI_SECTOR_SIZE - 1);
20001b7c:	68fb      	ldr	r3, [r7, #12]
20001b7e:	6d5a      	ldr	r2, [r3, #84]	; 0x54
20001b80:	68fb      	ldr	r3, [r7, #12]
20001b82:	6d1b      	ldr	r3, [r3, #80]	; 0x50
20001b84:	4413      	add	r3, r2
20001b86:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
20001b8a:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
20001b8e:	f023 030f 	bic.w	r3, r3, #15
20001b92:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:336
                spi_dir_ptr->next_addr = next_addr; // this is the addr for next file
20001b94:	693b      	ldr	r3, [r7, #16]
20001b96:	68ba      	ldr	r2, [r7, #8]
20001b98:	609a      	str	r2, [r3, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:339

                // Update the directory on SPI flash
                spi_flash_write_file(SPI_DIR_ROOT_ADDR, (uint8_t *)&spi_dir, sizeof(spi_dir));
20001b9a:	f44f 7269 	mov.w	r2, #932	; 0x3a4
20001b9e:	4909      	ldr	r1, [pc, #36]	; (20001bc4 <spi_add_file_to_dir+0xa4>)
20001ba0:	2000      	movs	r0, #0
20001ba2:	f7ff fefb 	bl	2000199c <spi_flash_write_file>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:340
                return 0;  // Success
20001ba6:	2300      	movs	r3, #0
20001ba8:	e007      	b.n	20001bba <spi_add_file_to_dir+0x9a>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:323 (discriminator 2)
      for (uint8_t i = 0; i < SPI_MAX_FILES; i++) {
20001baa:	7dfb      	ldrb	r3, [r7, #23]
20001bac:	3301      	adds	r3, #1
20001bae:	75fb      	strb	r3, [r7, #23]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:323 (discriminator 1)
20001bb0:	7dfb      	ldrb	r3, [r7, #23]
20001bb2:	2b09      	cmp	r3, #9
20001bb4:	d9bd      	bls.n	20001b32 <spi_add_file_to_dir+0x12>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:344
          }
      }

      return -1;  // No empty slot available
20001bb6:	f04f 33ff 	mov.w	r3, #4294967295
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:345
  }
20001bba:	4618      	mov	r0, r3
20001bbc:	3718      	adds	r7, #24
20001bbe:	46bd      	mov	sp, r7
20001bc0:	bd80      	pop	{r7, pc}
20001bc2:	bf00      	nop
20001bc4:	2000a088 	.word	0x2000a088

20001bc8 <init_spi_file_sys>:
init_spi_file_sys():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:350



/* initialise the File system in SPI Flash Memory and load it in ram for look up */
 void init_spi_file_sys (void){
20001bc8:	b580      	push	{r7, lr}
20001bca:	f5ad 5d80 	sub.w	sp, sp, #4096	; 0x1000
20001bce:	b082      	sub	sp, #8
20001bd0:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:353
     uint8_t buffer[SPI_SECTOR_SIZE];

     spi_dir_t* spi_dir_ptr =  &spi_dir;
20001bd2:	4b29      	ldr	r3, [pc, #164]	; (20001c78 <init_spi_file_sys+0xb0>)
20001bd4:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
20001bd8:	f102 0204 	add.w	r2, r2, #4
20001bdc:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:356

     // Read sector zero from SPI flash into buffer
      spi_flash_read_file(SPI_DIR_ROOT_ADDR, buffer, SPI_SECTOR_SIZE);
20001bde:	f107 0308 	add.w	r3, r7, #8
20001be2:	3b04      	subs	r3, #4
20001be4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
20001be8:	4619      	mov	r1, r3
20001bea:	2000      	movs	r0, #0
20001bec:	f7ff ff06 	bl	200019fc <spi_flash_read_file>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:357
      memcpy(&spi_dir, buffer, sizeof(spi_dir)); // Load the buffer into the global spi_dir
20001bf0:	f107 0308 	add.w	r3, r7, #8
20001bf4:	3b04      	subs	r3, #4
20001bf6:	f44f 7269 	mov.w	r2, #932	; 0x3a4
20001bfa:	4619      	mov	r1, r3
20001bfc:	481e      	ldr	r0, [pc, #120]	; (20001c78 <init_spi_file_sys+0xb0>)
20001bfe:	f001 fb7b 	bl	200032f8 <memcpy>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:359

      if ( spi_dir_ptr->init_status != 0xAA55AA33){
20001c02:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
20001c06:	f103 0304 	add.w	r3, r3, #4
20001c0a:	681b      	ldr	r3, [r3, #0]
20001c0c:	681b      	ldr	r3, [r3, #0]
20001c0e:	4a1b      	ldr	r2, [pc, #108]	; (20001c7c <init_spi_file_sys+0xb4>)
20001c10:	4293      	cmp	r3, r2
20001c12:	d028      	beq.n	20001c66 <init_spi_file_sys+0x9e>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:361

          memset(buffer, 0x00, SPI_SECTOR_SIZE);  // Clear the directory structure
20001c14:	f107 0308 	add.w	r3, r7, #8
20001c18:	3b04      	subs	r3, #4
20001c1a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
20001c1e:	2100      	movs	r1, #0
20001c20:	4618      	mov	r0, r3
20001c22:	f001 fbdf 	bl	200033e4 <memset>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:363

          printf("\rSPI Directory not initialised\n");
20001c26:	4816      	ldr	r0, [pc, #88]	; (20001c80 <init_spi_file_sys+0xb8>)
20001c28:	f001 fc8e 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:365
          // Set the initialization status
           spi_dir_ptr->init_status = 0xAA55AA33;
20001c2c:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
20001c30:	f103 0304 	add.w	r3, r3, #4
20001c34:	681b      	ldr	r3, [r3, #0]
20001c36:	4a11      	ldr	r2, [pc, #68]	; (20001c7c <init_spi_file_sys+0xb4>)
20001c38:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:367

           spi_dir_ptr->file_count = 0;
20001c3a:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
20001c3e:	f103 0304 	add.w	r3, r3, #4
20001c42:	681b      	ldr	r3, [r3, #0]
20001c44:	2200      	movs	r2, #0
20001c46:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:368
           spi_dir_ptr->next_addr = SPI_FILE_ROOT_ADDR; // file storage start address
20001c48:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
20001c4c:	f103 0304 	add.w	r3, r3, #4
20001c50:	681b      	ldr	r3, [r3, #0]
20001c52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
20001c56:	609a      	str	r2, [r3, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:371

           /* update the spi flash with new modifications */
           spi_flash_write_file(SPI_DIR_ROOT_ADDR, (uint8_t *)&spi_dir, sizeof(spi_dir));
20001c58:	f44f 7269 	mov.w	r2, #932	; 0x3a4
20001c5c:	4906      	ldr	r1, [pc, #24]	; (20001c78 <init_spi_file_sys+0xb0>)
20001c5e:	2000      	movs	r0, #0
20001c60:	f7ff fe9c 	bl	2000199c <spi_flash_write_file>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:381
      {

          printf("\rSPI Directory is initialised and loaded\n");

      }
 }
20001c64:	e002      	b.n	20001c6c <init_spi_file_sys+0xa4>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:378
          printf("\rSPI Directory is initialised and loaded\n");
20001c66:	4807      	ldr	r0, [pc, #28]	; (20001c84 <init_spi_file_sys+0xbc>)
20001c68:	f001 fc6e 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:381
 }
20001c6c:	bf00      	nop
20001c6e:	f507 5780 	add.w	r7, r7, #4096	; 0x1000
20001c72:	3708      	adds	r7, #8
20001c74:	46bd      	mov	sp, r7
20001c76:	bd80      	pop	{r7, pc}
20001c78:	2000a088 	.word	0x2000a088
20001c7c:	aa55aa33 	.word	0xaa55aa33
20001c80:	20008dac 	.word	0x20008dac
20001c84:	20008dcc 	.word	0x20008dcc

20001c88 <clear_spi_file_sys>:
clear_spi_file_sys():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:384


 void clear_spi_file_sys (void){
20001c88:	b580      	push	{r7, lr}
20001c8a:	b082      	sub	sp, #8
20001c8c:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:386

      spi_dir_t* spi_dir_ptr =  &spi_dir;
20001c8e:	4b0f      	ldr	r3, [pc, #60]	; (20001ccc <clear_spi_file_sys+0x44>)
20001c90:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:389

      // Clear the SPI directory structure in memory
          memset(&spi_dir, 0x00, sizeof(spi_dir_t));  // Clear the entire structure
20001c92:	f44f 7269 	mov.w	r2, #932	; 0x3a4
20001c96:	2100      	movs	r1, #0
20001c98:	480c      	ldr	r0, [pc, #48]	; (20001ccc <clear_spi_file_sys+0x44>)
20001c9a:	f001 fba3 	bl	200033e4 <memset>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:393


       // Set the initialization status
        spi_dir_ptr->init_status = 0xAA55AA33;
20001c9e:	687b      	ldr	r3, [r7, #4]
20001ca0:	4a0b      	ldr	r2, [pc, #44]	; (20001cd0 <clear_spi_file_sys+0x48>)
20001ca2:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:395

        spi_dir_ptr->file_count = 0;
20001ca4:	687b      	ldr	r3, [r7, #4]
20001ca6:	2200      	movs	r2, #0
20001ca8:	711a      	strb	r2, [r3, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:396
        spi_dir_ptr->next_addr = SPI_FILE_ROOT_ADDR; // file storage start address
20001caa:	687b      	ldr	r3, [r7, #4]
20001cac:	f44f 4280 	mov.w	r2, #16384	; 0x4000
20001cb0:	609a      	str	r2, [r3, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:399

        /* update the spi flash with new modifications */
       spi_flash_write_file(SPI_DIR_ROOT_ADDR, (uint8_t *)&spi_dir, sizeof(spi_dir));
20001cb2:	f44f 7269 	mov.w	r2, #932	; 0x3a4
20001cb6:	4905      	ldr	r1, [pc, #20]	; (20001ccc <clear_spi_file_sys+0x44>)
20001cb8:	2000      	movs	r0, #0
20001cba:	f7ff fe6f 	bl	2000199c <spi_flash_write_file>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:401

        printf("\rSPI File System Reinitialized\n");
20001cbe:	4805      	ldr	r0, [pc, #20]	; (20001cd4 <clear_spi_file_sys+0x4c>)
20001cc0:	f001 fc42 	bl	20003548 <puts>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:405



  }
20001cc4:	bf00      	nop
20001cc6:	3708      	adds	r7, #8
20001cc8:	46bd      	mov	sp, r7
20001cca:	bd80      	pop	{r7, pc}
20001ccc:	2000a088 	.word	0x2000a088
20001cd0:	aa55aa33 	.word	0xaa55aa33
20001cd4:	20008df8 	.word	0x20008df8

20001cd8 <spi_file_download>:
spi_file_download():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:435
 }
 */


  uint32_t spi_file_download(void)
 {
20001cd8:	b580      	push	{r7, lr}
20001cda:	b09c      	sub	sp, #112	; 0x70
20001cdc:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:439
     uint32_t file_size;
     spi_file_t spi_file_info ;
     uint32_t spi_offset_addr;
     spi_dir_t* spi_dir_ptr =  &spi_dir;
20001cde:	4b14      	ldr	r3, [pc, #80]	; (20001d30 <spi_file_download+0x58>)
20001ce0:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:442

     //uint8_t *g_bin_base = (uint8_t *)dest_address;
     uint32_t MAX_FILE_SIZE = 8*1024 * 1024 * 8; // maximum size of the file to download  is set to  8MB
20001ce2:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
20001ce6:	66bb      	str	r3, [r7, #104]	; 0x68
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:445

     /* read the next_file store location from directory */
     spi_offset_addr = spi_dir_ptr->next_addr;
20001ce8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
20001cea:	689b      	ldr	r3, [r3, #8]
20001cec:	667b      	str	r3, [r7, #100]	; 0x64
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:447

     PRINT_TEXT( "\r\n------------------------ Starting YModem file transfer ------------------------\r\n" );
20001cee:	4811      	ldr	r0, [pc, #68]	; (20001d34 <spi_file_download+0x5c>)
20001cf0:	f000 f976 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:448
     PRINT_TEXT( "Please select file and initiate transfer on host computer.\r\n" );
20001cf4:	4810      	ldr	r0, [pc, #64]	; (20001d38 <spi_file_download+0x60>)
20001cf6:	f000 f973 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:454



     //SysTick_Config(SystemCoreClock/100); // is this needed ?

     file_size = ymodem_download_file_spi_flash(spi_offset_addr, MAX_FILE_SIZE, &spi_file_info);
20001cfa:	1d3b      	adds	r3, r7, #4
20001cfc:	461a      	mov	r2, r3
20001cfe:	6eb9      	ldr	r1, [r7, #104]	; 0x68
20001d00:	6e78      	ldr	r0, [r7, #100]	; 0x64
20001d02:	f000 fca7 	bl	20002654 <ymodem_download_file_spi_flash>
20001d06:	6638      	str	r0, [r7, #96]	; 0x60
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:459




     if (file_size > 0) {
20001d08:	6e3b      	ldr	r3, [r7, #96]	; 0x60
20001d0a:	2b00      	cmp	r3, #0
20001d0c:	d008      	beq.n	20001d20 <spi_file_download+0x48>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:462


         print_spi_file_info(&spi_file_info);
20001d0e:	1d3b      	adds	r3, r7, #4
20001d10:	4618      	mov	r0, r3
20001d12:	f000 f857 	bl	20001dc4 <print_spi_file_info>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:464

         spi_add_file_to_dir(&spi_file_info);
20001d16:	1d3b      	adds	r3, r7, #4
20001d18:	4618      	mov	r0, r3
20001d1a:	f7ff ff01 	bl	20001b20 <spi_add_file_to_dir>
20001d1e:	e002      	b.n	20001d26 <spi_file_download+0x4e>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:467

         } else {
             PRINT_TEXT("File received: \n");
20001d20:	4806      	ldr	r0, [pc, #24]	; (20001d3c <spi_file_download+0x64>)
20001d22:	f000 f95d 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:470

         }
     return file_size;
20001d26:	6e3b      	ldr	r3, [r7, #96]	; 0x60
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:472

 }
20001d28:	4618      	mov	r0, r3
20001d2a:	3770      	adds	r7, #112	; 0x70
20001d2c:	46bd      	mov	sp, r7
20001d2e:	bd80      	pop	{r7, pc}
20001d30:	2000a088 	.word	0x2000a088
20001d34:	20008e18 	.word	0x20008e18
20001d38:	20008e6c 	.word	0x20008e6c
20001d3c:	20008eac 	.word	0x20008eac

20001d40 <spi_file_display>:
spi_file_display():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:475


  void spi_file_display(uint8_t index ){
20001d40:	b590      	push	{r4, r7, lr}
20001d42:	b089      	sub	sp, #36	; 0x24
20001d44:	af02      	add	r7, sp, #8
20001d46:	4603      	mov	r3, r0
20001d48:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:477

      spi_dir_t* spi_dir_ptr =  &spi_dir;  // point to the spi_dire structure in ram
20001d4a:	4b1a      	ldr	r3, [pc, #104]	; (20001db4 <spi_file_display+0x74>)
20001d4c:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:479

      spi_file_t *spi_file = &spi_dir_ptr->files[index-1]; //  1st file is at location '0'
20001d4e:	79fb      	ldrb	r3, [r7, #7]
20001d50:	3b01      	subs	r3, #1
20001d52:	225c      	movs	r2, #92	; 0x5c
20001d54:	fb02 f303 	mul.w	r3, r2, r3
20001d58:	3308      	adds	r3, #8
20001d5a:	697a      	ldr	r2, [r7, #20]
20001d5c:	4413      	add	r3, r2
20001d5e:	3304      	adds	r3, #4
20001d60:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:482


      uint32_t spi_addr = spi_file->file_addr;
20001d62:	693b      	ldr	r3, [r7, #16]
20001d64:	6d5b      	ldr	r3, [r3, #84]	; 0x54
20001d66:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:483
      uint32_t size     = spi_file->file_size;
20001d68:	693b      	ldr	r3, [r7, #16]
20001d6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
20001d6c:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:485

      PRINT_TEXT("\r\n File Details:");
20001d6e:	4812      	ldr	r0, [pc, #72]	; (20001db8 <spi_file_display+0x78>)
20001d70:	f000 f936 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:488

      printf("\r| %-30s | %10.2fkb | 0x%-12X |\n",
                          spi_file->file_name,
20001d74:	693c      	ldr	r4, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:489
                          spi_file->file_size / 1024.0,
20001d76:	693b      	ldr	r3, [r7, #16]
20001d78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:487
      printf("\r| %-30s | %10.2fkb | 0x%-12X |\n",
20001d7a:	4618      	mov	r0, r3
20001d7c:	f001 f80c 	bl	20002d98 <__aeabi_ui2d>
20001d80:	f04f 0200 	mov.w	r2, #0
20001d84:	4b0d      	ldr	r3, [pc, #52]	; (20001dbc <spi_file_display+0x7c>)
20001d86:	f001 f9ab 	bl	200030e0 <__aeabi_ddiv>
20001d8a:	4602      	mov	r2, r0
20001d8c:	460b      	mov	r3, r1
20001d8e:	4610      	mov	r0, r2
20001d90:	4619      	mov	r1, r3
20001d92:	693b      	ldr	r3, [r7, #16]
20001d94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
20001d96:	9300      	str	r3, [sp, #0]
20001d98:	4602      	mov	r2, r0
20001d9a:	460b      	mov	r3, r1
20001d9c:	4621      	mov	r1, r4
20001d9e:	4808      	ldr	r0, [pc, #32]	; (20001dc0 <spi_file_display+0x80>)
20001da0:	f001 fb70 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:491
                          spi_file->file_addr);
      hex_view_spi_flash(spi_addr, size);
20001da4:	68b9      	ldr	r1, [r7, #8]
20001da6:	68f8      	ldr	r0, [r7, #12]
20001da8:	f000 fa0e 	bl	200021c8 <hex_view_spi_flash>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:493

  }
20001dac:	bf00      	nop
20001dae:	371c      	adds	r7, #28
20001db0:	46bd      	mov	sp, r7
20001db2:	bd90      	pop	{r4, r7, pc}
20001db4:	2000a088 	.word	0x2000a088
20001db8:	20008ec0 	.word	0x20008ec0
20001dbc:	40900000 	.word	0x40900000
20001dc0:	20008ed4 	.word	0x20008ed4

20001dc4 <print_spi_file_info>:
print_spi_file_info():
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:497


  void print_spi_file_info(spi_file_t *file_info)
  {
20001dc4:	b580      	push	{r7, lr}
20001dc6:	b082      	sub	sp, #8
20001dc8:	af00      	add	r7, sp, #0
20001dca:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:499

         printf("\r%-30s %10u  0x%-8X\n", file_info->file_name, file_info->file_size, (uint32_t)(file_info->file_addr));
20001dcc:	6879      	ldr	r1, [r7, #4]
20001dce:	687b      	ldr	r3, [r7, #4]
20001dd0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
20001dd2:	687b      	ldr	r3, [r7, #4]
20001dd4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
20001dd6:	4803      	ldr	r0, [pc, #12]	; (20001de4 <print_spi_file_info+0x20>)
20001dd8:	f001 fb54 	bl	20003484 <printf>
C:\jijeesh\github\m2s-fabric-ip/middleware/spi_flash/spi_flash.c:502


  }
20001ddc:	bf00      	nop
20001dde:	3708      	adds	r7, #8
20001de0:	46bd      	mov	sp, r7
20001de2:	bd80      	pop	{r7, pc}
20001de4:	20008ef8 	.word	0x20008ef8

20001de8 <NVIC_SetPriority>:
NVIC_SetPriority():
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1525
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
20001de8:	b480      	push	{r7}
20001dea:	b083      	sub	sp, #12
20001dec:	af00      	add	r7, sp, #0
20001dee:	4603      	mov	r3, r0
20001df0:	6039      	str	r1, [r7, #0]
20001df2:	71fb      	strb	r3, [r7, #7]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1526
  if ((int32_t)(IRQn) < 0)
20001df4:	f997 3007 	ldrsb.w	r3, [r7, #7]
20001df8:	2b00      	cmp	r3, #0
20001dfa:	da0b      	bge.n	20001e14 <NVIC_SetPriority+0x2c>
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1528
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
20001dfc:	683b      	ldr	r3, [r7, #0]
20001dfe:	b2da      	uxtb	r2, r3
20001e00:	490c      	ldr	r1, [pc, #48]	; (20001e34 <NVIC_SetPriority+0x4c>)
20001e02:	79fb      	ldrb	r3, [r7, #7]
20001e04:	f003 030f 	and.w	r3, r3, #15
20001e08:	3b04      	subs	r3, #4
20001e0a:	0112      	lsls	r2, r2, #4
20001e0c:	b2d2      	uxtb	r2, r2
20001e0e:	440b      	add	r3, r1
20001e10:	761a      	strb	r2, [r3, #24]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1534
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
20001e12:	e009      	b.n	20001e28 <NVIC_SetPriority+0x40>
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1532
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
20001e14:	683b      	ldr	r3, [r7, #0]
20001e16:	b2da      	uxtb	r2, r3
20001e18:	4907      	ldr	r1, [pc, #28]	; (20001e38 <NVIC_SetPriority+0x50>)
20001e1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
20001e1e:	0112      	lsls	r2, r2, #4
20001e20:	b2d2      	uxtb	r2, r2
20001e22:	440b      	add	r3, r1
20001e24:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1534
}
20001e28:	bf00      	nop
20001e2a:	370c      	adds	r7, #12
20001e2c:	46bd      	mov	sp, r7
20001e2e:	bc80      	pop	{r7}
20001e30:	4770      	bx	lr
20001e32:	bf00      	nop
20001e34:	e000ed00 	.word	0xe000ed00
20001e38:	e000e100 	.word	0xe000e100

20001e3c <SysTick_Config>:
SysTick_Config():
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1657
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
20001e3c:	b580      	push	{r7, lr}
20001e3e:	b082      	sub	sp, #8
20001e40:	af00      	add	r7, sp, #0
20001e42:	6078      	str	r0, [r7, #4]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1658
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
20001e44:	687b      	ldr	r3, [r7, #4]
20001e46:	3b01      	subs	r3, #1
20001e48:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
20001e4c:	d301      	bcc.n	20001e52 <SysTick_Config+0x16>
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1660
  {
    return (1UL);                                                   /* Reload value impossible */
20001e4e:	2301      	movs	r3, #1
20001e50:	e00f      	b.n	20001e72 <SysTick_Config+0x36>
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1663
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
20001e52:	4a0a      	ldr	r2, [pc, #40]	; (20001e7c <SysTick_Config+0x40>)
20001e54:	687b      	ldr	r3, [r7, #4]
20001e56:	3b01      	subs	r3, #1
20001e58:	6053      	str	r3, [r2, #4]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1664
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
20001e5a:	210f      	movs	r1, #15
20001e5c:	f04f 30ff 	mov.w	r0, #4294967295
20001e60:	f7ff ffc2 	bl	20001de8 <NVIC_SetPriority>
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1665
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
20001e64:	4b05      	ldr	r3, [pc, #20]	; (20001e7c <SysTick_Config+0x40>)
20001e66:	2200      	movs	r2, #0
20001e68:	609a      	str	r2, [r3, #8]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1666
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
20001e6a:	4b04      	ldr	r3, [pc, #16]	; (20001e7c <SysTick_Config+0x40>)
20001e6c:	2207      	movs	r2, #7
20001e6e:	601a      	str	r2, [r3, #0]
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1669
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
20001e70:	2300      	movs	r3, #0
C:/Microchip/SoftConsole-v2021.1/CMSIS/V4.5/Include/core_cm3.h:1670
}
20001e72:	4618      	mov	r0, r3
20001e74:	3708      	adds	r7, #8
20001e76:	46bd      	mov	sp, r7
20001e78:	bd80      	pop	{r7, pc}
20001e7a:	bf00      	nop
20001e7c:	e000e010 	.word	0xe000e010

20001e80 <SysTick_Handler>:
SysTick_Handler():
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:23

/* SysTick Interrupt Handler will count the number of milli seconds elapsed from the start ..
 *
 */
void SysTick_Handler (void)
 {
20001e80:	b480      	push	{r7}
20001e82:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:24
   ticks++;
20001e84:	4b0a      	ldr	r3, [pc, #40]	; (20001eb0 <SysTick_Handler+0x30>)
20001e86:	681b      	ldr	r3, [r3, #0]
20001e88:	3301      	adds	r3, #1
20001e8a:	4a09      	ldr	r2, [pc, #36]	; (20001eb0 <SysTick_Handler+0x30>)
20001e8c:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:25
   g_10ms_count += 10;
20001e8e:	4b09      	ldr	r3, [pc, #36]	; (20001eb4 <SysTick_Handler+0x34>)
20001e90:	681b      	ldr	r3, [r3, #0]
20001e92:	330a      	adds	r3, #10
20001e94:	4a07      	ldr	r2, [pc, #28]	; (20001eb4 <SysTick_Handler+0x34>)
20001e96:	6013      	str	r3, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:31

        /*
         * For neatness, if we roll over, reset cleanly back to 0 so the count
         * always goes up in proper 10s.
         */
       if(g_10ms_count < 10)
20001e98:	4b06      	ldr	r3, [pc, #24]	; (20001eb4 <SysTick_Handler+0x34>)
20001e9a:	681b      	ldr	r3, [r3, #0]
20001e9c:	2b09      	cmp	r3, #9
20001e9e:	d802      	bhi.n	20001ea6 <SysTick_Handler+0x26>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:32
           g_10ms_count = 0;
20001ea0:	4b04      	ldr	r3, [pc, #16]	; (20001eb4 <SysTick_Handler+0x34>)
20001ea2:	2200      	movs	r2, #0
20001ea4:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:34

 }
20001ea6:	bf00      	nop
20001ea8:	46bd      	mov	sp, r7
20001eaa:	bc80      	pop	{r7}
20001eac:	4770      	bx	lr
20001eae:	bf00      	nop
20001eb0:	2000a854 	.word	0x2000a854
20001eb4:	2000a850 	.word	0x2000a850

20001eb8 <SysTick_Init>:
SysTick_Init():
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:42
/* initialise the SystickTimer to generate an interrupt at every milli second.
 * Make sure this function is called in the hw_init() function before using any elay functions
 */

void SysTick_Init (void)
{
20001eb8:	b580      	push	{r7, lr}
20001eba:	b082      	sub	sp, #8
20001ebc:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:44
   uint32_t systick_load;
   SystemCoreClockUpdate();
20001ebe:	f7fe fb51 	bl	20000564 <SystemCoreClockUpdate>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:45
   systick_load  = SystemCoreClock/1000 ;  // 1ms ticks
20001ec2:	4b07      	ldr	r3, [pc, #28]	; (20001ee0 <SysTick_Init+0x28>)
20001ec4:	681b      	ldr	r3, [r3, #0]
20001ec6:	4a07      	ldr	r2, [pc, #28]	; (20001ee4 <SysTick_Init+0x2c>)
20001ec8:	fba2 2303 	umull	r2, r3, r2, r3
20001ecc:	099b      	lsrs	r3, r3, #6
20001ece:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:47
   //systick_load  = SystemCoreClock/100 ; /* 10ms ticks changed for ymodem */
   SysTick_Config(systick_load);
20001ed0:	6878      	ldr	r0, [r7, #4]
20001ed2:	f7ff ffb3 	bl	20001e3c <SysTick_Config>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:49

}
20001ed6:	bf00      	nop
20001ed8:	3708      	adds	r7, #8
20001eda:	46bd      	mov	sp, r7
20001edc:	bd80      	pop	{r7, pc}
20001ede:	bf00      	nop
20001ee0:	20009250 	.word	0x20009250
20001ee4:	10624dd3 	.word	0x10624dd3

20001ee8 <millis>:
millis():
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:54


// return the system clock as milliseconds
uint32_t millis (void)
{
20001ee8:	b480      	push	{r7}
20001eea:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:55
   return ticks;
20001eec:	4b02      	ldr	r3, [pc, #8]	; (20001ef8 <millis+0x10>)
20001eee:	681b      	ldr	r3, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:56
}
20001ef0:	4618      	mov	r0, r3
20001ef2:	46bd      	mov	sp, r7
20001ef4:	bc80      	pop	{r7}
20001ef6:	4770      	bx	lr
20001ef8:	2000a854 	.word	0x2000a854

20001efc <delay_ms>:
delay_ms():
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:65
 * any delay can be generated ( milli second and greater)
 *
 */

void delay_ms (uint32_t t)
{
20001efc:	b580      	push	{r7, lr}
20001efe:	b084      	sub	sp, #16
20001f00:	af00      	add	r7, sp, #0
20001f02:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:67
  uint32_t start, end;
  start = millis();
20001f04:	f7ff fff0 	bl	20001ee8 <millis>
20001f08:	60f8      	str	r0, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:68
  end = start + t;
20001f0a:	68fa      	ldr	r2, [r7, #12]
20001f0c:	687b      	ldr	r3, [r7, #4]
20001f0e:	4413      	add	r3, r2
20001f10:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:71


  if (start < end) {
20001f12:	68fa      	ldr	r2, [r7, #12]
20001f14:	68bb      	ldr	r3, [r7, #8]
20001f16:	429a      	cmp	r2, r3
20001f18:	d20d      	bcs.n	20001f36 <delay_ms+0x3a>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:72
  	while ((millis() >= start) && (millis() < end)) {
20001f1a:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:72 (discriminator 2)
20001f1c:	f7ff ffe4 	bl	20001ee8 <millis>
20001f20:	4602      	mov	r2, r0
20001f22:	68fb      	ldr	r3, [r7, #12]
20001f24:	4293      	cmp	r3, r2
20001f26:	d813      	bhi.n	20001f50 <delay_ms+0x54>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:72 (discriminator 1)
20001f28:	f7ff ffde 	bl	20001ee8 <millis>
20001f2c:	4602      	mov	r2, r0
20001f2e:	68bb      	ldr	r3, [r7, #8]
20001f30:	4293      	cmp	r3, r2
20001f32:	d8f3      	bhi.n	20001f1c <delay_ms+0x20>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:80
  } else {
    while ((millis() >= start) || (millis() < end)) {
      // do nothing
    };
  }
}
20001f34:	e00c      	b.n	20001f50 <delay_ms+0x54>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:76
    while ((millis() >= start) || (millis() < end)) {
20001f36:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:76 (discriminator 3)
20001f38:	f7ff ffd6 	bl	20001ee8 <millis>
20001f3c:	4602      	mov	r2, r0
20001f3e:	68fb      	ldr	r3, [r7, #12]
20001f40:	4293      	cmp	r3, r2
20001f42:	d9f9      	bls.n	20001f38 <delay_ms+0x3c>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:76 (discriminator 2)
20001f44:	f7ff ffd0 	bl	20001ee8 <millis>
20001f48:	4602      	mov	r2, r0
20001f4a:	68bb      	ldr	r3, [r7, #8]
20001f4c:	4293      	cmp	r3, r2
20001f4e:	d8f3      	bhi.n	20001f38 <delay_ms+0x3c>
C:\jijeesh\github\m2s-fabric-ip/middleware/delay/delay.c:80
}
20001f50:	bf00      	nop
20001f52:	3710      	adds	r7, #16
20001f54:	46bd      	mov	sp, r7
20001f56:	bd80      	pop	{r7, pc}

20001f58 <uart_getchar>:
uart_getchar():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:26
 *
 * mss_uart_instance_t * const g_uart  =  &g_mss_uart0 ;
 * */
extern UART_instance_t g_uart;

uint8_t uart_getchar () {
20001f58:	b580      	push	{r7, lr}
20001f5a:	b082      	sub	sp, #8
20001f5c:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:27
	uint8_t rx_size=0;
20001f5e:	2300      	movs	r3, #0
20001f60:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:31 (discriminator 1)
	uint8_t rx_buff;

	  do {
	rx_size = UART_get_rx(&g_uart, &rx_buff, sizeof(rx_buff));
20001f62:	1dbb      	adds	r3, r7, #6
20001f64:	2201      	movs	r2, #1
20001f66:	4619      	mov	r1, r3
20001f68:	4806      	ldr	r0, [pc, #24]	; (20001f84 <uart_getchar+0x2c>)
20001f6a:	f7fe ff87 	bl	20000e7c <UART_get_rx>
20001f6e:	4603      	mov	r3, r0
20001f70:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:33 (discriminator 1)

	  }while ( rx_size < 1);
20001f72:	79fb      	ldrb	r3, [r7, #7]
20001f74:	2b00      	cmp	r3, #0
20001f76:	d0f4      	beq.n	20001f62 <uart_getchar+0xa>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:35

	return rx_buff;
20001f78:	79bb      	ldrb	r3, [r7, #6]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:36
}
20001f7a:	4618      	mov	r0, r3
20001f7c:	3708      	adds	r7, #8
20001f7e:	46bd      	mov	sp, r7
20001f80:	bd80      	pop	{r7, pc}
20001f82:	bf00      	nop
20001f84:	2000a800 	.word	0x2000a800

20001f88 <uart_putc>:
uart_putc():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:54
 *
 * @note This function is blocking.
 *
 * @param[in] c Char to be send.
 **************************************************************************/
void  uart_putc (char  txbyte) {
20001f88:	b580      	push	{r7, lr}
20001f8a:	b082      	sub	sp, #8
20001f8c:	af00      	add	r7, sp, #0
20001f8e:	4603      	mov	r3, r0
20001f90:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:56

    UART_send(&g_uart, &txbyte, sizeof(txbyte));
20001f92:	1dfb      	adds	r3, r7, #7
20001f94:	2201      	movs	r2, #1
20001f96:	4619      	mov	r1, r3
20001f98:	4803      	ldr	r0, [pc, #12]	; (20001fa8 <uart_putc+0x20>)
20001f9a:	f7fe ff30 	bl	20000dfe <UART_send>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:59


}
20001f9e:	bf00      	nop
20001fa0:	3708      	adds	r7, #8
20001fa2:	46bd      	mov	sp, r7
20001fa4:	bd80      	pop	{r7, pc}
20001fa6:	bf00      	nop
20001fa8:	2000a800 	.word	0x2000a800

20001fac <uart_getc>:
uart_getc():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:68
 *
 * @note This function is blocking and does not check for UART frame/parity errors.
 *
 * @return Received char.
 **************************************************************************/
char uart_getc(void) {
20001fac:	b580      	push	{r7, lr}
20001fae:	b082      	sub	sp, #8
20001fb0:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:70

  uint32_t d = 0;
20001fb2:	2300      	movs	r3, #0
20001fb4:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:71
  uint8_t rx_size=0;
20001fb6:	2300      	movs	r3, #0
20001fb8:	70fb      	strb	r3, [r7, #3]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:75 (discriminator 1)
  uint8_t rx_buff;

      do {
         rx_size = UART_get_rx(&g_uart, &rx_buff, sizeof(rx_buff));
20001fba:	1cbb      	adds	r3, r7, #2
20001fbc:	2201      	movs	r2, #1
20001fbe:	4619      	mov	r1, r3
20001fc0:	4806      	ldr	r0, [pc, #24]	; (20001fdc <uart_getc+0x30>)
20001fc2:	f7fe ff5b 	bl	20000e7c <UART_get_rx>
20001fc6:	4603      	mov	r3, r0
20001fc8:	70fb      	strb	r3, [r7, #3]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:77 (discriminator 1)

           }while ( rx_size < 1);
20001fca:	78fb      	ldrb	r3, [r7, #3]
20001fcc:	2b00      	cmp	r3, #0
20001fce:	d0f4      	beq.n	20001fba <uart_getc+0xe>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:79

      return (char)rx_buff;
20001fd0:	78bb      	ldrb	r3, [r7, #2]
20001fd2:	b25b      	sxtb	r3, r3
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:80
    }
20001fd4:	4618      	mov	r0, r3
20001fd6:	3708      	adds	r7, #8
20001fd8:	46bd      	mov	sp, r7
20001fda:	bd80      	pop	{r7, pc}
20001fdc:	2000a800 	.word	0x2000a800

20001fe0 <uart_print>:
uart_print():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:89
 *
 * @note This function is blocking.
 *
 * @param[in] s Pointer to string.
 **************************************************************************/
void uart_print(const char *s) {
20001fe0:	b580      	push	{r7, lr}
20001fe2:	b084      	sub	sp, #16
20001fe4:	af00      	add	r7, sp, #0
20001fe6:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:91

  char c = 0;
20001fe8:	2300      	movs	r3, #0
20001fea:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:92
  while ((c = *s++)) {
20001fec:	e00b      	b.n	20002006 <uart_print+0x26>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:93
    if (c == '\n') {
20001fee:	f997 300f 	ldrsb.w	r3, [r7, #15]
20001ff2:	2b0a      	cmp	r3, #10
20001ff4:	d102      	bne.n	20001ffc <uart_print+0x1c>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:94
      uart_putc('\r');
20001ff6:	200d      	movs	r0, #13
20001ff8:	f7ff ffc6 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:96
    }
      uart_putc(c);
20001ffc:	f997 300f 	ldrsb.w	r3, [r7, #15]
20002000:	4618      	mov	r0, r3
20002002:	f7ff ffc1 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:92
  while ((c = *s++)) {
20002006:	687b      	ldr	r3, [r7, #4]
20002008:	1c5a      	adds	r2, r3, #1
2000200a:	607a      	str	r2, [r7, #4]
2000200c:	781b      	ldrb	r3, [r3, #0]
2000200e:	73fb      	strb	r3, [r7, #15]
20002010:	f997 300f 	ldrsb.w	r3, [r7, #15]
20002014:	2b00      	cmp	r3, #0
20002016:	d1ea      	bne.n	20001fee <uart_print+0xe>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:98
  }
}
20002018:	bf00      	nop
2000201a:	bf00      	nop
2000201c:	3710      	adds	r7, #16
2000201e:	46bd      	mov	sp, r7
20002020:	bd80      	pop	{r7, pc}
	...

20002024 <print_hex_word>:
print_hex_word():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:106
/**********************************************************************//**
 * Print 32-bit number as 8-digit hexadecimal value (with "0x" suffix).
 *
 * @param[in] num Number to print as hexadecimal.
 **************************************************************************/
void print_hex_word(uint32_t num) {
20002024:	b580      	push	{r7, lr}
20002026:	b084      	sub	sp, #16
20002028:	af00      	add	r7, sp, #0
2000202a:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:110

  static const char hex_symbols[16] = "0123456789ABCDEF";

  PRINT_TEXT("0x");
2000202c:	4811      	ldr	r0, [pc, #68]	; (20002074 <print_hex_word+0x50>)
2000202e:	f7ff ffd7 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:113

  int i;
  for (i=0; i<8; i++) {
20002032:	2300      	movs	r3, #0
20002034:	60fb      	str	r3, [r7, #12]
20002036:	e014      	b.n	20002062 <print_hex_word+0x3e>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:114 (discriminator 3)
    uint32_t index = (num >> (28 - 4*i)) & 0xF;
20002038:	68fb      	ldr	r3, [r7, #12]
2000203a:	f1c3 0307 	rsb	r3, r3, #7
2000203e:	009b      	lsls	r3, r3, #2
20002040:	687a      	ldr	r2, [r7, #4]
20002042:	fa22 f303 	lsr.w	r3, r2, r3
20002046:	f003 030f 	and.w	r3, r3, #15
2000204a:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:116 (discriminator 3)

    PRINT_PUTC(hex_symbols[index]);
2000204c:	4a0a      	ldr	r2, [pc, #40]	; (20002078 <print_hex_word+0x54>)
2000204e:	68bb      	ldr	r3, [r7, #8]
20002050:	4413      	add	r3, r2
20002052:	f993 3000 	ldrsb.w	r3, [r3]
20002056:	4618      	mov	r0, r3
20002058:	f7ff ff96 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:113 (discriminator 3)
  for (i=0; i<8; i++) {
2000205c:	68fb      	ldr	r3, [r7, #12]
2000205e:	3301      	adds	r3, #1
20002060:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:113 (discriminator 1)
20002062:	68fb      	ldr	r3, [r7, #12]
20002064:	2b07      	cmp	r3, #7
20002066:	dde7      	ble.n	20002038 <print_hex_word+0x14>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:119
  }

}
20002068:	bf00      	nop
2000206a:	bf00      	nop
2000206c:	3710      	adds	r7, #16
2000206e:	46bd      	mov	sp, r7
20002070:	bd80      	pop	{r7, pc}
20002072:	bf00      	nop
20002074:	20008f10 	.word	0x20008f10
20002078:	20008f1c 	.word	0x20008f1c

2000207c <print_hex_digit>:
print_hex_digit():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:210
/**********************************************************************//**
 * Print 8-bit number as 2-digit hexadecimal value (without "0x" suffix).
 *
 * @param[in] num Number to print as hexadecimal.
 **************************************************************************/
void print_hex_digit(uint32_t num) {
2000207c:	b580      	push	{r7, lr}
2000207e:	b084      	sub	sp, #16
20002080:	af00      	add	r7, sp, #0
20002082:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:219
  static const char hex_symbols[16] = "0123456789ABCDEF";

  //PRINT_TEXT("0x");

  int i;
  for (i=6; i<8; i++) {
20002084:	2306      	movs	r3, #6
20002086:	60fb      	str	r3, [r7, #12]
20002088:	e014      	b.n	200020b4 <print_hex_digit+0x38>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:220 (discriminator 3)
    uint32_t index = (num >> (28 - 4*i)) & 0xF;
2000208a:	68fb      	ldr	r3, [r7, #12]
2000208c:	f1c3 0307 	rsb	r3, r3, #7
20002090:	009b      	lsls	r3, r3, #2
20002092:	687a      	ldr	r2, [r7, #4]
20002094:	fa22 f303 	lsr.w	r3, r2, r3
20002098:	f003 030f 	and.w	r3, r3, #15
2000209c:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:221 (discriminator 3)
    PRINT_PUTC(hex_symbols[index]);
2000209e:	4a09      	ldr	r2, [pc, #36]	; (200020c4 <print_hex_digit+0x48>)
200020a0:	68bb      	ldr	r3, [r7, #8]
200020a2:	4413      	add	r3, r2
200020a4:	f993 3000 	ldrsb.w	r3, [r3]
200020a8:	4618      	mov	r0, r3
200020aa:	f7ff ff6d 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:219 (discriminator 3)
  for (i=6; i<8; i++) {
200020ae:	68fb      	ldr	r3, [r7, #12]
200020b0:	3301      	adds	r3, #1
200020b2:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:219 (discriminator 1)
200020b4:	68fb      	ldr	r3, [r7, #12]
200020b6:	2b07      	cmp	r3, #7
200020b8:	dde7      	ble.n	2000208a <print_hex_digit+0xe>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_stdio.c:224
  }

}
200020ba:	bf00      	nop
200020bc:	bf00      	nop
200020be:	3710      	adds	r7, #16
200020c0:	46bd      	mov	sp, r7
200020c2:	bd80      	pop	{r7, pc}
200020c4:	20008f2c 	.word	0x20008f2c

200020c8 <print_hex_header>:
print_hex_header():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:30
 *
 * @param[in] c Char to be send.
 **************************************************************************/

void print_hex_header(void)
{
200020c8:	b580      	push	{r7, lr}
200020ca:	b082      	sub	sp, #8
200020cc:	af00      	add	r7, sp, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:33

    uint8_t idk;
    PRINT_TEXT("\r\n             ");  // 12 spaces for address
200020ce:	480c      	ldr	r0, [pc, #48]	; (20002100 <print_hex_header+0x38>)
200020d0:	f7ff ff86 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:35

    for ( idk=0 ; idk < 16 ; idk++){
200020d4:	2300      	movs	r3, #0
200020d6:	71fb      	strb	r3, [r7, #7]
200020d8:	e009      	b.n	200020ee <print_hex_header+0x26>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:37 (discriminator 3)

        print_hex_digit(idk);
200020da:	79fb      	ldrb	r3, [r7, #7]
200020dc:	4618      	mov	r0, r3
200020de:	f7ff ffcd 	bl	2000207c <print_hex_digit>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:38 (discriminator 3)
        PRINT_TEXT(" ");  // one space between bytes
200020e2:	4808      	ldr	r0, [pc, #32]	; (20002104 <print_hex_header+0x3c>)
200020e4:	f7ff ff7c 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:35 (discriminator 3)
    for ( idk=0 ; idk < 16 ; idk++){
200020e8:	79fb      	ldrb	r3, [r7, #7]
200020ea:	3301      	adds	r3, #1
200020ec:	71fb      	strb	r3, [r7, #7]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:35 (discriminator 1)
200020ee:	79fb      	ldrb	r3, [r7, #7]
200020f0:	2b0f      	cmp	r3, #15
200020f2:	d9f2      	bls.n	200020da <print_hex_header+0x12>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:43

    }


}
200020f4:	bf00      	nop
200020f6:	bf00      	nop
200020f8:	3708      	adds	r7, #8
200020fa:	46bd      	mov	sp, r7
200020fc:	bd80      	pop	{r7, pc}
200020fe:	bf00      	nop
20002100:	20008f3c 	.word	0x20008f3c
20002104:	20008f4c 	.word	0x20008f4c

20002108 <print_hex_line>:
print_hex_line():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:54
 *
 * @param  addr  :  address of the buffer wher the data is kpet.
 * @param  value :  pointer to the buffer where the data is kept.
 **************************************************************************/

void print_hex_line( uint32_t addr, uint8_t *value){
20002108:	b580      	push	{r7, lr}
2000210a:	b084      	sub	sp, #16
2000210c:	af00      	add	r7, sp, #0
2000210e:	6078      	str	r0, [r7, #4]
20002110:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:55
    uint32_t index = 0;
20002112:	2300      	movs	r3, #0
20002114:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:57

    PRINT_TEXT("  ");
20002116:	4811      	ldr	r0, [pc, #68]	; (2000215c <print_hex_line+0x54>)
20002118:	f7ff ff62 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:58
    PRINT_XNUM(addr);
2000211c:	6878      	ldr	r0, [r7, #4]
2000211e:	f7ff ff81 	bl	20002024 <print_hex_word>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:59
    PRINT_TEXT("| "); // two spaces between the address and data bytes
20002122:	480f      	ldr	r0, [pc, #60]	; (20002160 <print_hex_line+0x58>)
20002124:	f7ff ff5c 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:61

    for ( index =0 ; index < 16; index++){
20002128:	2300      	movs	r3, #0
2000212a:	60fb      	str	r3, [r7, #12]
2000212c:	e00c      	b.n	20002148 <print_hex_line+0x40>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:62 (discriminator 3)
        print_hex_digit(value[index]);
2000212e:	683a      	ldr	r2, [r7, #0]
20002130:	68fb      	ldr	r3, [r7, #12]
20002132:	4413      	add	r3, r2
20002134:	781b      	ldrb	r3, [r3, #0]
20002136:	4618      	mov	r0, r3
20002138:	f7ff ffa0 	bl	2000207c <print_hex_digit>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:63 (discriminator 3)
        PRINT_TEXT(" "); // one space
2000213c:	4809      	ldr	r0, [pc, #36]	; (20002164 <print_hex_line+0x5c>)
2000213e:	f7ff ff4f 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:61 (discriminator 3)
    for ( index =0 ; index < 16; index++){
20002142:	68fb      	ldr	r3, [r7, #12]
20002144:	3301      	adds	r3, #1
20002146:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:61 (discriminator 1)
20002148:	68fb      	ldr	r3, [r7, #12]
2000214a:	2b0f      	cmp	r3, #15
2000214c:	d9ef      	bls.n	2000212e <print_hex_line+0x26>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:65
        }
    PRINT_TEXT("  "); // two spaces
2000214e:	4803      	ldr	r0, [pc, #12]	; (2000215c <print_hex_line+0x54>)
20002150:	f7ff ff46 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:68


}
20002154:	bf00      	nop
20002156:	3710      	adds	r7, #16
20002158:	46bd      	mov	sp, r7
2000215a:	bd80      	pop	{r7, pc}
2000215c:	20008f50 	.word	0x20008f50
20002160:	20008f54 	.word	0x20008f54
20002164:	20008f4c 	.word	0x20008f4c

20002168 <print_ascii_line>:
print_ascii_line():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:79
 *
 * @param  addr  :  address of the buffer wher the data is kpet.
 * @param  value :  pointer to the buffer where the data is kept.
 **************************************************************************/

void print_ascii_line( uint32_t addr, uint8_t *value){
20002168:	b580      	push	{r7, lr}
2000216a:	b084      	sub	sp, #16
2000216c:	af00      	add	r7, sp, #0
2000216e:	6078      	str	r0, [r7, #4]
20002170:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:80
    uint32_t index = 0;
20002172:	2300      	movs	r3, #0
20002174:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:81
    PRINT_TEXT("  "); // two spaces
20002176:	4811      	ldr	r0, [pc, #68]	; (200021bc <print_ascii_line+0x54>)
20002178:	f7ff ff32 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:82
    PRINT_XNUM(addr);
2000217c:	6878      	ldr	r0, [r7, #4]
2000217e:	f7ff ff51 	bl	20002024 <print_hex_word>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:83
    PRINT_TEXT("| "); // two spaces between the address and data bytes
20002182:	480f      	ldr	r0, [pc, #60]	; (200021c0 <print_ascii_line+0x58>)
20002184:	f7ff ff2c 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:85

    for ( index =0 ; index < 16; index++){
20002188:	2300      	movs	r3, #0
2000218a:	60fb      	str	r3, [r7, #12]
2000218c:	e00d      	b.n	200021aa <print_ascii_line+0x42>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:86 (discriminator 3)
            PRINT_PUTC(value[index]);
2000218e:	683a      	ldr	r2, [r7, #0]
20002190:	68fb      	ldr	r3, [r7, #12]
20002192:	4413      	add	r3, r2
20002194:	781b      	ldrb	r3, [r3, #0]
20002196:	b25b      	sxtb	r3, r3
20002198:	4618      	mov	r0, r3
2000219a:	f7ff fef5 	bl	20001f88 <uart_putc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:87 (discriminator 3)
            PRINT_TEXT(" "); // one space between each data byte
2000219e:	4809      	ldr	r0, [pc, #36]	; (200021c4 <print_ascii_line+0x5c>)
200021a0:	f7ff ff1e 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:85 (discriminator 3)
    for ( index =0 ; index < 16; index++){
200021a4:	68fb      	ldr	r3, [r7, #12]
200021a6:	3301      	adds	r3, #1
200021a8:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:85 (discriminator 1)
200021aa:	68fb      	ldr	r3, [r7, #12]
200021ac:	2b0f      	cmp	r3, #15
200021ae:	d9ee      	bls.n	2000218e <print_ascii_line+0x26>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:90
            }

}
200021b0:	bf00      	nop
200021b2:	bf00      	nop
200021b4:	3710      	adds	r7, #16
200021b6:	46bd      	mov	sp, r7
200021b8:	bd80      	pop	{r7, pc}
200021ba:	bf00      	nop
200021bc:	20008f50 	.word	0x20008f50
200021c0:	20008f54 	.word	0x20008f54
200021c4:	20008f4c 	.word	0x20008f4c

200021c8 <hex_view_spi_flash>:
hex_view_spi_flash():
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:160
 *
 * @param  flash_addr  :  uint32_t  flash address
 * @param  size        :  size of the data to be read in bytes
 *
 **************************************************************************/
void hex_view_spi_flash(uint32_t flash_addr, uint32_t size){
200021c8:	b580      	push	{r7, lr}
200021ca:	b0c6      	sub	sp, #280	; 0x118
200021cc:	af00      	add	r7, sp, #0
200021ce:	1d3b      	adds	r3, r7, #4
200021d0:	6018      	str	r0, [r3, #0]
200021d2:	463b      	mov	r3, r7
200021d4:	6019      	str	r1, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:162
#if ( SPI_FLASH_EN != 0)
    uint32_t addr_offset =0;
200021d6:	2300      	movs	r3, #0
200021d8:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:168
    uint32_t idk,i;
    uint8_t key;
    uint8_t flash_rd_buf[256];


    print_hex_header();
200021dc:	f7ff ff74 	bl	200020c8 <print_hex_header>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:170

   addr_offset = 0;
200021e0:	2300      	movs	r3, #0
200021e2:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:171
   while ( addr_offset < size){
200021e6:	e04e      	b.n	20002286 <hex_view_spi_flash+0xbe>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:173
          /* read as many as 128 Bytes at a time ( size of the g_rd_buf buffer */
          spi_flash_read(flash_addr + addr_offset, flash_rd_buf, sizeof(flash_rd_buf));
200021e8:	1d3b      	adds	r3, r7, #4
200021ea:	681a      	ldr	r2, [r3, #0]
200021ec:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
200021f0:	4413      	add	r3, r2
200021f2:	f107 010c 	add.w	r1, r7, #12
200021f6:	f44f 7280 	mov.w	r2, #256	; 0x100
200021fa:	4618      	mov	r0, r3
200021fc:	f7ff fa42 	bl	20001684 <spi_flash_read>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:177


          /* print the read 128 bytes into 16 bytes per line 8 */
      for ( idk=0;  idk < sizeof(flash_rd_buf);  idk = idk + 16){
20002200:	2300      	movs	r3, #0
20002202:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
20002206:	e027      	b.n	20002258 <hex_view_spi_flash+0x90>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:178 (discriminator 3)
       PRINT_TEXT("\r\n");
20002208:	4825      	ldr	r0, [pc, #148]	; (200022a0 <hex_view_spi_flash+0xd8>)
2000220a:	f7ff fee9 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:179 (discriminator 3)
       print_hex_line(flash_addr + addr_offset +idk , &flash_rd_buf[idk]); // get the value from pointer offset location
2000220e:	1d3b      	adds	r3, r7, #4
20002210:	681a      	ldr	r2, [r3, #0]
20002212:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
20002216:	441a      	add	r2, r3
20002218:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
2000221c:	18d0      	adds	r0, r2, r3
2000221e:	f107 020c 	add.w	r2, r7, #12
20002222:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
20002226:	4413      	add	r3, r2
20002228:	4619      	mov	r1, r3
2000222a:	f7ff ff6d 	bl	20002108 <print_hex_line>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:180 (discriminator 3)
       print_ascii_line(flash_addr + addr_offset +idk , &flash_rd_buf[idk]); // get the value from pointer offset location
2000222e:	1d3b      	adds	r3, r7, #4
20002230:	681a      	ldr	r2, [r3, #0]
20002232:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
20002236:	441a      	add	r2, r3
20002238:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
2000223c:	18d0      	adds	r0, r2, r3
2000223e:	f107 020c 	add.w	r2, r7, #12
20002242:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
20002246:	4413      	add	r3, r2
20002248:	4619      	mov	r1, r3
2000224a:	f7ff ff8d 	bl	20002168 <print_ascii_line>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:177 (discriminator 3)
      for ( idk=0;  idk < sizeof(flash_rd_buf);  idk = idk + 16){
2000224e:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
20002252:	3310      	adds	r3, #16
20002254:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:177 (discriminator 1)
20002258:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
2000225c:	2bff      	cmp	r3, #255	; 0xff
2000225e:	d9d3      	bls.n	20002208 <hex_view_spi_flash+0x40>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:183
      }

    addr_offset = addr_offset + sizeof(flash_rd_buf);
20002260:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
20002264:	f503 7380 	add.w	r3, r3, #256	; 0x100
20002268:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:185

    PRINT_TEXT("\r\n press any key to continue or 'x' to exit");
2000226c:	480d      	ldr	r0, [pc, #52]	; (200022a4 <hex_view_spi_flash+0xdc>)
2000226e:	f7ff feb7 	bl	20001fe0 <uart_print>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:186
    key = PRINT_GETC();
20002272:	f7ff fe9b 	bl	20001fac <uart_getc>
20002276:	4603      	mov	r3, r0
20002278:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:188

        if ( key == 'x')
2000227c:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
20002280:	2b78      	cmp	r3, #120	; 0x78
20002282:	d007      	beq.n	20002294 <hex_view_spi_flash+0xcc>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:191
             break;
        else
            continue;
20002284:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:171
   while ( addr_offset < size){
20002286:	463b      	mov	r3, r7
20002288:	f8d7 2114 	ldr.w	r2, [r7, #276]	; 0x114
2000228c:	681b      	ldr	r3, [r3, #0]
2000228e:	429a      	cmp	r2, r3
20002290:	d3aa      	bcc.n	200021e8 <hex_view_spi_flash+0x20>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:199
#else

   return 0;
#endif

}
20002292:	e000      	b.n	20002296 <hex_view_spi_flash+0xce>
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:189
             break;
20002294:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/stdio/uart_hexview.c:199
}
20002296:	bf00      	nop
20002298:	f507 778c 	add.w	r7, r7, #280	; 0x118
2000229c:	46bd      	mov	sp, r7
2000229e:	bd80      	pop	{r7, pc}
200022a0:	20008f58 	.word	0x20008f58
200022a4:	20008f60 	.word	0x20008f60

200022a8 <sf2bl_crc16>:
sf2bl_crc16():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:49

/***************************************************************************//**
 * Calculate CRC for block of data.
 */
uint16_t sf2bl_crc16(const uint8_t *buf, uint32_t count)
{
200022a8:	b480      	push	{r7}
200022aa:	b085      	sub	sp, #20
200022ac:	af00      	add	r7, sp, #0
200022ae:	6078      	str	r0, [r7, #4]
200022b0:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:50
    uint16_t crc = 0;
200022b2:	2300      	movs	r3, #0
200022b4:	81fb      	strh	r3, [r7, #14]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:53
    int i;

    while(count--)
200022b6:	e024      	b.n	20002302 <sf2bl_crc16+0x5a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:55
    {
        crc = crc ^ *buf++ << 8;
200022b8:	687b      	ldr	r3, [r7, #4]
200022ba:	1c5a      	adds	r2, r3, #1
200022bc:	607a      	str	r2, [r7, #4]
200022be:	781b      	ldrb	r3, [r3, #0]
200022c0:	021b      	lsls	r3, r3, #8
200022c2:	b21a      	sxth	r2, r3
200022c4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
200022c8:	4053      	eors	r3, r2
200022ca:	b21b      	sxth	r3, r3
200022cc:	81fb      	strh	r3, [r7, #14]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:57

        for (i=0; i<8; i++)
200022ce:	2300      	movs	r3, #0
200022d0:	60bb      	str	r3, [r7, #8]
200022d2:	e013      	b.n	200022fc <sf2bl_crc16+0x54>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:59
        {
            if (crc & 0x8000)
200022d4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
200022d8:	2b00      	cmp	r3, #0
200022da:	da09      	bge.n	200022f0 <sf2bl_crc16+0x48>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:61
            {
                crc = crc << 1 ^ 0x1021;
200022dc:	89fb      	ldrh	r3, [r7, #14]
200022de:	005b      	lsls	r3, r3, #1
200022e0:	b21b      	sxth	r3, r3
200022e2:	f483 5381 	eor.w	r3, r3, #4128	; 0x1020
200022e6:	f083 0301 	eor.w	r3, r3, #1
200022ea:	b21b      	sxth	r3, r3
200022ec:	81fb      	strh	r3, [r7, #14]
200022ee:	e002      	b.n	200022f6 <sf2bl_crc16+0x4e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:65
            }
            else
            {
                crc = crc << 1;
200022f0:	89fb      	ldrh	r3, [r7, #14]
200022f2:	005b      	lsls	r3, r3, #1
200022f4:	81fb      	strh	r3, [r7, #14]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:57 (discriminator 2)
        for (i=0; i<8; i++)
200022f6:	68bb      	ldr	r3, [r7, #8]
200022f8:	3301      	adds	r3, #1
200022fa:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:57 (discriminator 1)
200022fc:	68bb      	ldr	r3, [r7, #8]
200022fe:	2b07      	cmp	r3, #7
20002300:	dde8      	ble.n	200022d4 <sf2bl_crc16+0x2c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:53
    while(count--)
20002302:	683b      	ldr	r3, [r7, #0]
20002304:	1e5a      	subs	r2, r3, #1
20002306:	603a      	str	r2, [r7, #0]
20002308:	2b00      	cmp	r3, #0
2000230a:	d1d5      	bne.n	200022b8 <sf2bl_crc16+0x10>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:70
            }
        }
    }

    return crc;
2000230c:	89fb      	ldrh	r3, [r7, #14]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:71
}
2000230e:	4618      	mov	r0, r3
20002310:	3714      	adds	r7, #20
20002312:	46bd      	mov	sp, r7
20002314:	bc80      	pop	{r7}
20002316:	4770      	bx	lr

20002318 <_sleep>:
_sleep():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:186
/***************************************************************************//**
 *
 */
static void _sleep(uint32_t seconds_delay)

{
20002318:	b480      	push	{r7}
2000231a:	b085      	sub	sp, #20
2000231c:	af00      	add	r7, sp, #0
2000231e:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:189
    uint32_t start_time;

    start_time = g_10ms_count; /* record starting point */
20002320:	4b0b      	ldr	r3, [pc, #44]	; (20002350 <_sleep+0x38>)
20002322:	681b      	ldr	r3, [r3, #0]
20002324:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:190
    seconds_delay *= 1000;     /* Convert to ms */
20002326:	687b      	ldr	r3, [r7, #4]
20002328:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2000232c:	fb02 f303 	mul.w	r3, r2, r3
20002330:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:192

    while((g_10ms_count - start_time) < seconds_delay)
20002332:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:192 (discriminator 1)
20002334:	4b06      	ldr	r3, [pc, #24]	; (20002350 <_sleep+0x38>)
20002336:	681a      	ldr	r2, [r3, #0]
20002338:	68fb      	ldr	r3, [r7, #12]
2000233a:	1ad3      	subs	r3, r2, r3
2000233c:	687a      	ldr	r2, [r7, #4]
2000233e:	429a      	cmp	r2, r3
20002340:	d8f8      	bhi.n	20002334 <_sleep+0x1c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:194
        ;
}
20002342:	bf00      	nop
20002344:	bf00      	nop
20002346:	3714      	adds	r7, #20
20002348:	46bd      	mov	sp, r7
2000234a:	bc80      	pop	{r7}
2000234c:	4770      	bx	lr
2000234e:	bf00      	nop
20002350:	2000a850 	.word	0x2000a850

20002354 <_getchar>:
_getchar():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:202

/***************************************************************************//**
 *
 */
static int32_t _getchar(int32_t timeout)
{
20002354:	b580      	push	{r7, lr}
20002356:	b088      	sub	sp, #32
20002358:	af00      	add	r7, sp, #0
2000235a:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:209
    uint8_t  rx_byte;
    int32_t  done;
    int32_t received;
    int32_t ret_value;

    ret_value = -1; /* Assume failure/timeout to simplify things */
2000235c:	f04f 33ff 	mov.w	r3, #4294967295
20002360:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:210
    done = 0;
20002362:	2300      	movs	r3, #0
20002364:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:212

    if(timeout < 0) /* blocking mode, exit only on rx character or error */
20002366:	687b      	ldr	r3, [r7, #4]
20002368:	2b00      	cmp	r3, #0
2000236a:	da14      	bge.n	20002396 <_getchar+0x42>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:214
    {
        while(!done)
2000236c:	e00f      	b.n	2000238e <_getchar+0x3a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:219
        {
#ifndef FABRIC_IP
            received = MSS_UART_get_rx(g_my_uart, &rx_byte, 1);
#else
            received = UART_get_rx( &g_uart, &rx_byte, 1 );
2000236e:	f107 030f 	add.w	r3, r7, #15
20002372:	2201      	movs	r2, #1
20002374:	4619      	mov	r1, r3
20002376:	4826      	ldr	r0, [pc, #152]	; (20002410 <_getchar+0xbc>)
20002378:	f7fe fd80 	bl	20000e7c <UART_get_rx>
2000237c:	4603      	mov	r3, r0
2000237e:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:221
#endif
            if(0 != received)
20002380:	697b      	ldr	r3, [r7, #20]
20002382:	2b00      	cmp	r3, #0
20002384:	d003      	beq.n	2000238e <_getchar+0x3a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:223
            {
                done = 1;
20002386:	2301      	movs	r3, #1
20002388:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:228
#ifndef FABRIC_IP
                if(MSS_UART_NO_ERROR == MSS_UART_get_rx_status(g_my_uart))
#endif
                {
                    ret_value = (int32_t)rx_byte;
2000238a:	7bfb      	ldrb	r3, [r7, #15]
2000238c:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:214
        while(!done)
2000238e:	69fb      	ldr	r3, [r7, #28]
20002390:	2b00      	cmp	r3, #0
20002392:	d0ec      	beq.n	2000236e <_getchar+0x1a>
20002394:	e037      	b.n	20002406 <_getchar+0xb2>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:233
                }
            }
        }
    }
    else if(timeout > 0) /* time limited mode */
20002396:	687b      	ldr	r3, [r7, #4]
20002398:	2b00      	cmp	r3, #0
2000239a:	dd26      	ble.n	200023ea <_getchar+0x96>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:235
    {
        start_time = g_10ms_count; /* record starting point */
2000239c:	4b1d      	ldr	r3, [pc, #116]	; (20002414 <_getchar+0xc0>)
2000239e:	681b      	ldr	r3, [r3, #0]
200023a0:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:236
        timeout *= 5000;           /* Convert timeout to ms */
200023a2:	687b      	ldr	r3, [r7, #4]
200023a4:	f241 3288 	movw	r2, #5000	; 0x1388
200023a8:	fb02 f303 	mul.w	r3, r2, r3
200023ac:	607b      	str	r3, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:237
        while(!done)
200023ae:	e018      	b.n	200023e2 <_getchar+0x8e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:242
        {
#ifndef FABRIC_IP
            received = MSS_UART_get_rx(g_my_uart, &rx_byte, 1);
#else
            received = UART_get_rx( &g_uart, &rx_byte, 1 );
200023b0:	f107 030f 	add.w	r3, r7, #15
200023b4:	2201      	movs	r2, #1
200023b6:	4619      	mov	r1, r3
200023b8:	4815      	ldr	r0, [pc, #84]	; (20002410 <_getchar+0xbc>)
200023ba:	f7fe fd5f 	bl	20000e7c <UART_get_rx>
200023be:	4603      	mov	r3, r0
200023c0:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:245

#endif
            if(0 != received)
200023c2:	697b      	ldr	r3, [r7, #20]
200023c4:	2b00      	cmp	r3, #0
200023c6:	d003      	beq.n	200023d0 <_getchar+0x7c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:247
            {
                done = 1;
200023c8:	2301      	movs	r3, #1
200023ca:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:252
#ifndef FABRIC_IP
                if(MSS_UART_NO_ERROR == MSS_UART_get_rx_status(g_my_uart))
#endif
                {
                    ret_value = (int32_t)rx_byte;
200023cc:	7bfb      	ldrb	r3, [r7, #15]
200023ce:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:256
                }
            }

           if((g_10ms_count) >= start_time + timeout)
200023d0:	687a      	ldr	r2, [r7, #4]
200023d2:	693b      	ldr	r3, [r7, #16]
200023d4:	441a      	add	r2, r3
200023d6:	4b0f      	ldr	r3, [pc, #60]	; (20002414 <_getchar+0xc0>)
200023d8:	681b      	ldr	r3, [r3, #0]
200023da:	429a      	cmp	r2, r3
200023dc:	d801      	bhi.n	200023e2 <_getchar+0x8e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:259
           {
                /* Timed out so exit with ret_value == -1 */
                done = 1;
200023de:	2301      	movs	r3, #1
200023e0:	61fb      	str	r3, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:237
        while(!done)
200023e2:	69fb      	ldr	r3, [r7, #28]
200023e4:	2b00      	cmp	r3, #0
200023e6:	d0e3      	beq.n	200023b0 <_getchar+0x5c>
200023e8:	e00d      	b.n	20002406 <_getchar+0xb2>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:268
    else /* one shot mode */
    {
#ifndef FABRIC_IP
            received = MSS_UART_get_rx(g_my_uart, &rx_byte, 1);
#else
           received = UART_get_rx( &g_uart, &rx_byte, 1 );
200023ea:	f107 030f 	add.w	r3, r7, #15
200023ee:	2201      	movs	r2, #1
200023f0:	4619      	mov	r1, r3
200023f2:	4807      	ldr	r0, [pc, #28]	; (20002410 <_getchar+0xbc>)
200023f4:	f7fe fd42 	bl	20000e7c <UART_get_rx>
200023f8:	4603      	mov	r3, r0
200023fa:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:274

#endif
#ifndef FABRIC_IP
            if((0 != received) && (MSS_UART_NO_ERROR == MSS_UART_get_rx_status(g_my_uart)))
#else
                if(0 != received)
200023fc:	697b      	ldr	r3, [r7, #20]
200023fe:	2b00      	cmp	r3, #0
20002400:	d001      	beq.n	20002406 <_getchar+0xb2>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:277
#endif
        {
            ret_value = (int32_t)rx_byte;
20002402:	7bfb      	ldrb	r3, [r7, #15]
20002404:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:281
        }
    }

    return(ret_value);
20002406:	69bb      	ldr	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:282
}
20002408:	4618      	mov	r0, r3
2000240a:	3720      	adds	r7, #32
2000240c:	46bd      	mov	sp, r7
2000240e:	bd80      	pop	{r7, pc}
20002410:	2000a800 	.word	0x2000a800
20002414:	2000a850 	.word	0x2000a850

20002418 <_putchar>:
_putchar():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:298
static uint8_t __tx_buffer[100];
static int32_t __tx_index = 0;
#endif

void _putchar(int32_t data)
{
20002418:	b580      	push	{r7, lr}
2000241a:	b084      	sub	sp, #16
2000241c:	af00      	add	r7, sp, #0
2000241e:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:307
    __tx_buffer[__tx_index++] = (uint8_t)data;
    if(__tx_index >= 100)
        __tx_index = 0;
#endif

    tx_byte = (uint8_t)data;
20002420:	687b      	ldr	r3, [r7, #4]
20002422:	b2db      	uxtb	r3, r3
20002424:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:312

#ifndef FABRIC_IP
    MSS_UART_polled_tx(g_my_uart, &tx_byte, 1);
#else
    UART_send( &g_uart, &tx_byte, 1 );
20002426:	f107 030f 	add.w	r3, r7, #15
2000242a:	2201      	movs	r2, #1
2000242c:	4619      	mov	r1, r3
2000242e:	4803      	ldr	r0, [pc, #12]	; (2000243c <_putchar+0x24>)
20002430:	f7fe fce5 	bl	20000dfe <UART_send>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:315

#endif
}
20002434:	bf00      	nop
20002436:	3710      	adds	r7, #16
20002438:	46bd      	mov	sp, r7
2000243a:	bd80      	pop	{r7, pc}
2000243c:	2000a800 	.word	0x2000a800

20002440 <str_to_u32>:
str_to_u32():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:336

/***************************************************************************//**
 *
 */
static uint32_t str_to_u32(uint8_t *str)
{
20002440:	b480      	push	{r7}
20002442:	b087      	sub	sp, #28
20002444:	af00      	add	r7, sp, #0
20002446:	6078      	str	r0, [r7, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:337
    const uint8_t *s = str;
20002448:	687b      	ldr	r3, [r7, #4]
2000244a:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:344 (discriminator 1)
    uint8_t c;

    /* strip leading spaces if any */
    do
    {
        c = *s++;
2000244c:	697b      	ldr	r3, [r7, #20]
2000244e:	1c5a      	adds	r2, r3, #1
20002450:	617a      	str	r2, [r7, #20]
20002452:	781b      	ldrb	r3, [r3, #0]
20002454:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:345 (discriminator 1)
    } while (c == ' ');
20002456:	7bfb      	ldrb	r3, [r7, #15]
20002458:	2b20      	cmp	r3, #32
2000245a:	d0f7      	beq.n	2000244c <str_to_u32+0xc>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:347

    for(acc = 0; (c >= '0') && (c <= '9'); c = *s++)
2000245c:	2300      	movs	r3, #0
2000245e:	613b      	str	r3, [r7, #16]
20002460:	e011      	b.n	20002486 <str_to_u32+0x46>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:349 (discriminator 4)
    {
        c -= '0';
20002462:	7bfb      	ldrb	r3, [r7, #15]
20002464:	3b30      	subs	r3, #48	; 0x30
20002466:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:350 (discriminator 4)
        acc *= 10;
20002468:	693a      	ldr	r2, [r7, #16]
2000246a:	4613      	mov	r3, r2
2000246c:	009b      	lsls	r3, r3, #2
2000246e:	4413      	add	r3, r2
20002470:	005b      	lsls	r3, r3, #1
20002472:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:351 (discriminator 4)
        acc += c;
20002474:	7bfb      	ldrb	r3, [r7, #15]
20002476:	693a      	ldr	r2, [r7, #16]
20002478:	4413      	add	r3, r2
2000247a:	613b      	str	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:347 (discriminator 4)
    for(acc = 0; (c >= '0') && (c <= '9'); c = *s++)
2000247c:	697b      	ldr	r3, [r7, #20]
2000247e:	1c5a      	adds	r2, r3, #1
20002480:	617a      	str	r2, [r7, #20]
20002482:	781b      	ldrb	r3, [r3, #0]
20002484:	73fb      	strb	r3, [r7, #15]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:347 (discriminator 1)
20002486:	7bfb      	ldrb	r3, [r7, #15]
20002488:	2b2f      	cmp	r3, #47	; 0x2f
2000248a:	d902      	bls.n	20002492 <str_to_u32+0x52>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:347 (discriminator 3)
2000248c:	7bfb      	ldrb	r3, [r7, #15]
2000248e:	2b39      	cmp	r3, #57	; 0x39
20002490:	d9e7      	bls.n	20002462 <str_to_u32+0x22>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:354
    }

    return acc;
20002492:	693b      	ldr	r3, [r7, #16]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:355
}
20002494:	4618      	mov	r0, r3
20002496:	371c      	adds	r7, #28
20002498:	46bd      	mov	sp, r7
2000249a:	bc80      	pop	{r7}
2000249c:	4770      	bx	lr
	...

200024a0 <receive_packet>:
receive_packet():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:363
/***************************************************************************//**
 * Returns 0 on success, 1 on corrupt packet, -1 on error (timeout):
 * *length will be set to the length of
 */
static int32_t receive_packet(uint8_t *data, int32_t *length)
{
200024a0:	b580      	push	{r7, lr}
200024a2:	b088      	sub	sp, #32
200024a4:	af00      	add	r7, sp, #0
200024a6:	6078      	str	r0, [r7, #4]
200024a8:	6039      	str	r1, [r7, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:366
    volatile int32_t index;
    int32_t rx_char;
    volatile int32_t return_val = 0; /* Assume everything is ok */
200024aa:	2300      	movs	r3, #0
200024ac:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:367
    uint32_t packet_size = 0U;
200024ae:	2300      	movs	r3, #0
200024b0:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:369

    *length = 0;
200024b2:	683b      	ldr	r3, [r7, #0]
200024b4:	2200      	movs	r2, #0
200024b6:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:371

    rx_char = _getchar(PACKET_TIMEOUT);
200024b8:	2001      	movs	r0, #1
200024ba:	f7ff ff4b 	bl	20002354 <_getchar>
200024be:	61f8      	str	r0, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:373

    if(rx_char < 0)
200024c0:	69fb      	ldr	r3, [r7, #28]
200024c2:	2b00      	cmp	r3, #0
200024c4:	da03      	bge.n	200024ce <receive_packet+0x2e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:375
    {
        return_val = -1;
200024c6:	f04f 33ff 	mov.w	r3, #4294967295
200024ca:	60bb      	str	r3, [r7, #8]
200024cc:	e0b6      	b.n	2000263c <receive_packet+0x19c>
200024ce:	69fb      	ldr	r3, [r7, #28]
200024d0:	3b01      	subs	r3, #1
200024d2:	2b17      	cmp	r3, #23
200024d4:	d854      	bhi.n	20002580 <receive_packet+0xe0>
200024d6:	a201      	add	r2, pc, #4	; (adr r2, 200024dc <receive_packet+0x3c>)
200024d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
200024dc:	2000253d 	.word	0x2000253d
200024e0:	20002543 	.word	0x20002543
200024e4:	20002581 	.word	0x20002581
200024e8:	2000254b 	.word	0x2000254b
200024ec:	20002581 	.word	0x20002581
200024f0:	20002581 	.word	0x20002581
200024f4:	20002581 	.word	0x20002581
200024f8:	20002581 	.word	0x20002581
200024fc:	20002581 	.word	0x20002581
20002500:	20002581 	.word	0x20002581
20002504:	20002581 	.word	0x20002581
20002508:	20002581 	.word	0x20002581
2000250c:	20002581 	.word	0x20002581
20002510:	20002581 	.word	0x20002581
20002514:	20002581 	.word	0x20002581
20002518:	20002581 	.word	0x20002581
2000251c:	20002581 	.word	0x20002581
20002520:	20002581 	.word	0x20002581
20002524:	20002581 	.word	0x20002581
20002528:	20002581 	.word	0x20002581
2000252c:	20002581 	.word	0x20002581
20002530:	20002581 	.word	0x20002581
20002534:	20002581 	.word	0x20002581
20002538:	20002553 	.word	0x20002553
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:382
    else
    {
        switch(rx_char)
        {
        case SOH: /* 128 byte packet start */
            packet_size = PACKET_SIZE;
2000253c:	2380      	movs	r3, #128	; 0x80
2000253e:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:383
            break;
20002540:	e026      	b.n	20002590 <receive_packet+0xf0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:386

        case STX: /* 1024 byte packet start */
            packet_size = PACKET_1K_SIZE;
20002542:	f44f 6380 	mov.w	r3, #1024	; 0x400
20002546:	61bb      	str	r3, [r7, #24]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:387
            break;
20002548:	e022      	b.n	20002590 <receive_packet+0xf0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:390

        case EOT: /* end of file marker */
            return_val = -2; /* Signifies end of file */
2000254a:	f06f 0301 	mvn.w	r3, #1
2000254e:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:391
            break;
20002550:	e01e      	b.n	20002590 <receive_packet+0xf0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:394

        case CAN: /* Possible cancellation of transfer */
            rx_char  = _getchar(PACKET_TIMEOUT);
20002552:	2001      	movs	r0, #1
20002554:	f7ff fefe 	bl	20002354 <_getchar>
20002558:	61f8      	str	r0, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:395
            if(CAN == rx_char)
2000255a:	69fb      	ldr	r3, [r7, #28]
2000255c:	2b18      	cmp	r3, #24
2000255e:	d107      	bne.n	20002570 <receive_packet+0xd0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:398
            {
                /* Got CAN CAN so really is cancel */
                *length = -1;
20002560:	683b      	ldr	r3, [r7, #0]
20002562:	f04f 32ff 	mov.w	r2, #4294967295
20002566:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:399
                return_val = -3; /* Signifies cancelled */
20002568:	f06f 0302 	mvn.w	r3, #2
2000256c:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:400
                break;
2000256e:	e00f      	b.n	20002590 <receive_packet+0xf0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:405
            }
            /* signal an error, CAN followed by not CAN is probably an
             * error on the line
             */
            *length = -1;
20002570:	683b      	ldr	r3, [r7, #0]
20002572:	f04f 32ff 	mov.w	r2, #4294967295
20002576:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:406
            return_val = -4; /* Signifies unexpected start of packet character */
20002578:	f06f 0303 	mvn.w	r3, #3
2000257c:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:407
            break;
2000257e:	e007      	b.n	20002590 <receive_packet+0xf0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:415
            * of the packet, but it's more likely that it's the user banging
            * on the terminal trying to abort a transfer. Technically, the
            * former case deserves a NAK, but for now we'll just treat this
            * as an abort case.
            */
            *length = -1;
20002580:	683b      	ldr	r3, [r7, #0]
20002582:	f04f 32ff 	mov.w	r2, #4294967295
20002586:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:416
            return_val = -4; /* Signifies unexpected start of packet character */
20002588:	f06f 0303 	mvn.w	r3, #3
2000258c:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:417
            break;
2000258e:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:420
        }

        if(0 == return_val) /* Still ok */
20002590:	68bb      	ldr	r3, [r7, #8]
20002592:	2b00      	cmp	r3, #0
20002594:	d152      	bne.n	2000263c <receive_packet+0x19c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:422
        {
            *data = (uint8_t)rx_char; /* Store first character of packet */
20002596:	69fb      	ldr	r3, [r7, #28]
20002598:	b2da      	uxtb	r2, r3
2000259a:	687b      	ldr	r3, [r7, #4]
2000259c:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:424

            for(index = 1; (index < (int32_t)(packet_size + PACKET_OVERHEAD)) && (0 == return_val); ++index)
2000259e:	2301      	movs	r3, #1
200025a0:	60fb      	str	r3, [r7, #12]
200025a2:	e014      	b.n	200025ce <receive_packet+0x12e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:426
            {
                rx_char = _getchar(PACKET_TIMEOUT);
200025a4:	2001      	movs	r0, #1
200025a6:	f7ff fed5 	bl	20002354 <_getchar>
200025aa:	61f8      	str	r0, [r7, #28]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:427
                if (rx_char < 0)
200025ac:	69fb      	ldr	r3, [r7, #28]
200025ae:	2b00      	cmp	r3, #0
200025b0:	da03      	bge.n	200025ba <receive_packet+0x11a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:429
                {
                    return_val = -1;
200025b2:	f04f 33ff 	mov.w	r3, #4294967295
200025b6:	60bb      	str	r3, [r7, #8]
200025b8:	e006      	b.n	200025c8 <receive_packet+0x128>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:433
                }
                else
                {
                    data[index] = (uint8_t)rx_char;
200025ba:	68fb      	ldr	r3, [r7, #12]
200025bc:	461a      	mov	r2, r3
200025be:	687b      	ldr	r3, [r7, #4]
200025c0:	4413      	add	r3, r2
200025c2:	69fa      	ldr	r2, [r7, #28]
200025c4:	b2d2      	uxtb	r2, r2
200025c6:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:424 (discriminator 2)
            for(index = 1; (index < (int32_t)(packet_size + PACKET_OVERHEAD)) && (0 == return_val); ++index)
200025c8:	68fb      	ldr	r3, [r7, #12]
200025ca:	3301      	adds	r3, #1
200025cc:	60fb      	str	r3, [r7, #12]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:424 (discriminator 1)
200025ce:	69bb      	ldr	r3, [r7, #24]
200025d0:	3305      	adds	r3, #5
200025d2:	461a      	mov	r2, r3
200025d4:	68fb      	ldr	r3, [r7, #12]
200025d6:	429a      	cmp	r2, r3
200025d8:	dd02      	ble.n	200025e0 <receive_packet+0x140>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:424 (discriminator 3)
200025da:	68bb      	ldr	r3, [r7, #8]
200025dc:	2b00      	cmp	r3, #0
200025de:	d0e1      	beq.n	200025a4 <receive_packet+0x104>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:441

            /* Just a sanity check on the sequence number/complement value.
             * Caller should check for in-order arrival.
             *
             */
            int y = (0 == return_val);
200025e0:	68bb      	ldr	r3, [r7, #8]
200025e2:	2b00      	cmp	r3, #0
200025e4:	bf0c      	ite	eq
200025e6:	2301      	moveq	r3, #1
200025e8:	2300      	movne	r3, #0
200025ea:	b2db      	uxtb	r3, r3
200025ec:	617b      	str	r3, [r7, #20]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:442
            uint8_t x = data[PACKET_SEQNO_INDEX];
200025ee:	687b      	ldr	r3, [r7, #4]
200025f0:	785b      	ldrb	r3, [r3, #1]
200025f2:	74fb      	strb	r3, [r7, #19]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:443
            uint8_t z = ((uint8_t)((data[PACKET_SEQNO_COMP_INDEX] ^ 0xffU) & 0xffU));
200025f4:	687b      	ldr	r3, [r7, #4]
200025f6:	3302      	adds	r3, #2
200025f8:	781b      	ldrb	r3, [r3, #0]
200025fa:	43db      	mvns	r3, r3
200025fc:	74bb      	strb	r3, [r7, #18]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:444
            if(y && (x != z))
200025fe:	697b      	ldr	r3, [r7, #20]
20002600:	2b00      	cmp	r3, #0
20002602:	d005      	beq.n	20002610 <receive_packet+0x170>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:444 (discriminator 1)
20002604:	7cfa      	ldrb	r2, [r7, #19]
20002606:	7cbb      	ldrb	r3, [r7, #18]
20002608:	429a      	cmp	r2, r3
2000260a:	d001      	beq.n	20002610 <receive_packet+0x170>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:446
            {
                return_val = 1;
2000260c:	2301      	movs	r3, #1
2000260e:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:449
            }

            if((0 == return_val) && (sf2bl_crc16(data + PACKET_HEADER, packet_size + PACKET_TRAILER) != 0))
20002610:	68bb      	ldr	r3, [r7, #8]
20002612:	2b00      	cmp	r3, #0
20002614:	d10c      	bne.n	20002630 <receive_packet+0x190>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:449 (discriminator 1)
20002616:	687b      	ldr	r3, [r7, #4]
20002618:	1cda      	adds	r2, r3, #3
2000261a:	69bb      	ldr	r3, [r7, #24]
2000261c:	3302      	adds	r3, #2
2000261e:	4619      	mov	r1, r3
20002620:	4610      	mov	r0, r2
20002622:	f7ff fe41 	bl	200022a8 <sf2bl_crc16>
20002626:	4603      	mov	r3, r0
20002628:	2b00      	cmp	r3, #0
2000262a:	d001      	beq.n	20002630 <receive_packet+0x190>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:451
            {
                return_val = 1;
2000262c:	2301      	movs	r3, #1
2000262e:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:454
            }

            if(0 == return_val) /* All ok ! */
20002630:	68bb      	ldr	r3, [r7, #8]
20002632:	2b00      	cmp	r3, #0
20002634:	d102      	bne.n	2000263c <receive_packet+0x19c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:456
            {
                *length = packet_size;
20002636:	69ba      	ldr	r2, [r7, #24]
20002638:	683b      	ldr	r3, [r7, #0]
2000263a:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:461
            }
        }
    }

    if(return_val < -1) /* returning 0 but *length == -1 or 0 so fix up return value */
2000263c:	68bb      	ldr	r3, [r7, #8]
2000263e:	f1b3 3fff 	cmp.w	r3, #4294967295
20002642:	da01      	bge.n	20002648 <receive_packet+0x1a8>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:463
    {
        return_val = 0;
20002644:	2300      	movs	r3, #0
20002646:	60bb      	str	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:466
    }

    return(return_val);
20002648:	68bb      	ldr	r3, [r7, #8]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:467
}
2000264a:	4618      	mov	r0, r3
2000264c:	3720      	adds	r7, #32
2000264e:	46bd      	mov	sp, r7
20002650:	bd80      	pop	{r7, pc}
20002652:	bf00      	nop

20002654 <ymodem_download_file_spi_flash>:
ymodem_download_file_spi_flash():
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:702
 *
 */
/* Returns the length of the file received, or 0 on error: */

uint32_t ymodem_download_file_spi_flash(uint32_t spi_flash_address,uint32_t length,spi_file_t *file_info)
{
20002654:	b580      	push	{r7, lr}
20002656:	f5ad 6d8a 	sub.w	sp, sp, #1104	; 0x450
2000265a:	af00      	add	r7, sp, #0
2000265c:	f107 030c 	add.w	r3, r7, #12
20002660:	6018      	str	r0, [r3, #0]
20002662:	f107 0308 	add.w	r3, r7, #8
20002666:	6019      	str	r1, [r3, #0]
20002668:	1d3b      	adds	r3, r7, #4
2000266a:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:706
    static uint8_t packet_data[PACKET_1K_SIZE + PACKET_OVERHEAD]; /* Declare as static as 1K is a lot to put on our stack */

    uint8_t packet_buff[PACKET_1K_SIZE];
    uint8_t * buf = (uint8_t *)packet_buff;
2000266c:	f107 0314 	add.w	r3, r7, #20
20002670:	f8c7 3420 	str.w	r3, [r7, #1056]	; 0x420
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:716
    int32_t  session_done;
    int32_t  crc_tries;
    int32_t  crc_nak;
    uint32_t packets_received;
    uint32_t errors;
    int32_t  first_try = 1;
20002674:	2301      	movs	r3, #1
20002676:	f8c7 3430 	str.w	r3, [r7, #1072]	; 0x430
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:718
    uint8_t *buf_ptr;
    uint32_t size = 0;
2000267a:	2300      	movs	r3, #0
2000267c:	f8c7 342c 	str.w	r3, [r7, #1068]	; 0x42c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:719
    uint32_t return_val = 0; /* Default to abnormal exit */
20002680:	2300      	movs	r3, #0
20002682:	f8c7 3428 	str.w	r3, [r7, #1064]	; 0x428
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:725
    uint32_t temp;
    int32_t  rx_status;
    //uint32_t spi_flash_address;

    //g_file_name[0] = 0;
    file_info->file_name[0] = 0;
20002686:	1d3b      	adds	r3, r7, #4
20002688:	681b      	ldr	r3, [r3, #0]
2000268a:	2200      	movs	r2, #0
2000268c:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:726
    session_done = 0;
2000268e:	2300      	movs	r3, #0
20002690:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:727
    errors       = 0;
20002694:	2300      	movs	r3, #0
20002696:	f8c7 3434 	str.w	r3, [r7, #1076]	; 0x434
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:729

    while(0 == session_done)
2000269a:	e1c8      	b.n	20002a2e <ymodem_download_file_spi_flash+0x3da>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:731
    {
        crc_tries = 1;
2000269c:	2301      	movs	r3, #1
2000269e:	f8c7 341c 	str.w	r3, [r7, #1052]	; 0x41c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:732
        crc_nak   = 1;
200026a2:	2301      	movs	r3, #1
200026a4:	f8c7 343c 	str.w	r3, [r7, #1084]	; 0x43c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:734

        if(!first_try)
200026a8:	f8d7 3430 	ldr.w	r3, [r7, #1072]	; 0x430
200026ac:	2b00      	cmp	r3, #0
200026ae:	d102      	bne.n	200026b6 <ymodem_download_file_spi_flash+0x62>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:736
        {
            _putchar(CRC);
200026b0:	2043      	movs	r0, #67	; 0x43
200026b2:	f7ff feb1 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:739
        }

        first_try        = 0;
200026b6:	2300      	movs	r3, #0
200026b8:	f8c7 3430 	str.w	r3, [r7, #1072]	; 0x430
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:740
        packets_received = 0;
200026bc:	2300      	movs	r3, #0
200026be:	f8c7 3438 	str.w	r3, [r7, #1080]	; 0x438
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:741
        file_done        = 0;
200026c2:	2300      	movs	r3, #0
200026c4:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:742
        buf_ptr          = buf;
200026c8:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
200026cc:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:745
        //spi_flash_address  = g_spi_flash_start_address; // this address need to be set outside for where in spi flash location
        //spi_flash_address = file_info->file_addr;
        while(0 == file_done)
200026d0:	e1a8      	b.n	20002a24 <ymodem_download_file_spi_flash+0x3d0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:747
        {
            rx_status = receive_packet(packet_data, &packet_length);
200026d2:	f107 0310 	add.w	r3, r7, #16
200026d6:	4619      	mov	r1, r3
200026d8:	48be      	ldr	r0, [pc, #760]	; (200029d4 <ymodem_download_file_spi_flash+0x380>)
200026da:	f7ff fee1 	bl	200024a0 <receive_packet>
200026de:	f8c7 0414 	str.w	r0, [r7, #1044]	; 0x414
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:748
            switch(rx_status)
200026e2:	f8d7 3414 	ldr.w	r3, [r7, #1044]	; 0x414
200026e6:	2b00      	cmp	r3, #0
200026e8:	f040 8178 	bne.w	200029dc <ymodem_download_file_spi_flash+0x388>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:751
            {
            case 0: /* Success */
                errors = 0;
200026ec:	2300      	movs	r3, #0
200026ee:	f8c7 3434 	str.w	r3, [r7, #1076]	; 0x434
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:752
                switch(packet_length)
200026f2:	f107 0310 	add.w	r3, r7, #16
200026f6:	681b      	ldr	r3, [r3, #0]
200026f8:	f1b3 3fff 	cmp.w	r3, #4294967295
200026fc:	d002      	beq.n	20002704 <ymodem_download_file_spi_flash+0xb0>
200026fe:	2b00      	cmp	r3, #0
20002700:	d00a      	beq.n	20002718 <ymodem_download_file_spi_flash+0xc4>
20002702:	e013      	b.n	2000272c <ymodem_download_file_spi_flash+0xd8>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:755
                {
                case -1:  /* abort */
                    _putchar(ACK);
20002704:	2006      	movs	r0, #6
20002706:	f7ff fe87 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:758

                    /* Terminate transfer immediately */
                    file_done    = 1;
2000270a:	2301      	movs	r3, #1
2000270c:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:759
                    session_done = 1;
20002710:	2301      	movs	r3, #1
20002712:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:760
                    break;
20002716:	e15b      	b.n	200029d0 <ymodem_download_file_spi_flash+0x37c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:763

                case 0:   /* end of transmission */
                    _putchar(ACK);
20002718:	2006      	movs	r0, #6
2000271a:	f7ff fe7d 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:767
                    /* Should add some sort of sanity check on the number of
                     * packets received and the advertised file length.
                     */
                    file_done = 1;
2000271e:	2301      	movs	r3, #1
20002720:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:768
                    return_val = 1; /* Signal normal exit */
20002724:	2301      	movs	r3, #1
20002726:	f8c7 3428 	str.w	r3, [r7, #1064]	; 0x428
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:769
                    break;
2000272a:	e151      	b.n	200029d0 <ymodem_download_file_spi_flash+0x37c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:772

                default:  /* normal packet */
                    if((packet_data[PACKET_SEQNO_INDEX] & 0xff) != (packets_received & 0xff))
2000272c:	4ba9      	ldr	r3, [pc, #676]	; (200029d4 <ymodem_download_file_spi_flash+0x380>)
2000272e:	785b      	ldrb	r3, [r3, #1]
20002730:	461a      	mov	r2, r3
20002732:	f8d7 3438 	ldr.w	r3, [r7, #1080]	; 0x438
20002736:	b2db      	uxtb	r3, r3
20002738:	429a      	cmp	r2, r3
2000273a:	d00f      	beq.n	2000275c <ymodem_download_file_spi_flash+0x108>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:780
                         * Hmmm, Tera Term 4.86 doesn't seem to like the ACK+C
                         * response and resends the header packet. Responding
                         * with just C seems to work. Only try this if we get a
                         * repeat of packet 0...
                         */
                        if((1 == packets_received) && (0 == (packet_data[PACKET_SEQNO_INDEX] & 0xff)))
2000273c:	f8d7 3438 	ldr.w	r3, [r7, #1080]	; 0x438
20002740:	2b01      	cmp	r3, #1
20002742:	d107      	bne.n	20002754 <ymodem_download_file_spi_flash+0x100>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:780 (discriminator 1)
20002744:	4ba3      	ldr	r3, [pc, #652]	; (200029d4 <ymodem_download_file_spi_flash+0x380>)
20002746:	785b      	ldrb	r3, [r3, #1]
20002748:	2b00      	cmp	r3, #0
2000274a:	d103      	bne.n	20002754 <ymodem_download_file_spi_flash+0x100>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:782
                        {
                        _putchar(CRC); /* Repeated packet 0 error */
2000274c:	2043      	movs	r0, #67	; 0x43
2000274e:	f7ff fe63 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:931
                            }
                        }

                        ++packets_received;
                    }  /* sequence number ok */
                    break;
20002752:	e13c      	b.n	200029ce <ymodem_download_file_spi_flash+0x37a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:786
                        _putchar(NAK); /* Normal out of sequence packet error */
20002754:	2015      	movs	r0, #21
20002756:	f7ff fe5f 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:931
                    break;
2000275a:	e138      	b.n	200029ce <ymodem_download_file_spi_flash+0x37a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:791
                        if(0 == packets_received)
2000275c:	f8d7 3438 	ldr.w	r3, [r7, #1080]	; 0x438
20002760:	2b00      	cmp	r3, #0
20002762:	f040 80cc 	bne.w	200028fe <ymodem_download_file_spi_flash+0x2aa>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:798
                            temp = 0;
20002766:	2300      	movs	r3, #0
20002768:	f8c7 3424 	str.w	r3, [r7, #1060]	; 0x424
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:799
                            for(index = PACKET_HEADER; index < PACKET_HEADER + 4; index++)
2000276c:	2303      	movs	r3, #3
2000276e:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
20002772:	e00f      	b.n	20002794 <ymodem_download_file_spi_flash+0x140>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:801 (discriminator 3)
                                temp += (uint32_t)packet_data[index];
20002774:	4a97      	ldr	r2, [pc, #604]	; (200029d4 <ymodem_download_file_spi_flash+0x380>)
20002776:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
2000277a:	4413      	add	r3, r2
2000277c:	781b      	ldrb	r3, [r3, #0]
2000277e:	461a      	mov	r2, r3
20002780:	f8d7 3424 	ldr.w	r3, [r7, #1060]	; 0x424
20002784:	4413      	add	r3, r2
20002786:	f8c7 3424 	str.w	r3, [r7, #1060]	; 0x424
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:799 (discriminator 3)
                            for(index = PACKET_HEADER; index < PACKET_HEADER + 4; index++)
2000278a:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
2000278e:	3301      	adds	r3, #1
20002790:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:799 (discriminator 1)
20002794:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
20002798:	2b06      	cmp	r3, #6
2000279a:	ddeb      	ble.n	20002774 <ymodem_download_file_spi_flash+0x120>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:804
                            if(0 != temp) /* looks like there is something there... */
2000279c:	f8d7 3424 	ldr.w	r3, [r7, #1060]	; 0x424
200027a0:	2b00      	cmp	r3, #0
200027a2:	f000 80a2 	beq.w	200028ea <ymodem_download_file_spi_flash+0x296>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:806
                                file_ptr = packet_data + PACKET_HEADER;
200027a6:	4b8c      	ldr	r3, [pc, #560]	; (200029d8 <ymodem_download_file_spi_flash+0x384>)
200027a8:	f8c7 344c 	str.w	r3, [r7, #1100]	; 0x44c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:808
                                for(index = 0; *file_ptr && (index < FILE_NAME_LENGTH);)
200027ac:	2300      	movs	r3, #0
200027ae:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
200027b2:	e00d      	b.n	200027d0 <ymodem_download_file_spi_flash+0x17c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:811
                                    file_info->file_name[index++] = *file_ptr++;
200027b4:	f8d7 244c 	ldr.w	r2, [r7, #1100]	; 0x44c
200027b8:	1c53      	adds	r3, r2, #1
200027ba:	f8c7 344c 	str.w	r3, [r7, #1100]	; 0x44c
200027be:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
200027c2:	1c59      	adds	r1, r3, #1
200027c4:	f8c7 1448 	str.w	r1, [r7, #1096]	; 0x448
200027c8:	7811      	ldrb	r1, [r2, #0]
200027ca:	1d3a      	adds	r2, r7, #4
200027cc:	6812      	ldr	r2, [r2, #0]
200027ce:	54d1      	strb	r1, [r2, r3]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:808 (discriminator 1)
                                for(index = 0; *file_ptr && (index < FILE_NAME_LENGTH);)
200027d0:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
200027d4:	781b      	ldrb	r3, [r3, #0]
200027d6:	2b00      	cmp	r3, #0
200027d8:	d003      	beq.n	200027e2 <ymodem_download_file_spi_flash+0x18e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:808 (discriminator 2)
200027da:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
200027de:	2b3f      	cmp	r3, #63	; 0x3f
200027e0:	dde8      	ble.n	200027b4 <ymodem_download_file_spi_flash+0x160>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:815
                                file_info->size[index++] = '\0';
200027e2:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
200027e6:	1c5a      	adds	r2, r3, #1
200027e8:	f8c7 2448 	str.w	r2, [r7, #1096]	; 0x448
200027ec:	1d3a      	adds	r2, r7, #4
200027ee:	6812      	ldr	r2, [r2, #0]
200027f0:	4413      	add	r3, r2
200027f2:	2200      	movs	r2, #0
200027f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:817
                                while(*file_ptr != 0) /* Search for nul terminator if not there already */
200027f8:	e004      	b.n	20002804 <ymodem_download_file_spi_flash+0x1b0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:819
                                    ++file_ptr;
200027fa:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
200027fe:	3301      	adds	r3, #1
20002800:	f8c7 344c 	str.w	r3, [r7, #1100]	; 0x44c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:817
                                while(*file_ptr != 0) /* Search for nul terminator if not there already */
20002804:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
20002808:	781b      	ldrb	r3, [r3, #0]
2000280a:	2b00      	cmp	r3, #0
2000280c:	d1f5      	bne.n	200027fa <ymodem_download_file_spi_flash+0x1a6>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:822
                                ++file_ptr; /* Step over nul */
2000280e:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
20002812:	3301      	adds	r3, #1
20002814:	f8c7 344c 	str.w	r3, [r7, #1100]	; 0x44c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:824
                                for(index = 0; *file_ptr && (*file_ptr != ' ') && (index < FILE_SIZE_LENGTH);)
20002818:	2300      	movs	r3, #0
2000281a:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
2000281e:	e010      	b.n	20002842 <ymodem_download_file_spi_flash+0x1ee>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:827
                                    file_info->size[index++] = *file_ptr++;
20002820:	f8d7 244c 	ldr.w	r2, [r7, #1100]	; 0x44c
20002824:	1c53      	adds	r3, r2, #1
20002826:	f8c7 344c 	str.w	r3, [r7, #1100]	; 0x44c
2000282a:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
2000282e:	1c59      	adds	r1, r3, #1
20002830:	f8c7 1448 	str.w	r1, [r7, #1096]	; 0x448
20002834:	7811      	ldrb	r1, [r2, #0]
20002836:	1d3a      	adds	r2, r7, #4
20002838:	6812      	ldr	r2, [r2, #0]
2000283a:	4413      	add	r3, r2
2000283c:	460a      	mov	r2, r1
2000283e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:824 (discriminator 1)
                                for(index = 0; *file_ptr && (*file_ptr != ' ') && (index < FILE_SIZE_LENGTH);)
20002842:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
20002846:	781b      	ldrb	r3, [r3, #0]
20002848:	2b00      	cmp	r3, #0
2000284a:	d008      	beq.n	2000285e <ymodem_download_file_spi_flash+0x20a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:824 (discriminator 2)
2000284c:	f8d7 344c 	ldr.w	r3, [r7, #1100]	; 0x44c
20002850:	781b      	ldrb	r3, [r3, #0]
20002852:	2b20      	cmp	r3, #32
20002854:	d003      	beq.n	2000285e <ymodem_download_file_spi_flash+0x20a>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:824 (discriminator 3)
20002856:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
2000285a:	2b0f      	cmp	r3, #15
2000285c:	dde0      	ble.n	20002820 <ymodem_download_file_spi_flash+0x1cc>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:831
                                file_info->size[index++] = '\0';
2000285e:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
20002862:	1c5a      	adds	r2, r3, #1
20002864:	f8c7 2448 	str.w	r2, [r7, #1096]	; 0x448
20002868:	1d3a      	adds	r2, r7, #4
2000286a:	6812      	ldr	r2, [r2, #0]
2000286c:	4413      	add	r3, r2
2000286e:	2200      	movs	r2, #0
20002870:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:836
                              size = str_to_u32(file_info->size);
20002874:	1d3b      	adds	r3, r7, #4
20002876:	681b      	ldr	r3, [r3, #0]
20002878:	3340      	adds	r3, #64	; 0x40
2000287a:	4618      	mov	r0, r3
2000287c:	f7ff fde0 	bl	20002440 <str_to_u32>
20002880:	f8c7 042c 	str.w	r0, [r7, #1068]	; 0x42c
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:838
                                file_info->file_size = size;
20002884:	1d3b      	adds	r3, r7, #4
20002886:	681b      	ldr	r3, [r3, #0]
20002888:	f8d7 242c 	ldr.w	r2, [r7, #1068]	; 0x42c
2000288c:	651a      	str	r2, [r3, #80]	; 0x50
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:840
                                file_info->file_addr = spi_flash_address;
2000288e:	1d3b      	adds	r3, r7, #4
20002890:	681b      	ldr	r3, [r3, #0]
20002892:	f107 020c 	add.w	r2, r7, #12
20002896:	6812      	ldr	r2, [r2, #0]
20002898:	655a      	str	r2, [r3, #84]	; 0x54
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:843
                                if(size > length)
2000289a:	f107 0308 	add.w	r3, r7, #8
2000289e:	f8d7 242c 	ldr.w	r2, [r7, #1068]	; 0x42c
200028a2:	681b      	ldr	r3, [r3, #0]
200028a4:	429a      	cmp	r2, r3
200028a6:	d90f      	bls.n	200028c8 <ymodem_download_file_spi_flash+0x274>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:845
                                    _putchar(CAN);
200028a8:	2018      	movs	r0, #24
200028aa:	f7ff fdb5 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:846
                                    _putchar(CAN);
200028ae:	2018      	movs	r0, #24
200028b0:	f7ff fdb2 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:847
                                    _sleep(1);
200028b4:	2001      	movs	r0, #1
200028b6:	f7ff fd2f 	bl	20002318 <_sleep>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:850
                                    file_done    = 1;
200028ba:	2301      	movs	r3, #1
200028bc:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:851
                                    session_done = 1;
200028c0:	2301      	movs	r3, #1
200028c2:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
200028c6:	e07d      	b.n	200029c4 <ymodem_download_file_spi_flash+0x370>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:855
                                    _putchar(ACK);
200028c8:	2006      	movs	r0, #6
200028ca:	f7ff fda5 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:856
                                    _putchar(crc_nak ? CRC : NAK);
200028ce:	f8d7 343c 	ldr.w	r3, [r7, #1084]	; 0x43c
200028d2:	2b00      	cmp	r3, #0
200028d4:	d001      	beq.n	200028da <ymodem_download_file_spi_flash+0x286>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:856 (discriminator 1)
200028d6:	2343      	movs	r3, #67	; 0x43
200028d8:	e000      	b.n	200028dc <ymodem_download_file_spi_flash+0x288>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:856 (discriminator 2)
200028da:	2315      	movs	r3, #21
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:856 (discriminator 4)
200028dc:	4618      	mov	r0, r3
200028de:	f7ff fd9b 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:857 (discriminator 4)
                                    crc_nak = 0;
200028e2:	2300      	movs	r3, #0
200028e4:	f8c7 343c 	str.w	r3, [r7, #1084]	; 0x43c
200028e8:	e06c      	b.n	200029c4 <ymodem_download_file_spi_flash+0x370>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:862
                                _putchar(ACK);
200028ea:	2006      	movs	r0, #6
200028ec:	f7ff fd94 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:863
                                file_done = 1;
200028f0:	2301      	movs	r3, #1
200028f2:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:864
                                session_done = 1;
200028f6:	2301      	movs	r3, #1
200028f8:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:865
                                break;
200028fc:	e068      	b.n	200029d0 <ymodem_download_file_spi_flash+0x37c>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:873
                            if((buf_ptr + packet_length) - buf > length)
200028fe:	f107 0310 	add.w	r3, r7, #16
20002902:	681b      	ldr	r3, [r3, #0]
20002904:	461a      	mov	r2, r3
20002906:	f8d7 3418 	ldr.w	r3, [r7, #1048]	; 0x418
2000290a:	441a      	add	r2, r3
2000290c:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
20002910:	1ad3      	subs	r3, r2, r3
20002912:	461a      	mov	r2, r3
20002914:	f107 0308 	add.w	r3, r7, #8
20002918:	681b      	ldr	r3, [r3, #0]
2000291a:	4293      	cmp	r3, r2
2000291c:	d20f      	bcs.n	2000293e <ymodem_download_file_spi_flash+0x2ea>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:875
                                _putchar(CAN);
2000291e:	2018      	movs	r0, #24
20002920:	f7ff fd7a 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:876
                                _putchar(CAN);
20002924:	2018      	movs	r0, #24
20002926:	f7ff fd77 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:877
                                _sleep(1);
2000292a:	2001      	movs	r0, #1
2000292c:	f7ff fcf4 	bl	20002318 <_sleep>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:880
                                file_done    = 1;
20002930:	2301      	movs	r3, #1
20002932:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:881
                                session_done = 1;
20002936:	2301      	movs	r3, #1
20002938:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
2000293c:	e042      	b.n	200029c4 <ymodem_download_file_spi_flash+0x370>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:885
                                for (index=0; index < packet_length; index++)
2000293e:	2300      	movs	r3, #0
20002940:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
20002944:	e00f      	b.n	20002966 <ymodem_download_file_spi_flash+0x312>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:887 (discriminator 3)
                                    buf_ptr[index] = packet_data[PACKET_HEADER + index];
20002946:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
2000294a:	1cda      	adds	r2, r3, #3
2000294c:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
20002950:	f8d7 1418 	ldr.w	r1, [r7, #1048]	; 0x418
20002954:	440b      	add	r3, r1
20002956:	491f      	ldr	r1, [pc, #124]	; (200029d4 <ymodem_download_file_spi_flash+0x380>)
20002958:	5c8a      	ldrb	r2, [r1, r2]
2000295a:	701a      	strb	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:885 (discriminator 3)
                                for (index=0; index < packet_length; index++)
2000295c:	f8d7 3448 	ldr.w	r3, [r7, #1096]	; 0x448
20002960:	3301      	adds	r3, #1
20002962:	f8c7 3448 	str.w	r3, [r7, #1096]	; 0x448
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:885 (discriminator 1)
20002966:	f107 0310 	add.w	r3, r7, #16
2000296a:	681b      	ldr	r3, [r3, #0]
2000296c:	f8d7 2448 	ldr.w	r2, [r7, #1096]	; 0x448
20002970:	429a      	cmp	r2, r3
20002972:	dbe8      	blt.n	20002946 <ymodem_download_file_spi_flash+0x2f2>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:905
                                if(0 == (spi_flash_address % FLASH_SECTOR_SIZE))
20002974:	f107 030c 	add.w	r3, r7, #12
20002978:	681b      	ldr	r3, [r3, #0]
2000297a:	f3c3 030b 	ubfx	r3, r3, #0, #12
2000297e:	2b00      	cmp	r3, #0
20002980:	d104      	bne.n	2000298c <ymodem_download_file_spi_flash+0x338>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:909
                                    spi_flash_erase_4k_block(spi_flash_address);
20002982:	f107 030c 	add.w	r3, r7, #12
20002986:	6818      	ldr	r0, [r3, #0]
20002988:	f7fe ffd8 	bl	2000193c <spi_flash_erase_4k_block>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:914
                                delay_ms(50);
2000298c:	2032      	movs	r0, #50	; 0x32
2000298e:	f7ff fab5 	bl	20001efc <delay_ms>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:917
                                  spi_flash_write(spi_flash_address, buf_ptr, packet_length);
20002992:	f107 0310 	add.w	r3, r7, #16
20002996:	681b      	ldr	r3, [r3, #0]
20002998:	461a      	mov	r2, r3
2000299a:	f107 030c 	add.w	r3, r7, #12
2000299e:	f8d7 1418 	ldr.w	r1, [r7, #1048]	; 0x418
200029a2:	6818      	ldr	r0, [r3, #0]
200029a4:	f7fe ff40 	bl	20001828 <spi_flash_write>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:923
                                spi_flash_address += packet_length;
200029a8:	f107 0310 	add.w	r3, r7, #16
200029ac:	681b      	ldr	r3, [r3, #0]
200029ae:	4619      	mov	r1, r3
200029b0:	f107 030c 	add.w	r3, r7, #12
200029b4:	f107 020c 	add.w	r2, r7, #12
200029b8:	6812      	ldr	r2, [r2, #0]
200029ba:	440a      	add	r2, r1
200029bc:	601a      	str	r2, [r3, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:925
                                _putchar(ACK);
200029be:	2006      	movs	r0, #6
200029c0:	f7ff fd2a 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:929
                        ++packets_received;
200029c4:	f8d7 3438 	ldr.w	r3, [r7, #1080]	; 0x438
200029c8:	3301      	adds	r3, #1
200029ca:	f8c7 3438 	str.w	r3, [r7, #1080]	; 0x438
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:931
                    break;
200029ce:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:933
                }
                break;
200029d0:	e028      	b.n	20002a24 <ymodem_download_file_spi_flash+0x3d0>
200029d2:	bf00      	nop
200029d4:	20009c4c 	.word	0x20009c4c
200029d8:	20009c4f 	.word	0x20009c4f
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:936

            default: /* timeout or error */
                if(packets_received != 0)
200029dc:	f8d7 3438 	ldr.w	r3, [r7, #1080]	; 0x438
200029e0:	2b00      	cmp	r3, #0
200029e2:	d017      	beq.n	20002a14 <ymodem_download_file_spi_flash+0x3c0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:938
                {
                    if(++errors >= MAX_ERRORS)
200029e4:	f8d7 3434 	ldr.w	r3, [r7, #1076]	; 0x434
200029e8:	3301      	adds	r3, #1
200029ea:	f8c7 3434 	str.w	r3, [r7, #1076]	; 0x434
200029ee:	f8d7 3434 	ldr.w	r3, [r7, #1076]	; 0x434
200029f2:	2b04      	cmp	r3, #4
200029f4:	d90e      	bls.n	20002a14 <ymodem_download_file_spi_flash+0x3c0>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:940
                    {
                        _putchar(CAN);
200029f6:	2018      	movs	r0, #24
200029f8:	f7ff fd0e 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:941
                        _putchar(CAN);
200029fc:	2018      	movs	r0, #24
200029fe:	f7ff fd0b 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:942
                        _sleep(1);
20002a02:	2001      	movs	r0, #1
20002a04:	f7ff fc88 	bl	20002318 <_sleep>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:945

                        /* Terminate transfer immediately */
                        file_done    = 1;
20002a08:	2301      	movs	r3, #1
20002a0a:	f8c7 3444 	str.w	r3, [r7, #1092]	; 0x444
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:946
                        session_done = 1;
20002a0e:	2301      	movs	r3, #1
20002a10:	f8c7 3440 	str.w	r3, [r7, #1088]	; 0x440
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:950
                    }
                }

                if(0 == session_done)
20002a14:	f8d7 3440 	ldr.w	r3, [r7, #1088]	; 0x440
20002a18:	2b00      	cmp	r3, #0
20002a1a:	d102      	bne.n	20002a22 <ymodem_download_file_spi_flash+0x3ce>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:952
                {
                    _putchar(CRC);
20002a1c:	2043      	movs	r0, #67	; 0x43
20002a1e:	f7ff fcfb 	bl	20002418 <_putchar>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:954
                }
                break;
20002a22:	bf00      	nop
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:745
        while(0 == file_done)
20002a24:	f8d7 3444 	ldr.w	r3, [r7, #1092]	; 0x444
20002a28:	2b00      	cmp	r3, #0
20002a2a:	f43f ae52 	beq.w	200026d2 <ymodem_download_file_spi_flash+0x7e>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:729
    while(0 == session_done)
20002a2e:	f8d7 3440 	ldr.w	r3, [r7, #1088]	; 0x440
20002a32:	2b00      	cmp	r3, #0
20002a34:	f43f ae32 	beq.w	2000269c <ymodem_download_file_spi_flash+0x48>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:960
            }
        }  /* receive packets */
    }  /* receive files */

   // g_errors += errors;  // add the recieed errors to the global error variable
    return (return_val == 1 ? size : 0);
20002a38:	f8d7 3428 	ldr.w	r3, [r7, #1064]	; 0x428
20002a3c:	2b01      	cmp	r3, #1
20002a3e:	d102      	bne.n	20002a46 <ymodem_download_file_spi_flash+0x3f2>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:960 (discriminator 1)
20002a40:	f8d7 342c 	ldr.w	r3, [r7, #1068]	; 0x42c
20002a44:	e000      	b.n	20002a48 <ymodem_download_file_spi_flash+0x3f4>
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:960 (discriminator 2)
20002a46:	2300      	movs	r3, #0
C:\jijeesh\github\m2s-fabric-ip/middleware/ymodem/ymodem.c:961
}
20002a48:	4618      	mov	r0, r3
20002a4a:	f507 678a 	add.w	r7, r7, #1104	; 0x450
20002a4e:	46bd      	mov	sp, r7
20002a50:	bd80      	pop	{r7, pc}
20002a52:	bf00      	nop
	...

20002a60 <bx_user_code_ddr>:
bx_user_code_ddr():
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:59
 *      Return from the function by branching to the Link Register. This causes
 *      to branch to the application's startup code/Reset Handler.
 */
    .align 4
bx_user_code_ddr:
    ldr r0,=VECTOR_TABLE_ADDR   /* Step 1. */
20002a60:	f04f 4020 	mov.w	r0, #2684354560	; 0xa0000000
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:60
    ldr r1,[r0,#0x0]            /* Step 2. */
20002a64:	6801      	ldr	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:61
    ldr r2,=SCB_VTOR_ADDRESS    /* Step 3. */
20002a66:	4a05      	ldr	r2, [pc, #20]	; (20002a7c <bx_user_code_ddr+0x1c>)
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:62
    str	r0, [r2]                /* Step 4. */
20002a68:	6010      	str	r0, [r2, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:63
    ldr lr,[r0,#0x4]            /* Step 5. */
20002a6a:	f8d0 e004 	ldr.w	lr, [r0, #4]
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:64
    msr msp,r1                  /* Step 6. */
20002a6e:	f381 8808 	msr	MSP, r1
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:65
    ldr r1,=DDR_CR_REG          /* Step 1. */
20002a72:	4903      	ldr	r1, [pc, #12]	; (20002a80 <bx_user_code_ddr+0x20>)
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:66
    ldr r0,=0x01
20002a74:	f04f 0001 	mov.w	r0, #1
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:67
    str r0,[r1]                 /* Remap the memory */
20002a78:	6008      	str	r0, [r1, #0]
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:68
    bx lr                       /* Step 7. */
20002a7a:	4770      	bx	lr
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:61
    ldr r2,=SCB_VTOR_ADDRESS    /* Step 3. */
20002a7c:	e000ed08 	.word	0xe000ed08
C:\jijeesh\github\m2s-fabric-ip/middleware/boot/bx_user_code_ddr.S:65
    ldr r1,=DDR_CR_REG          /* Step 1. */
20002a80:	40038008 	.word	0x40038008

20002a84 <HW_set_32bit_reg>:
HW_set_32bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:41
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint32_t value
 */
HW_set_32bit_reg:
    STR R1, [R0]
20002a84:	6001      	str	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:42
    BX LR
20002a86:	4770      	bx	lr

20002a88 <HW_get_32bit_reg>:
HW_get_32bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:48

/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */      
HW_get_32bit_reg:
    LDR R0, [R0]
20002a88:	6800      	ldr	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:49
    BX LR
20002a8a:	4770      	bx	lr

20002a8c <HW_set_32bit_reg_field>:
HW_set_32bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:58
 * R1:   int_fast8_t shift
 * R2:   uint32_t mask
 * R3:   uint32_t value
 */
HW_set_32bit_reg_field:
    PUSH {R1,R2,R3,LR}
20002a8c:	b50e      	push	{r1, r2, r3, lr}
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:59
    LSL.W R3, R3, R1
20002a8e:	fa03 f301 	lsl.w	r3, r3, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:60
    AND.W R3, R3, R2
20002a92:	ea03 0302 	and.w	r3, r3, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:61
    LDR R1, [R0]
20002a96:	6801      	ldr	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:62
    MVN.W R2, R2
20002a98:	ea6f 0202 	mvn.w	r2, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:63
    AND.W R1, R1, R2
20002a9c:	ea01 0102 	and.w	r1, r1, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:64
    ORR.W R1, R1, R3
20002aa0:	ea41 0103 	orr.w	r1, r1, r3
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:65
    STR R1, [R0]
20002aa4:	6001      	str	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:66
    POP {R1,R2,R3,PC}
20002aa6:	bd0e      	pop	{r1, r2, r3, pc}

20002aa8 <HW_get_32bit_reg_field>:
HW_get_32bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:74
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint32_t mask
 */
HW_get_32bit_reg_field:
    LDR R0, [R0]
20002aa8:	6800      	ldr	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:75
    AND.W R0, R0, R2
20002aaa:	ea00 0002 	and.w	r0, r0, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:76
    LSR.W R0, R0, R1
20002aae:	fa20 f001 	lsr.w	r0, r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:77
    BX LR
20002ab2:	4770      	bx	lr

20002ab4 <HW_set_16bit_reg>:
HW_set_16bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:84
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint_fast16_t value
 */
HW_set_16bit_reg:
    STRH R1, [R0]
20002ab4:	8001      	strh	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:85
    BX LR
20002ab6:	4770      	bx	lr

20002ab8 <HW_get_16bit_reg>:
HW_get_16bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:91
        
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */
HW_get_16bit_reg:
    LDRH R0, [R0]
20002ab8:	8800      	ldrh	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:92
    BX LR
20002aba:	4770      	bx	lr

20002abc <HW_set_16bit_reg_field>:
HW_set_16bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:101
 * R1:   int_fast8_t shift
 * R2:   uint_fast16_t mask
 * R3:   uint_fast16_t value
 */
HW_set_16bit_reg_field:
    PUSH {R1,R2,R3,LR}
20002abc:	b50e      	push	{r1, r2, r3, lr}
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:102
    LSL.W R3, R3, R1
20002abe:	fa03 f301 	lsl.w	r3, r3, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:103
    AND.W R3, R3, R2
20002ac2:	ea03 0302 	and.w	r3, r3, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:104
    LDRH R1, [R0]
20002ac6:	8801      	ldrh	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:105
    MVN.W R2, R2
20002ac8:	ea6f 0202 	mvn.w	r2, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:106
    AND.W R1, R1, R2
20002acc:	ea01 0102 	and.w	r1, r1, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:107
    ORR.W R1, R1, R3
20002ad0:	ea41 0103 	orr.w	r1, r1, r3
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:108
    STRH R1, [R0]
20002ad4:	8001      	strh	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:109
    POP {R1,R2,R3,PC}
20002ad6:	bd0e      	pop	{r1, r2, r3, pc}

20002ad8 <HW_get_16bit_reg_field>:
HW_get_16bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:117
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint_fast16_t mask
 */
HW_get_16bit_reg_field:
    LDRH R0, [R0]
20002ad8:	8800      	ldrh	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:118
    AND.W R0, R0, R2
20002ada:	ea00 0002 	and.w	r0, r0, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:119
    LSR.W R0, R0, R1
20002ade:	fa20 f001 	lsr.w	r0, r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:120
    BX LR
20002ae2:	4770      	bx	lr

20002ae4 <HW_set_8bit_reg>:
HW_set_8bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:127
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint_fast8_t value
 */
HW_set_8bit_reg:
    STRB R1, [R0]
20002ae4:	7001      	strb	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:128
    BX LR
20002ae6:	4770      	bx	lr

20002ae8 <HW_get_8bit_reg>:
HW_get_8bit_reg():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:134
        
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */
HW_get_8bit_reg:
    LDRB R0, [R0]
20002ae8:	7800      	ldrb	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:135
    BX LR
20002aea:	4770      	bx	lr

20002aec <HW_set_8bit_reg_field>:
HW_set_8bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:144
 * R1:   int_fast8_t shift
 * R2:   uint_fast8_t mask
 * R3:   uint_fast8_t value
 */
HW_set_8bit_reg_field:
    PUSH {R1,R2,R3,LR}
20002aec:	b50e      	push	{r1, r2, r3, lr}
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:145
    LSL.W R3, R3, R1
20002aee:	fa03 f301 	lsl.w	r3, r3, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:146
    AND.W R3, R3, R2
20002af2:	ea03 0302 	and.w	r3, r3, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:147
    LDRB R1, [R0]
20002af6:	7801      	ldrb	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:148
    MVN.W R2, R2
20002af8:	ea6f 0202 	mvn.w	r2, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:149
    AND.W R1, R1, R2
20002afc:	ea01 0102 	and.w	r1, r1, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:150
    ORR.W R1, R1, R3
20002b00:	ea41 0103 	orr.w	r1, r1, r3
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:151
    STRB R1, [R0]
20002b04:	7001      	strb	r1, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:152
    POP {R1,R2,R3,PC}
20002b06:	bd0e      	pop	{r1, r2, r3, pc}

20002b08 <HW_get_8bit_reg_field>:
HW_get_8bit_reg_field():
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:160
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint_fast8_t mask
 */
HW_get_8bit_reg_field:
    LDRB R0, [R0]
20002b08:	7800      	ldrb	r0, [r0, #0]
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:161
    AND.W R0, R0, R2
20002b0a:	ea00 0002 	and.w	r0, r0, r2
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:162
    LSR.W R0, R0, R1
20002b0e:	fa20 f001 	lsr.w	r0, r0, r1
C:\jijeesh\github\m2s-fabric-ip/platform/hal/CortexM3/GNU/hw_reg_access.S:163
    BX LR
20002b12:	4770      	bx	lr

20002b14 <__aeabi_drsub>:
__aeabi_drsub():
20002b14:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
20002b18:	e002      	b.n	20002b20 <__adddf3>
20002b1a:	bf00      	nop

20002b1c <__aeabi_dsub>:
__subdf3():
20002b1c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

20002b20 <__adddf3>:
__aeabi_dadd():
20002b20:	b530      	push	{r4, r5, lr}
20002b22:	ea4f 0441 	mov.w	r4, r1, lsl #1
20002b26:	ea4f 0543 	mov.w	r5, r3, lsl #1
20002b2a:	ea94 0f05 	teq	r4, r5
20002b2e:	bf08      	it	eq
20002b30:	ea90 0f02 	teqeq	r0, r2
20002b34:	bf1f      	itttt	ne
20002b36:	ea54 0c00 	orrsne.w	ip, r4, r0
20002b3a:	ea55 0c02 	orrsne.w	ip, r5, r2
20002b3e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
20002b42:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
20002b46:	f000 80e2 	beq.w	20002d0e <__adddf3+0x1ee>
20002b4a:	ea4f 5454 	mov.w	r4, r4, lsr #21
20002b4e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
20002b52:	bfb8      	it	lt
20002b54:	426d      	neglt	r5, r5
20002b56:	dd0c      	ble.n	20002b72 <__adddf3+0x52>
20002b58:	442c      	add	r4, r5
20002b5a:	ea80 0202 	eor.w	r2, r0, r2
20002b5e:	ea81 0303 	eor.w	r3, r1, r3
20002b62:	ea82 0000 	eor.w	r0, r2, r0
20002b66:	ea83 0101 	eor.w	r1, r3, r1
20002b6a:	ea80 0202 	eor.w	r2, r0, r2
20002b6e:	ea81 0303 	eor.w	r3, r1, r3
20002b72:	2d36      	cmp	r5, #54	; 0x36
20002b74:	bf88      	it	hi
20002b76:	bd30      	pophi	{r4, r5, pc}
20002b78:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
20002b7c:	ea4f 3101 	mov.w	r1, r1, lsl #12
20002b80:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
20002b84:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
20002b88:	d002      	beq.n	20002b90 <__adddf3+0x70>
20002b8a:	4240      	negs	r0, r0
20002b8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
20002b90:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
20002b94:	ea4f 3303 	mov.w	r3, r3, lsl #12
20002b98:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
20002b9c:	d002      	beq.n	20002ba4 <__adddf3+0x84>
20002b9e:	4252      	negs	r2, r2
20002ba0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
20002ba4:	ea94 0f05 	teq	r4, r5
20002ba8:	f000 80a7 	beq.w	20002cfa <__adddf3+0x1da>
20002bac:	f1a4 0401 	sub.w	r4, r4, #1
20002bb0:	f1d5 0e20 	rsbs	lr, r5, #32
20002bb4:	db0d      	blt.n	20002bd2 <__adddf3+0xb2>
20002bb6:	fa02 fc0e 	lsl.w	ip, r2, lr
20002bba:	fa22 f205 	lsr.w	r2, r2, r5
20002bbe:	1880      	adds	r0, r0, r2
20002bc0:	f141 0100 	adc.w	r1, r1, #0
20002bc4:	fa03 f20e 	lsl.w	r2, r3, lr
20002bc8:	1880      	adds	r0, r0, r2
20002bca:	fa43 f305 	asr.w	r3, r3, r5
20002bce:	4159      	adcs	r1, r3
20002bd0:	e00e      	b.n	20002bf0 <__adddf3+0xd0>
20002bd2:	f1a5 0520 	sub.w	r5, r5, #32
20002bd6:	f10e 0e20 	add.w	lr, lr, #32
20002bda:	2a01      	cmp	r2, #1
20002bdc:	fa03 fc0e 	lsl.w	ip, r3, lr
20002be0:	bf28      	it	cs
20002be2:	f04c 0c02 	orrcs.w	ip, ip, #2
20002be6:	fa43 f305 	asr.w	r3, r3, r5
20002bea:	18c0      	adds	r0, r0, r3
20002bec:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
20002bf0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
20002bf4:	d507      	bpl.n	20002c06 <__adddf3+0xe6>
20002bf6:	f04f 0e00 	mov.w	lr, #0
20002bfa:	f1dc 0c00 	rsbs	ip, ip, #0
20002bfe:	eb7e 0000 	sbcs.w	r0, lr, r0
20002c02:	eb6e 0101 	sbc.w	r1, lr, r1
20002c06:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
20002c0a:	d31b      	bcc.n	20002c44 <__adddf3+0x124>
20002c0c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
20002c10:	d30c      	bcc.n	20002c2c <__adddf3+0x10c>
20002c12:	0849      	lsrs	r1, r1, #1
20002c14:	ea5f 0030 	movs.w	r0, r0, rrx
20002c18:	ea4f 0c3c 	mov.w	ip, ip, rrx
20002c1c:	f104 0401 	add.w	r4, r4, #1
20002c20:	ea4f 5244 	mov.w	r2, r4, lsl #21
20002c24:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
20002c28:	f080 809a 	bcs.w	20002d60 <__adddf3+0x240>
20002c2c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
20002c30:	bf08      	it	eq
20002c32:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
20002c36:	f150 0000 	adcs.w	r0, r0, #0
20002c3a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
20002c3e:	ea41 0105 	orr.w	r1, r1, r5
20002c42:	bd30      	pop	{r4, r5, pc}
20002c44:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
20002c48:	4140      	adcs	r0, r0
20002c4a:	eb41 0101 	adc.w	r1, r1, r1
20002c4e:	3c01      	subs	r4, #1
20002c50:	bf28      	it	cs
20002c52:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
20002c56:	d2e9      	bcs.n	20002c2c <__adddf3+0x10c>
20002c58:	f091 0f00 	teq	r1, #0
20002c5c:	bf04      	itt	eq
20002c5e:	4601      	moveq	r1, r0
20002c60:	2000      	moveq	r0, #0
20002c62:	fab1 f381 	clz	r3, r1
20002c66:	bf08      	it	eq
20002c68:	3320      	addeq	r3, #32
20002c6a:	f1a3 030b 	sub.w	r3, r3, #11
20002c6e:	f1b3 0220 	subs.w	r2, r3, #32
20002c72:	da0c      	bge.n	20002c8e <__adddf3+0x16e>
20002c74:	320c      	adds	r2, #12
20002c76:	dd08      	ble.n	20002c8a <__adddf3+0x16a>
20002c78:	f102 0c14 	add.w	ip, r2, #20
20002c7c:	f1c2 020c 	rsb	r2, r2, #12
20002c80:	fa01 f00c 	lsl.w	r0, r1, ip
20002c84:	fa21 f102 	lsr.w	r1, r1, r2
20002c88:	e00c      	b.n	20002ca4 <__adddf3+0x184>
20002c8a:	f102 0214 	add.w	r2, r2, #20
20002c8e:	bfd8      	it	le
20002c90:	f1c2 0c20 	rsble	ip, r2, #32
20002c94:	fa01 f102 	lsl.w	r1, r1, r2
20002c98:	fa20 fc0c 	lsr.w	ip, r0, ip
20002c9c:	bfdc      	itt	le
20002c9e:	ea41 010c 	orrle.w	r1, r1, ip
20002ca2:	4090      	lslle	r0, r2
20002ca4:	1ae4      	subs	r4, r4, r3
20002ca6:	bfa2      	ittt	ge
20002ca8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
20002cac:	4329      	orrge	r1, r5
20002cae:	bd30      	popge	{r4, r5, pc}
20002cb0:	ea6f 0404 	mvn.w	r4, r4
20002cb4:	3c1f      	subs	r4, #31
20002cb6:	da1c      	bge.n	20002cf2 <__adddf3+0x1d2>
20002cb8:	340c      	adds	r4, #12
20002cba:	dc0e      	bgt.n	20002cda <__adddf3+0x1ba>
20002cbc:	f104 0414 	add.w	r4, r4, #20
20002cc0:	f1c4 0220 	rsb	r2, r4, #32
20002cc4:	fa20 f004 	lsr.w	r0, r0, r4
20002cc8:	fa01 f302 	lsl.w	r3, r1, r2
20002ccc:	ea40 0003 	orr.w	r0, r0, r3
20002cd0:	fa21 f304 	lsr.w	r3, r1, r4
20002cd4:	ea45 0103 	orr.w	r1, r5, r3
20002cd8:	bd30      	pop	{r4, r5, pc}
20002cda:	f1c4 040c 	rsb	r4, r4, #12
20002cde:	f1c4 0220 	rsb	r2, r4, #32
20002ce2:	fa20 f002 	lsr.w	r0, r0, r2
20002ce6:	fa01 f304 	lsl.w	r3, r1, r4
20002cea:	ea40 0003 	orr.w	r0, r0, r3
20002cee:	4629      	mov	r1, r5
20002cf0:	bd30      	pop	{r4, r5, pc}
20002cf2:	fa21 f004 	lsr.w	r0, r1, r4
20002cf6:	4629      	mov	r1, r5
20002cf8:	bd30      	pop	{r4, r5, pc}
20002cfa:	f094 0f00 	teq	r4, #0
20002cfe:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
20002d02:	bf06      	itte	eq
20002d04:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
20002d08:	3401      	addeq	r4, #1
20002d0a:	3d01      	subne	r5, #1
20002d0c:	e74e      	b.n	20002bac <__adddf3+0x8c>
20002d0e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
20002d12:	bf18      	it	ne
20002d14:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
20002d18:	d029      	beq.n	20002d6e <__adddf3+0x24e>
20002d1a:	ea94 0f05 	teq	r4, r5
20002d1e:	bf08      	it	eq
20002d20:	ea90 0f02 	teqeq	r0, r2
20002d24:	d005      	beq.n	20002d32 <__adddf3+0x212>
20002d26:	ea54 0c00 	orrs.w	ip, r4, r0
20002d2a:	bf04      	itt	eq
20002d2c:	4619      	moveq	r1, r3
20002d2e:	4610      	moveq	r0, r2
20002d30:	bd30      	pop	{r4, r5, pc}
20002d32:	ea91 0f03 	teq	r1, r3
20002d36:	bf1e      	ittt	ne
20002d38:	2100      	movne	r1, #0
20002d3a:	2000      	movne	r0, #0
20002d3c:	bd30      	popne	{r4, r5, pc}
20002d3e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
20002d42:	d105      	bne.n	20002d50 <__adddf3+0x230>
20002d44:	0040      	lsls	r0, r0, #1
20002d46:	4149      	adcs	r1, r1
20002d48:	bf28      	it	cs
20002d4a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
20002d4e:	bd30      	pop	{r4, r5, pc}
20002d50:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
20002d54:	bf3c      	itt	cc
20002d56:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
20002d5a:	bd30      	popcc	{r4, r5, pc}
20002d5c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
20002d60:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
20002d64:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
20002d68:	f04f 0000 	mov.w	r0, #0
20002d6c:	bd30      	pop	{r4, r5, pc}
20002d6e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
20002d72:	bf1a      	itte	ne
20002d74:	4619      	movne	r1, r3
20002d76:	4610      	movne	r0, r2
20002d78:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
20002d7c:	bf1c      	itt	ne
20002d7e:	460b      	movne	r3, r1
20002d80:	4602      	movne	r2, r0
20002d82:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
20002d86:	bf06      	itte	eq
20002d88:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
20002d8c:	ea91 0f03 	teqeq	r1, r3
20002d90:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
20002d94:	bd30      	pop	{r4, r5, pc}
20002d96:	bf00      	nop

20002d98 <__aeabi_ui2d>:
__floatunsidf():
20002d98:	f090 0f00 	teq	r0, #0
20002d9c:	bf04      	itt	eq
20002d9e:	2100      	moveq	r1, #0
20002da0:	4770      	bxeq	lr
20002da2:	b530      	push	{r4, r5, lr}
20002da4:	f44f 6480 	mov.w	r4, #1024	; 0x400
20002da8:	f104 0432 	add.w	r4, r4, #50	; 0x32
20002dac:	f04f 0500 	mov.w	r5, #0
20002db0:	f04f 0100 	mov.w	r1, #0
20002db4:	e750      	b.n	20002c58 <__adddf3+0x138>
20002db6:	bf00      	nop

20002db8 <__aeabi_i2d>:
__aeabi_i2d():
20002db8:	f090 0f00 	teq	r0, #0
20002dbc:	bf04      	itt	eq
20002dbe:	2100      	moveq	r1, #0
20002dc0:	4770      	bxeq	lr
20002dc2:	b530      	push	{r4, r5, lr}
20002dc4:	f44f 6480 	mov.w	r4, #1024	; 0x400
20002dc8:	f104 0432 	add.w	r4, r4, #50	; 0x32
20002dcc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
20002dd0:	bf48      	it	mi
20002dd2:	4240      	negmi	r0, r0
20002dd4:	f04f 0100 	mov.w	r1, #0
20002dd8:	e73e      	b.n	20002c58 <__adddf3+0x138>
20002dda:	bf00      	nop

20002ddc <__aeabi_f2d>:
__aeabi_f2d():
20002ddc:	0042      	lsls	r2, r0, #1
20002dde:	ea4f 01e2 	mov.w	r1, r2, asr #3
20002de2:	ea4f 0131 	mov.w	r1, r1, rrx
20002de6:	ea4f 7002 	mov.w	r0, r2, lsl #28
20002dea:	bf1f      	itttt	ne
20002dec:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
20002df0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
20002df4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
20002df8:	4770      	bxne	lr
20002dfa:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
20002dfe:	bf08      	it	eq
20002e00:	4770      	bxeq	lr
20002e02:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
20002e06:	bf04      	itt	eq
20002e08:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
20002e0c:	4770      	bxeq	lr
20002e0e:	b530      	push	{r4, r5, lr}
20002e10:	f44f 7460 	mov.w	r4, #896	; 0x380
20002e14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
20002e18:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
20002e1c:	e71c      	b.n	20002c58 <__adddf3+0x138>
20002e1e:	bf00      	nop

20002e20 <__aeabi_ul2d>:
__floatundidf():
20002e20:	ea50 0201 	orrs.w	r2, r0, r1
20002e24:	bf08      	it	eq
20002e26:	4770      	bxeq	lr
20002e28:	b530      	push	{r4, r5, lr}
20002e2a:	f04f 0500 	mov.w	r5, #0
20002e2e:	e00a      	b.n	20002e46 <__aeabi_l2d+0x16>

20002e30 <__aeabi_l2d>:
__aeabi_l2d():
20002e30:	ea50 0201 	orrs.w	r2, r0, r1
20002e34:	bf08      	it	eq
20002e36:	4770      	bxeq	lr
20002e38:	b530      	push	{r4, r5, lr}
20002e3a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
20002e3e:	d502      	bpl.n	20002e46 <__aeabi_l2d+0x16>
20002e40:	4240      	negs	r0, r0
20002e42:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
20002e46:	f44f 6480 	mov.w	r4, #1024	; 0x400
20002e4a:	f104 0432 	add.w	r4, r4, #50	; 0x32
20002e4e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
20002e52:	f43f aed8 	beq.w	20002c06 <__adddf3+0xe6>
20002e56:	f04f 0203 	mov.w	r2, #3
20002e5a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
20002e5e:	bf18      	it	ne
20002e60:	3203      	addne	r2, #3
20002e62:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
20002e66:	bf18      	it	ne
20002e68:	3203      	addne	r2, #3
20002e6a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
20002e6e:	f1c2 0320 	rsb	r3, r2, #32
20002e72:	fa00 fc03 	lsl.w	ip, r0, r3
20002e76:	fa20 f002 	lsr.w	r0, r0, r2
20002e7a:	fa01 fe03 	lsl.w	lr, r1, r3
20002e7e:	ea40 000e 	orr.w	r0, r0, lr
20002e82:	fa21 f102 	lsr.w	r1, r1, r2
20002e86:	4414      	add	r4, r2
20002e88:	e6bd      	b.n	20002c06 <__adddf3+0xe6>
20002e8a:	bf00      	nop

20002e8c <__aeabi_dmul>:
__muldf3():
20002e8c:	b570      	push	{r4, r5, r6, lr}
20002e8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
20002e92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
20002e96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
20002e9a:	bf1d      	ittte	ne
20002e9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
20002ea0:	ea94 0f0c 	teqne	r4, ip
20002ea4:	ea95 0f0c 	teqne	r5, ip
20002ea8:	f000 f8de 	bleq	20003068 <__aeabi_dmul+0x1dc>
20002eac:	442c      	add	r4, r5
20002eae:	ea81 0603 	eor.w	r6, r1, r3
20002eb2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
20002eb6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
20002eba:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
20002ebe:	bf18      	it	ne
20002ec0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
20002ec4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
20002ec8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
20002ecc:	d038      	beq.n	20002f40 <__aeabi_dmul+0xb4>
20002ece:	fba0 ce02 	umull	ip, lr, r0, r2
20002ed2:	f04f 0500 	mov.w	r5, #0
20002ed6:	fbe1 e502 	umlal	lr, r5, r1, r2
20002eda:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
20002ede:	fbe0 e503 	umlal	lr, r5, r0, r3
20002ee2:	f04f 0600 	mov.w	r6, #0
20002ee6:	fbe1 5603 	umlal	r5, r6, r1, r3
20002eea:	f09c 0f00 	teq	ip, #0
20002eee:	bf18      	it	ne
20002ef0:	f04e 0e01 	orrne.w	lr, lr, #1
20002ef4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
20002ef8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
20002efc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
20002f00:	d204      	bcs.n	20002f0c <__aeabi_dmul+0x80>
20002f02:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
20002f06:	416d      	adcs	r5, r5
20002f08:	eb46 0606 	adc.w	r6, r6, r6
20002f0c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
20002f10:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
20002f14:	ea4f 20c5 	mov.w	r0, r5, lsl #11
20002f18:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
20002f1c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
20002f20:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
20002f24:	bf88      	it	hi
20002f26:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
20002f2a:	d81e      	bhi.n	20002f6a <__aeabi_dmul+0xde>
20002f2c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
20002f30:	bf08      	it	eq
20002f32:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
20002f36:	f150 0000 	adcs.w	r0, r0, #0
20002f3a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
20002f3e:	bd70      	pop	{r4, r5, r6, pc}
20002f40:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
20002f44:	ea46 0101 	orr.w	r1, r6, r1
20002f48:	ea40 0002 	orr.w	r0, r0, r2
20002f4c:	ea81 0103 	eor.w	r1, r1, r3
20002f50:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
20002f54:	bfc2      	ittt	gt
20002f56:	ebd4 050c 	rsbsgt	r5, r4, ip
20002f5a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
20002f5e:	bd70      	popgt	{r4, r5, r6, pc}
20002f60:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
20002f64:	f04f 0e00 	mov.w	lr, #0
20002f68:	3c01      	subs	r4, #1
20002f6a:	f300 80ab 	bgt.w	200030c4 <__aeabi_dmul+0x238>
20002f6e:	f114 0f36 	cmn.w	r4, #54	; 0x36
20002f72:	bfde      	ittt	le
20002f74:	2000      	movle	r0, #0
20002f76:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
20002f7a:	bd70      	pople	{r4, r5, r6, pc}
20002f7c:	f1c4 0400 	rsb	r4, r4, #0
20002f80:	3c20      	subs	r4, #32
20002f82:	da35      	bge.n	20002ff0 <__aeabi_dmul+0x164>
20002f84:	340c      	adds	r4, #12
20002f86:	dc1b      	bgt.n	20002fc0 <__aeabi_dmul+0x134>
20002f88:	f104 0414 	add.w	r4, r4, #20
20002f8c:	f1c4 0520 	rsb	r5, r4, #32
20002f90:	fa00 f305 	lsl.w	r3, r0, r5
20002f94:	fa20 f004 	lsr.w	r0, r0, r4
20002f98:	fa01 f205 	lsl.w	r2, r1, r5
20002f9c:	ea40 0002 	orr.w	r0, r0, r2
20002fa0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
20002fa4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
20002fa8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
20002fac:	fa21 f604 	lsr.w	r6, r1, r4
20002fb0:	eb42 0106 	adc.w	r1, r2, r6
20002fb4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
20002fb8:	bf08      	it	eq
20002fba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
20002fbe:	bd70      	pop	{r4, r5, r6, pc}
20002fc0:	f1c4 040c 	rsb	r4, r4, #12
20002fc4:	f1c4 0520 	rsb	r5, r4, #32
20002fc8:	fa00 f304 	lsl.w	r3, r0, r4
20002fcc:	fa20 f005 	lsr.w	r0, r0, r5
20002fd0:	fa01 f204 	lsl.w	r2, r1, r4
20002fd4:	ea40 0002 	orr.w	r0, r0, r2
20002fd8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
20002fdc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
20002fe0:	f141 0100 	adc.w	r1, r1, #0
20002fe4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
20002fe8:	bf08      	it	eq
20002fea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
20002fee:	bd70      	pop	{r4, r5, r6, pc}
20002ff0:	f1c4 0520 	rsb	r5, r4, #32
20002ff4:	fa00 f205 	lsl.w	r2, r0, r5
20002ff8:	ea4e 0e02 	orr.w	lr, lr, r2
20002ffc:	fa20 f304 	lsr.w	r3, r0, r4
20003000:	fa01 f205 	lsl.w	r2, r1, r5
20003004:	ea43 0302 	orr.w	r3, r3, r2
20003008:	fa21 f004 	lsr.w	r0, r1, r4
2000300c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
20003010:	fa21 f204 	lsr.w	r2, r1, r4
20003014:	ea20 0002 	bic.w	r0, r0, r2
20003018:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
2000301c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
20003020:	bf08      	it	eq
20003022:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
20003026:	bd70      	pop	{r4, r5, r6, pc}
20003028:	f094 0f00 	teq	r4, #0
2000302c:	d10f      	bne.n	2000304e <__aeabi_dmul+0x1c2>
2000302e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
20003032:	0040      	lsls	r0, r0, #1
20003034:	eb41 0101 	adc.w	r1, r1, r1
20003038:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
2000303c:	bf08      	it	eq
2000303e:	3c01      	subeq	r4, #1
20003040:	d0f7      	beq.n	20003032 <__aeabi_dmul+0x1a6>
20003042:	ea41 0106 	orr.w	r1, r1, r6
20003046:	f095 0f00 	teq	r5, #0
2000304a:	bf18      	it	ne
2000304c:	4770      	bxne	lr
2000304e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
20003052:	0052      	lsls	r2, r2, #1
20003054:	eb43 0303 	adc.w	r3, r3, r3
20003058:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
2000305c:	bf08      	it	eq
2000305e:	3d01      	subeq	r5, #1
20003060:	d0f7      	beq.n	20003052 <__aeabi_dmul+0x1c6>
20003062:	ea43 0306 	orr.w	r3, r3, r6
20003066:	4770      	bx	lr
20003068:	ea94 0f0c 	teq	r4, ip
2000306c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
20003070:	bf18      	it	ne
20003072:	ea95 0f0c 	teqne	r5, ip
20003076:	d00c      	beq.n	20003092 <__aeabi_dmul+0x206>
20003078:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
2000307c:	bf18      	it	ne
2000307e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
20003082:	d1d1      	bne.n	20003028 <__aeabi_dmul+0x19c>
20003084:	ea81 0103 	eor.w	r1, r1, r3
20003088:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
2000308c:	f04f 0000 	mov.w	r0, #0
20003090:	bd70      	pop	{r4, r5, r6, pc}
20003092:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
20003096:	bf06      	itte	eq
20003098:	4610      	moveq	r0, r2
2000309a:	4619      	moveq	r1, r3
2000309c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
200030a0:	d019      	beq.n	200030d6 <__aeabi_dmul+0x24a>
200030a2:	ea94 0f0c 	teq	r4, ip
200030a6:	d102      	bne.n	200030ae <__aeabi_dmul+0x222>
200030a8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
200030ac:	d113      	bne.n	200030d6 <__aeabi_dmul+0x24a>
200030ae:	ea95 0f0c 	teq	r5, ip
200030b2:	d105      	bne.n	200030c0 <__aeabi_dmul+0x234>
200030b4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
200030b8:	bf1c      	itt	ne
200030ba:	4610      	movne	r0, r2
200030bc:	4619      	movne	r1, r3
200030be:	d10a      	bne.n	200030d6 <__aeabi_dmul+0x24a>
200030c0:	ea81 0103 	eor.w	r1, r1, r3
200030c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
200030c8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
200030cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
200030d0:	f04f 0000 	mov.w	r0, #0
200030d4:	bd70      	pop	{r4, r5, r6, pc}
200030d6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
200030da:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
200030de:	bd70      	pop	{r4, r5, r6, pc}

200030e0 <__aeabi_ddiv>:
__divdf3():
200030e0:	b570      	push	{r4, r5, r6, lr}
200030e2:	f04f 0cff 	mov.w	ip, #255	; 0xff
200030e6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
200030ea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
200030ee:	bf1d      	ittte	ne
200030f0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
200030f4:	ea94 0f0c 	teqne	r4, ip
200030f8:	ea95 0f0c 	teqne	r5, ip
200030fc:	f000 f8a7 	bleq	2000324e <__aeabi_ddiv+0x16e>
20003100:	eba4 0405 	sub.w	r4, r4, r5
20003104:	ea81 0e03 	eor.w	lr, r1, r3
20003108:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
2000310c:	ea4f 3101 	mov.w	r1, r1, lsl #12
20003110:	f000 8088 	beq.w	20003224 <__aeabi_ddiv+0x144>
20003114:	ea4f 3303 	mov.w	r3, r3, lsl #12
20003118:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
2000311c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
20003120:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
20003124:	ea4f 2202 	mov.w	r2, r2, lsl #8
20003128:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
2000312c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
20003130:	ea4f 2600 	mov.w	r6, r0, lsl #8
20003134:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
20003138:	429d      	cmp	r5, r3
2000313a:	bf08      	it	eq
2000313c:	4296      	cmpeq	r6, r2
2000313e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
20003142:	f504 7440 	add.w	r4, r4, #768	; 0x300
20003146:	d202      	bcs.n	2000314e <__aeabi_ddiv+0x6e>
20003148:	085b      	lsrs	r3, r3, #1
2000314a:	ea4f 0232 	mov.w	r2, r2, rrx
2000314e:	1ab6      	subs	r6, r6, r2
20003150:	eb65 0503 	sbc.w	r5, r5, r3
20003154:	085b      	lsrs	r3, r3, #1
20003156:	ea4f 0232 	mov.w	r2, r2, rrx
2000315a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
2000315e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
20003162:	ebb6 0e02 	subs.w	lr, r6, r2
20003166:	eb75 0e03 	sbcs.w	lr, r5, r3
2000316a:	bf22      	ittt	cs
2000316c:	1ab6      	subcs	r6, r6, r2
2000316e:	4675      	movcs	r5, lr
20003170:	ea40 000c 	orrcs.w	r0, r0, ip
20003174:	085b      	lsrs	r3, r3, #1
20003176:	ea4f 0232 	mov.w	r2, r2, rrx
2000317a:	ebb6 0e02 	subs.w	lr, r6, r2
2000317e:	eb75 0e03 	sbcs.w	lr, r5, r3
20003182:	bf22      	ittt	cs
20003184:	1ab6      	subcs	r6, r6, r2
20003186:	4675      	movcs	r5, lr
20003188:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
2000318c:	085b      	lsrs	r3, r3, #1
2000318e:	ea4f 0232 	mov.w	r2, r2, rrx
20003192:	ebb6 0e02 	subs.w	lr, r6, r2
20003196:	eb75 0e03 	sbcs.w	lr, r5, r3
2000319a:	bf22      	ittt	cs
2000319c:	1ab6      	subcs	r6, r6, r2
2000319e:	4675      	movcs	r5, lr
200031a0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
200031a4:	085b      	lsrs	r3, r3, #1
200031a6:	ea4f 0232 	mov.w	r2, r2, rrx
200031aa:	ebb6 0e02 	subs.w	lr, r6, r2
200031ae:	eb75 0e03 	sbcs.w	lr, r5, r3
200031b2:	bf22      	ittt	cs
200031b4:	1ab6      	subcs	r6, r6, r2
200031b6:	4675      	movcs	r5, lr
200031b8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
200031bc:	ea55 0e06 	orrs.w	lr, r5, r6
200031c0:	d018      	beq.n	200031f4 <__aeabi_ddiv+0x114>
200031c2:	ea4f 1505 	mov.w	r5, r5, lsl #4
200031c6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
200031ca:	ea4f 1606 	mov.w	r6, r6, lsl #4
200031ce:	ea4f 03c3 	mov.w	r3, r3, lsl #3
200031d2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
200031d6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
200031da:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
200031de:	d1c0      	bne.n	20003162 <__aeabi_ddiv+0x82>
200031e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
200031e4:	d10b      	bne.n	200031fe <__aeabi_ddiv+0x11e>
200031e6:	ea41 0100 	orr.w	r1, r1, r0
200031ea:	f04f 0000 	mov.w	r0, #0
200031ee:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
200031f2:	e7b6      	b.n	20003162 <__aeabi_ddiv+0x82>
200031f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
200031f8:	bf04      	itt	eq
200031fa:	4301      	orreq	r1, r0
200031fc:	2000      	moveq	r0, #0
200031fe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
20003202:	bf88      	it	hi
20003204:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
20003208:	f63f aeaf 	bhi.w	20002f6a <__aeabi_dmul+0xde>
2000320c:	ebb5 0c03 	subs.w	ip, r5, r3
20003210:	bf04      	itt	eq
20003212:	ebb6 0c02 	subseq.w	ip, r6, r2
20003216:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
2000321a:	f150 0000 	adcs.w	r0, r0, #0
2000321e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
20003222:	bd70      	pop	{r4, r5, r6, pc}
20003224:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
20003228:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
2000322c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
20003230:	bfc2      	ittt	gt
20003232:	ebd4 050c 	rsbsgt	r5, r4, ip
20003236:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
2000323a:	bd70      	popgt	{r4, r5, r6, pc}
2000323c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
20003240:	f04f 0e00 	mov.w	lr, #0
20003244:	3c01      	subs	r4, #1
20003246:	e690      	b.n	20002f6a <__aeabi_dmul+0xde>
20003248:	ea45 0e06 	orr.w	lr, r5, r6
2000324c:	e68d      	b.n	20002f6a <__aeabi_dmul+0xde>
2000324e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
20003252:	ea94 0f0c 	teq	r4, ip
20003256:	bf08      	it	eq
20003258:	ea95 0f0c 	teqeq	r5, ip
2000325c:	f43f af3b 	beq.w	200030d6 <__aeabi_dmul+0x24a>
20003260:	ea94 0f0c 	teq	r4, ip
20003264:	d10a      	bne.n	2000327c <__aeabi_ddiv+0x19c>
20003266:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
2000326a:	f47f af34 	bne.w	200030d6 <__aeabi_dmul+0x24a>
2000326e:	ea95 0f0c 	teq	r5, ip
20003272:	f47f af25 	bne.w	200030c0 <__aeabi_dmul+0x234>
20003276:	4610      	mov	r0, r2
20003278:	4619      	mov	r1, r3
2000327a:	e72c      	b.n	200030d6 <__aeabi_dmul+0x24a>
2000327c:	ea95 0f0c 	teq	r5, ip
20003280:	d106      	bne.n	20003290 <__aeabi_ddiv+0x1b0>
20003282:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
20003286:	f43f aefd 	beq.w	20003084 <__aeabi_dmul+0x1f8>
2000328a:	4610      	mov	r0, r2
2000328c:	4619      	mov	r1, r3
2000328e:	e722      	b.n	200030d6 <__aeabi_dmul+0x24a>
20003290:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
20003294:	bf18      	it	ne
20003296:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
2000329a:	f47f aec5 	bne.w	20003028 <__aeabi_dmul+0x19c>
2000329e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
200032a2:	f47f af0d 	bne.w	200030c0 <__aeabi_dmul+0x234>
200032a6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
200032aa:	f47f aeeb 	bne.w	20003084 <__aeabi_dmul+0x1f8>
200032ae:	e712      	b.n	200030d6 <__aeabi_dmul+0x24a>

200032b0 <__libc_init_array>:
__libc_init_array():
200032b0:	b570      	push	{r4, r5, r6, lr}
200032b2:	4e0d      	ldr	r6, [pc, #52]	; (200032e8 <__libc_init_array+0x38>)
200032b4:	4d0d      	ldr	r5, [pc, #52]	; (200032ec <__libc_init_array+0x3c>)
200032b6:	1b76      	subs	r6, r6, r5
200032b8:	10b6      	asrs	r6, r6, #2
200032ba:	d006      	beq.n	200032ca <__libc_init_array+0x1a>
200032bc:	2400      	movs	r4, #0
200032be:	f855 3b04 	ldr.w	r3, [r5], #4
200032c2:	3401      	adds	r4, #1
200032c4:	4798      	blx	r3
200032c6:	42a6      	cmp	r6, r4
200032c8:	d1f9      	bne.n	200032be <__libc_init_array+0xe>
200032ca:	4e09      	ldr	r6, [pc, #36]	; (200032f0 <__libc_init_array+0x40>)
200032cc:	4d09      	ldr	r5, [pc, #36]	; (200032f4 <__libc_init_array+0x44>)
200032ce:	f005 ffa3 	bl	20009218 <_init>
200032d2:	1b76      	subs	r6, r6, r5
200032d4:	10b6      	asrs	r6, r6, #2
200032d6:	d006      	beq.n	200032e6 <__libc_init_array+0x36>
200032d8:	2400      	movs	r4, #0
200032da:	f855 3b04 	ldr.w	r3, [r5], #4
200032de:	3401      	adds	r4, #1
200032e0:	4798      	blx	r3
200032e2:	42a6      	cmp	r6, r4
200032e4:	d1f9      	bne.n	200032da <__libc_init_array+0x2a>
200032e6:	bd70      	pop	{r4, r5, r6, pc}
200032e8:	20009230 	.word	0x20009230
200032ec:	20009230 	.word	0x20009230
200032f0:	20009238 	.word	0x20009238
200032f4:	20009230 	.word	0x20009230

200032f8 <memcpy>:
memcpy():
200032f8:	4684      	mov	ip, r0
200032fa:	ea41 0300 	orr.w	r3, r1, r0
200032fe:	f013 0303 	ands.w	r3, r3, #3
20003302:	d149      	bne.n	20003398 <memcpy+0xa0>
20003304:	3a40      	subs	r2, #64	; 0x40
20003306:	d323      	bcc.n	20003350 <memcpy+0x58>
20003308:	680b      	ldr	r3, [r1, #0]
2000330a:	6003      	str	r3, [r0, #0]
2000330c:	684b      	ldr	r3, [r1, #4]
2000330e:	6043      	str	r3, [r0, #4]
20003310:	688b      	ldr	r3, [r1, #8]
20003312:	6083      	str	r3, [r0, #8]
20003314:	68cb      	ldr	r3, [r1, #12]
20003316:	60c3      	str	r3, [r0, #12]
20003318:	690b      	ldr	r3, [r1, #16]
2000331a:	6103      	str	r3, [r0, #16]
2000331c:	694b      	ldr	r3, [r1, #20]
2000331e:	6143      	str	r3, [r0, #20]
20003320:	698b      	ldr	r3, [r1, #24]
20003322:	6183      	str	r3, [r0, #24]
20003324:	69cb      	ldr	r3, [r1, #28]
20003326:	61c3      	str	r3, [r0, #28]
20003328:	6a0b      	ldr	r3, [r1, #32]
2000332a:	6203      	str	r3, [r0, #32]
2000332c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
2000332e:	6243      	str	r3, [r0, #36]	; 0x24
20003330:	6a8b      	ldr	r3, [r1, #40]	; 0x28
20003332:	6283      	str	r3, [r0, #40]	; 0x28
20003334:	6acb      	ldr	r3, [r1, #44]	; 0x2c
20003336:	62c3      	str	r3, [r0, #44]	; 0x2c
20003338:	6b0b      	ldr	r3, [r1, #48]	; 0x30
2000333a:	6303      	str	r3, [r0, #48]	; 0x30
2000333c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
2000333e:	6343      	str	r3, [r0, #52]	; 0x34
20003340:	6b8b      	ldr	r3, [r1, #56]	; 0x38
20003342:	6383      	str	r3, [r0, #56]	; 0x38
20003344:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
20003346:	63c3      	str	r3, [r0, #60]	; 0x3c
20003348:	3040      	adds	r0, #64	; 0x40
2000334a:	3140      	adds	r1, #64	; 0x40
2000334c:	3a40      	subs	r2, #64	; 0x40
2000334e:	d2db      	bcs.n	20003308 <memcpy+0x10>
20003350:	3230      	adds	r2, #48	; 0x30
20003352:	d30b      	bcc.n	2000336c <memcpy+0x74>
20003354:	680b      	ldr	r3, [r1, #0]
20003356:	6003      	str	r3, [r0, #0]
20003358:	684b      	ldr	r3, [r1, #4]
2000335a:	6043      	str	r3, [r0, #4]
2000335c:	688b      	ldr	r3, [r1, #8]
2000335e:	6083      	str	r3, [r0, #8]
20003360:	68cb      	ldr	r3, [r1, #12]
20003362:	60c3      	str	r3, [r0, #12]
20003364:	3010      	adds	r0, #16
20003366:	3110      	adds	r1, #16
20003368:	3a10      	subs	r2, #16
2000336a:	d2f3      	bcs.n	20003354 <memcpy+0x5c>
2000336c:	320c      	adds	r2, #12
2000336e:	d305      	bcc.n	2000337c <memcpy+0x84>
20003370:	f851 3b04 	ldr.w	r3, [r1], #4
20003374:	f840 3b04 	str.w	r3, [r0], #4
20003378:	3a04      	subs	r2, #4
2000337a:	d2f9      	bcs.n	20003370 <memcpy+0x78>
2000337c:	3204      	adds	r2, #4
2000337e:	d008      	beq.n	20003392 <memcpy+0x9a>
20003380:	07d2      	lsls	r2, r2, #31
20003382:	bf1c      	itt	ne
20003384:	f811 3b01 	ldrbne.w	r3, [r1], #1
20003388:	f800 3b01 	strbne.w	r3, [r0], #1
2000338c:	d301      	bcc.n	20003392 <memcpy+0x9a>
2000338e:	880b      	ldrh	r3, [r1, #0]
20003390:	8003      	strh	r3, [r0, #0]
20003392:	4660      	mov	r0, ip
20003394:	4770      	bx	lr
20003396:	bf00      	nop
20003398:	2a08      	cmp	r2, #8
2000339a:	d313      	bcc.n	200033c4 <memcpy+0xcc>
2000339c:	078b      	lsls	r3, r1, #30
2000339e:	d0b1      	beq.n	20003304 <memcpy+0xc>
200033a0:	f010 0303 	ands.w	r3, r0, #3
200033a4:	d0ae      	beq.n	20003304 <memcpy+0xc>
200033a6:	f1c3 0304 	rsb	r3, r3, #4
200033aa:	1ad2      	subs	r2, r2, r3
200033ac:	07db      	lsls	r3, r3, #31
200033ae:	bf1c      	itt	ne
200033b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
200033b4:	f800 3b01 	strbne.w	r3, [r0], #1
200033b8:	d3a4      	bcc.n	20003304 <memcpy+0xc>
200033ba:	f831 3b02 	ldrh.w	r3, [r1], #2
200033be:	f820 3b02 	strh.w	r3, [r0], #2
200033c2:	e79f      	b.n	20003304 <memcpy+0xc>
200033c4:	3a04      	subs	r2, #4
200033c6:	d3d9      	bcc.n	2000337c <memcpy+0x84>
200033c8:	3a01      	subs	r2, #1
200033ca:	f811 3b01 	ldrb.w	r3, [r1], #1
200033ce:	f800 3b01 	strb.w	r3, [r0], #1
200033d2:	d2f9      	bcs.n	200033c8 <memcpy+0xd0>
200033d4:	780b      	ldrb	r3, [r1, #0]
200033d6:	7003      	strb	r3, [r0, #0]
200033d8:	784b      	ldrb	r3, [r1, #1]
200033da:	7043      	strb	r3, [r0, #1]
200033dc:	788b      	ldrb	r3, [r1, #2]
200033de:	7083      	strb	r3, [r0, #2]
200033e0:	4660      	mov	r0, ip
200033e2:	4770      	bx	lr

200033e4 <memset>:
memset():
200033e4:	b4f0      	push	{r4, r5, r6, r7}
200033e6:	0786      	lsls	r6, r0, #30
200033e8:	d046      	beq.n	20003478 <memset+0x94>
200033ea:	1e54      	subs	r4, r2, #1
200033ec:	2a00      	cmp	r2, #0
200033ee:	d03c      	beq.n	2000346a <memset+0x86>
200033f0:	4603      	mov	r3, r0
200033f2:	b2ca      	uxtb	r2, r1
200033f4:	e001      	b.n	200033fa <memset+0x16>
200033f6:	3c01      	subs	r4, #1
200033f8:	d337      	bcc.n	2000346a <memset+0x86>
200033fa:	f803 2b01 	strb.w	r2, [r3], #1
200033fe:	079d      	lsls	r5, r3, #30
20003400:	d1f9      	bne.n	200033f6 <memset+0x12>
20003402:	2c03      	cmp	r4, #3
20003404:	d92a      	bls.n	2000345c <memset+0x78>
20003406:	b2cd      	uxtb	r5, r1
20003408:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
2000340c:	2c0f      	cmp	r4, #15
2000340e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
20003412:	d934      	bls.n	2000347e <memset+0x9a>
20003414:	f1a4 0210 	sub.w	r2, r4, #16
20003418:	f022 0c0f 	bic.w	ip, r2, #15
2000341c:	f103 0720 	add.w	r7, r3, #32
20003420:	0916      	lsrs	r6, r2, #4
20003422:	4467      	add	r7, ip
20003424:	f103 0210 	add.w	r2, r3, #16
20003428:	e942 5504 	strd	r5, r5, [r2, #-16]
2000342c:	e942 5502 	strd	r5, r5, [r2, #-8]
20003430:	3210      	adds	r2, #16
20003432:	42ba      	cmp	r2, r7
20003434:	d1f8      	bne.n	20003428 <memset+0x44>
20003436:	1c72      	adds	r2, r6, #1
20003438:	f014 0f0c 	tst.w	r4, #12
2000343c:	eb03 1202 	add.w	r2, r3, r2, lsl #4
20003440:	f004 060f 	and.w	r6, r4, #15
20003444:	d013      	beq.n	2000346e <memset+0x8a>
20003446:	1f33      	subs	r3, r6, #4
20003448:	f023 0303 	bic.w	r3, r3, #3
2000344c:	3304      	adds	r3, #4
2000344e:	4413      	add	r3, r2
20003450:	f842 5b04 	str.w	r5, [r2], #4
20003454:	4293      	cmp	r3, r2
20003456:	d1fb      	bne.n	20003450 <memset+0x6c>
20003458:	f006 0403 	and.w	r4, r6, #3
2000345c:	b12c      	cbz	r4, 2000346a <memset+0x86>
2000345e:	b2ca      	uxtb	r2, r1
20003460:	441c      	add	r4, r3
20003462:	f803 2b01 	strb.w	r2, [r3], #1
20003466:	429c      	cmp	r4, r3
20003468:	d1fb      	bne.n	20003462 <memset+0x7e>
2000346a:	bcf0      	pop	{r4, r5, r6, r7}
2000346c:	4770      	bx	lr
2000346e:	4634      	mov	r4, r6
20003470:	4613      	mov	r3, r2
20003472:	2c00      	cmp	r4, #0
20003474:	d1f3      	bne.n	2000345e <memset+0x7a>
20003476:	e7f8      	b.n	2000346a <memset+0x86>
20003478:	4614      	mov	r4, r2
2000347a:	4603      	mov	r3, r0
2000347c:	e7c1      	b.n	20003402 <memset+0x1e>
2000347e:	461a      	mov	r2, r3
20003480:	4626      	mov	r6, r4
20003482:	e7e0      	b.n	20003446 <memset+0x62>

20003484 <printf>:
printf():
20003484:	b40f      	push	{r0, r1, r2, r3}
20003486:	b500      	push	{lr}
20003488:	4907      	ldr	r1, [pc, #28]	; (200034a8 <printf+0x24>)
2000348a:	b083      	sub	sp, #12
2000348c:	ab04      	add	r3, sp, #16
2000348e:	6808      	ldr	r0, [r1, #0]
20003490:	f853 2b04 	ldr.w	r2, [r3], #4
20003494:	6881      	ldr	r1, [r0, #8]
20003496:	9301      	str	r3, [sp, #4]
20003498:	f000 f8c0 	bl	2000361c <_vfprintf_r>
2000349c:	b003      	add	sp, #12
2000349e:	f85d eb04 	ldr.w	lr, [sp], #4
200034a2:	b004      	add	sp, #16
200034a4:	4770      	bx	lr
200034a6:	bf00      	nop
200034a8:	20009274 	.word	0x20009274

200034ac <_puts_r>:
_puts_r():
200034ac:	b5f0      	push	{r4, r5, r6, r7, lr}
200034ae:	4605      	mov	r5, r0
200034b0:	b089      	sub	sp, #36	; 0x24
200034b2:	4608      	mov	r0, r1
200034b4:	460c      	mov	r4, r1
200034b6:	2701      	movs	r7, #1
200034b8:	f000 f84e 	bl	20003558 <strlen>
200034bc:	2602      	movs	r6, #2
200034be:	4921      	ldr	r1, [pc, #132]	; (20003544 <_puts_r+0x98>)
200034c0:	6baa      	ldr	r2, [r5, #56]	; 0x38
200034c2:	9005      	str	r0, [sp, #20]
200034c4:	ab04      	add	r3, sp, #16
200034c6:	4438      	add	r0, r7
200034c8:	9404      	str	r4, [sp, #16]
200034ca:	9003      	str	r0, [sp, #12]
200034cc:	68ac      	ldr	r4, [r5, #8]
200034ce:	9707      	str	r7, [sp, #28]
200034d0:	9602      	str	r6, [sp, #8]
200034d2:	9106      	str	r1, [sp, #24]
200034d4:	9301      	str	r3, [sp, #4]
200034d6:	b322      	cbz	r2, 20003522 <_puts_r+0x76>
200034d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
200034da:	f013 0f01 	tst.w	r3, #1
200034de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200034e2:	b29a      	uxth	r2, r3
200034e4:	d101      	bne.n	200034ea <_puts_r+0x3e>
200034e6:	0598      	lsls	r0, r3, #22
200034e8:	d525      	bpl.n	20003536 <_puts_r+0x8a>
200034ea:	0491      	lsls	r1, r2, #18
200034ec:	d406      	bmi.n	200034fc <_puts_r+0x50>
200034ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
200034f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
200034f4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
200034f8:	81a3      	strh	r3, [r4, #12]
200034fa:	6662      	str	r2, [r4, #100]	; 0x64
200034fc:	4628      	mov	r0, r5
200034fe:	aa01      	add	r2, sp, #4
20003500:	4621      	mov	r1, r4
20003502:	f003 f9c5 	bl	20006890 <__sfvwrite_r>
20003506:	6e63      	ldr	r3, [r4, #100]	; 0x64
20003508:	2800      	cmp	r0, #0
2000350a:	bf14      	ite	ne
2000350c:	f04f 35ff 	movne.w	r5, #4294967295
20003510:	250a      	moveq	r5, #10
20003512:	07da      	lsls	r2, r3, #31
20003514:	d402      	bmi.n	2000351c <_puts_r+0x70>
20003516:	89a3      	ldrh	r3, [r4, #12]
20003518:	059b      	lsls	r3, r3, #22
2000351a:	d506      	bpl.n	2000352a <_puts_r+0x7e>
2000351c:	4628      	mov	r0, r5
2000351e:	b009      	add	sp, #36	; 0x24
20003520:	bdf0      	pop	{r4, r5, r6, r7, pc}
20003522:	4628      	mov	r0, r5
20003524:	f003 f80e 	bl	20006544 <__sinit>
20003528:	e7d6      	b.n	200034d8 <_puts_r+0x2c>
2000352a:	6da0      	ldr	r0, [r4, #88]	; 0x58
2000352c:	f003 fb54 	bl	20006bd8 <__retarget_lock_release_recursive>
20003530:	4628      	mov	r0, r5
20003532:	b009      	add	sp, #36	; 0x24
20003534:	bdf0      	pop	{r4, r5, r6, r7, pc}
20003536:	6da0      	ldr	r0, [r4, #88]	; 0x58
20003538:	f003 fb4c 	bl	20006bd4 <__retarget_lock_acquire_recursive>
2000353c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20003540:	b29a      	uxth	r2, r3
20003542:	e7d2      	b.n	200034ea <_puts_r+0x3e>
20003544:	20008f90 	.word	0x20008f90

20003548 <puts>:
puts():
20003548:	4b02      	ldr	r3, [pc, #8]	; (20003554 <puts+0xc>)
2000354a:	4601      	mov	r1, r0
2000354c:	6818      	ldr	r0, [r3, #0]
2000354e:	f7ff bfad 	b.w	200034ac <_puts_r>
20003552:	bf00      	nop
20003554:	20009274 	.word	0x20009274

20003558 <strlen>:
strlen():
20003558:	f020 0103 	bic.w	r1, r0, #3
2000355c:	f010 0003 	ands.w	r0, r0, #3
20003560:	f1c0 0000 	rsb	r0, r0, #0
20003564:	f851 3b04 	ldr.w	r3, [r1], #4
20003568:	f100 0c04 	add.w	ip, r0, #4
2000356c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
20003570:	f06f 0200 	mvn.w	r2, #0
20003574:	bf1c      	itt	ne
20003576:	fa22 f20c 	lsrne.w	r2, r2, ip
2000357a:	4313      	orrne	r3, r2
2000357c:	f04f 0c01 	mov.w	ip, #1
20003580:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
20003584:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
20003588:	eba3 020c 	sub.w	r2, r3, ip
2000358c:	ea22 0203 	bic.w	r2, r2, r3
20003590:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
20003594:	bf04      	itt	eq
20003596:	f851 3b04 	ldreq.w	r3, [r1], #4
2000359a:	3004      	addeq	r0, #4
2000359c:	d0f4      	beq.n	20003588 <strlen+0x30>
2000359e:	f1c2 0100 	rsb	r1, r2, #0
200035a2:	ea02 0201 	and.w	r2, r2, r1
200035a6:	fab2 f282 	clz	r2, r2
200035aa:	f1c2 021f 	rsb	r2, r2, #31
200035ae:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
200035b2:	4770      	bx	lr

200035b4 <strncpy>:
strncpy():
200035b4:	b470      	push	{r4, r5, r6}
200035b6:	ea40 0401 	orr.w	r4, r0, r1
200035ba:	07a3      	lsls	r3, r4, #30
200035bc:	d122      	bne.n	20003604 <strncpy+0x50>
200035be:	2a03      	cmp	r2, #3
200035c0:	d920      	bls.n	20003604 <strncpy+0x50>
200035c2:	460b      	mov	r3, r1
200035c4:	4604      	mov	r4, r0
200035c6:	4619      	mov	r1, r3
200035c8:	f853 6b04 	ldr.w	r6, [r3], #4
200035cc:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
200035d0:	ea25 0506 	bic.w	r5, r5, r6
200035d4:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
200035d8:	d115      	bne.n	20003606 <strncpy+0x52>
200035da:	3a04      	subs	r2, #4
200035dc:	2a03      	cmp	r2, #3
200035de:	4619      	mov	r1, r3
200035e0:	f844 6b04 	str.w	r6, [r4], #4
200035e4:	d8ef      	bhi.n	200035c6 <strncpy+0x12>
200035e6:	1e4d      	subs	r5, r1, #1
200035e8:	b152      	cbz	r2, 20003600 <strncpy+0x4c>
200035ea:	4623      	mov	r3, r4
200035ec:	f815 1f01 	ldrb.w	r1, [r5, #1]!
200035f0:	1e56      	subs	r6, r2, #1
200035f2:	f803 1b01 	strb.w	r1, [r3], #1
200035f6:	b141      	cbz	r1, 2000360a <strncpy+0x56>
200035f8:	4632      	mov	r2, r6
200035fa:	461c      	mov	r4, r3
200035fc:	2a00      	cmp	r2, #0
200035fe:	d1f4      	bne.n	200035ea <strncpy+0x36>
20003600:	bc70      	pop	{r4, r5, r6}
20003602:	4770      	bx	lr
20003604:	4604      	mov	r4, r0
20003606:	1e4d      	subs	r5, r1, #1
20003608:	e7ee      	b.n	200035e8 <strncpy+0x34>
2000360a:	4422      	add	r2, r4
2000360c:	2e00      	cmp	r6, #0
2000360e:	d0f7      	beq.n	20003600 <strncpy+0x4c>
20003610:	f803 1b01 	strb.w	r1, [r3], #1
20003614:	4293      	cmp	r3, r2
20003616:	d1fb      	bne.n	20003610 <strncpy+0x5c>
20003618:	bc70      	pop	{r4, r5, r6}
2000361a:	4770      	bx	lr

2000361c <_vfprintf_r>:
_vfprintf_r():
2000361c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
20003620:	b0d7      	sub	sp, #348	; 0x15c
20003622:	461c      	mov	r4, r3
20003624:	468b      	mov	fp, r1
20003626:	4617      	mov	r7, r2
20003628:	4681      	mov	r9, r0
2000362a:	f003 facb 	bl	20006bc4 <_localeconv_r>
2000362e:	6803      	ldr	r3, [r0, #0]
20003630:	940e      	str	r4, [sp, #56]	; 0x38
20003632:	4618      	mov	r0, r3
20003634:	9318      	str	r3, [sp, #96]	; 0x60
20003636:	f7ff ff8f 	bl	20003558 <strlen>
2000363a:	9017      	str	r0, [sp, #92]	; 0x5c
2000363c:	f1b9 0f00 	cmp.w	r9, #0
20003640:	d004      	beq.n	2000364c <_vfprintf_r+0x30>
20003642:	f8d9 3038 	ldr.w	r3, [r9, #56]	; 0x38
20003646:	2b00      	cmp	r3, #0
20003648:	f000 81ea 	beq.w	20003a20 <_vfprintf_r+0x404>
2000364c:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
20003650:	f013 0f01 	tst.w	r3, #1
20003654:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
20003658:	b29a      	uxth	r2, r3
2000365a:	d102      	bne.n	20003662 <_vfprintf_r+0x46>
2000365c:	059d      	lsls	r5, r3, #22
2000365e:	f140 86b5 	bpl.w	200043cc <_vfprintf_r+0xdb0>
20003662:	0490      	lsls	r0, r2, #18
20003664:	d40a      	bmi.n	2000367c <_vfprintf_r+0x60>
20003666:	f8db 2064 	ldr.w	r2, [fp, #100]	; 0x64
2000366a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
2000366e:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
20003672:	f8ab 300c 	strh.w	r3, [fp, #12]
20003676:	b29a      	uxth	r2, r3
20003678:	f8cb 1064 	str.w	r1, [fp, #100]	; 0x64
2000367c:	0711      	lsls	r1, r2, #28
2000367e:	f140 80bb 	bpl.w	200037f8 <_vfprintf_r+0x1dc>
20003682:	f8db 3010 	ldr.w	r3, [fp, #16]
20003686:	2b00      	cmp	r3, #0
20003688:	f000 80b6 	beq.w	200037f8 <_vfprintf_r+0x1dc>
2000368c:	f002 031a 	and.w	r3, r2, #26
20003690:	2b0a      	cmp	r3, #10
20003692:	f000 80bf 	beq.w	20003814 <_vfprintf_r+0x1f8>
20003696:	2300      	movs	r3, #0
20003698:	2100      	movs	r1, #0
2000369a:	2200      	movs	r2, #0
2000369c:	e9cd 332b 	strd	r3, r3, [sp, #172]	; 0xac
200036a0:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
200036a4:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
200036a8:	9313      	str	r3, [sp, #76]	; 0x4c
200036aa:	9319      	str	r3, [sp, #100]	; 0x64
200036ac:	930a      	str	r3, [sp, #40]	; 0x28
200036ae:	ab2d      	add	r3, sp, #180	; 0xb4
200036b0:	4698      	mov	r8, r3
200036b2:	932a      	str	r3, [sp, #168]	; 0xa8
200036b4:	783b      	ldrb	r3, [r7, #0]
200036b6:	46da      	mov	sl, fp
200036b8:	e9cd 1214 	strd	r1, r2, [sp, #80]	; 0x50
200036bc:	2b00      	cmp	r3, #0
200036be:	f000 8160 	beq.w	20003982 <_vfprintf_r+0x366>
200036c2:	463c      	mov	r4, r7
200036c4:	e004      	b.n	200036d0 <_vfprintf_r+0xb4>
200036c6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
200036ca:	2b00      	cmp	r3, #0
200036cc:	f000 80b9 	beq.w	20003842 <_vfprintf_r+0x226>
200036d0:	2b25      	cmp	r3, #37	; 0x25
200036d2:	d1f8      	bne.n	200036c6 <_vfprintf_r+0xaa>
200036d4:	1be5      	subs	r5, r4, r7
200036d6:	f040 80b7 	bne.w	20003848 <_vfprintf_r+0x22c>
200036da:	7823      	ldrb	r3, [r4, #0]
200036dc:	2b00      	cmp	r3, #0
200036de:	f000 8150 	beq.w	20003982 <_vfprintf_r+0x366>
200036e2:	2300      	movs	r3, #0
200036e4:	930b      	str	r3, [sp, #44]	; 0x2c
200036e6:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
200036ea:	9307      	str	r3, [sp, #28]
200036ec:	f04f 33ff 	mov.w	r3, #4294967295
200036f0:	7866      	ldrb	r6, [r4, #1]
200036f2:	f104 0b01 	add.w	fp, r4, #1
200036f6:	2120      	movs	r1, #32
200036f8:	242b      	movs	r4, #43	; 0x2b
200036fa:	9309      	str	r3, [sp, #36]	; 0x24
200036fc:	f10b 0b01 	add.w	fp, fp, #1
20003700:	f1a6 0320 	sub.w	r3, r6, #32
20003704:	2b5a      	cmp	r3, #90	; 0x5a
20003706:	f200 80bb 	bhi.w	20003880 <_vfprintf_r+0x264>
2000370a:	e8df f013 	tbh	[pc, r3, lsl #1]
2000370e:	02ea      	.short	0x02ea
20003710:	00b900b9 	.word	0x00b900b9
20003714:	00b902e3 	.word	0x00b902e3
20003718:	00b900b9 	.word	0x00b900b9
2000371c:	00b902bf 	.word	0x00b902bf
20003720:	006a00b9 	.word	0x006a00b9
20003724:	00b90252 	.word	0x00b90252
20003728:	025e0233 	.word	0x025e0233
2000372c:	025700b9 	.word	0x025700b9
20003730:	005b005b 	.word	0x005b005b
20003734:	005b005b 	.word	0x005b005b
20003738:	005b005b 	.word	0x005b005b
2000373c:	005b005b 	.word	0x005b005b
20003740:	00b9005b 	.word	0x00b9005b
20003744:	00b900b9 	.word	0x00b900b9
20003748:	00b900b9 	.word	0x00b900b9
2000374c:	00b900b9 	.word	0x00b900b9
20003750:	00b90142 	.word	0x00b90142
20003754:	019401c1 	.word	0x019401c1
20003758:	01420142 	.word	0x01420142
2000375c:	00b90142 	.word	0x00b90142
20003760:	00b900b9 	.word	0x00b900b9
20003764:	02af00b9 	.word	0x02af00b9
20003768:	00b900b9 	.word	0x00b900b9
2000376c:	00b901fb 	.word	0x00b901fb
20003770:	00b900b9 	.word	0x00b900b9
20003774:	00b901d5 	.word	0x00b901d5
20003778:	00b90278 	.word	0x00b90278
2000377c:	07b700b9 	.word	0x07b700b9
20003780:	00b900b9 	.word	0x00b900b9
20003784:	00b900b9 	.word	0x00b900b9
20003788:	00b900b9 	.word	0x00b900b9
2000378c:	00b900b9 	.word	0x00b900b9
20003790:	00b90142 	.word	0x00b90142
20003794:	019801c1 	.word	0x019801c1
20003798:	01420142 	.word	0x01420142
2000379c:	02a50142 	.word	0x02a50142
200037a0:	018d0198 	.word	0x018d0198
200037a4:	029b00b9 	.word	0x029b00b9
200037a8:	023a00b9 	.word	0x023a00b9
200037ac:	028901ff 	.word	0x028901ff
200037b0:	00b9018d 	.word	0x00b9018d
200037b4:	007201d5 	.word	0x007201d5
200037b8:	00b90792 	.word	0x00b90792
200037bc:	079600b9 	.word	0x079600b9
200037c0:	007200b9 	.word	0x007200b9
200037c4:	2200      	movs	r2, #0
200037c6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
200037ca:	f81b 6b01 	ldrb.w	r6, [fp], #1
200037ce:	eb02 0282 	add.w	r2, r2, r2, lsl #2
200037d2:	eb03 0242 	add.w	r2, r3, r2, lsl #1
200037d6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
200037da:	2b09      	cmp	r3, #9
200037dc:	d9f5      	bls.n	200037ca <_vfprintf_r+0x1ae>
200037de:	920b      	str	r2, [sp, #44]	; 0x2c
200037e0:	e78e      	b.n	20003700 <_vfprintf_r+0xe4>
200037e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
200037e4:	f853 2b04 	ldr.w	r2, [r3], #4
200037e8:	2a00      	cmp	r2, #0
200037ea:	920b      	str	r2, [sp, #44]	; 0x2c
200037ec:	930e      	str	r3, [sp, #56]	; 0x38
200037ee:	f2c0 81be 	blt.w	20003b6e <_vfprintf_r+0x552>
200037f2:	f89b 6000 	ldrb.w	r6, [fp]
200037f6:	e781      	b.n	200036fc <_vfprintf_r+0xe0>
200037f8:	4659      	mov	r1, fp
200037fa:	4648      	mov	r0, r9
200037fc:	f001 fd5e 	bl	200052bc <__swsetup_r>
20003800:	2800      	cmp	r0, #0
20003802:	f041 839b 	bne.w	20004f3c <_vfprintf_r+0x1920>
20003806:	f8bb 200c 	ldrh.w	r2, [fp, #12]
2000380a:	f002 031a 	and.w	r3, r2, #26
2000380e:	2b0a      	cmp	r3, #10
20003810:	f47f af41 	bne.w	20003696 <_vfprintf_r+0x7a>
20003814:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
20003818:	2b00      	cmp	r3, #0
2000381a:	f6ff af3c 	blt.w	20003696 <_vfprintf_r+0x7a>
2000381e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
20003822:	07de      	lsls	r6, r3, #31
20003824:	d402      	bmi.n	2000382c <_vfprintf_r+0x210>
20003826:	0595      	lsls	r5, r2, #22
20003828:	f141 8180 	bpl.w	20004b2c <_vfprintf_r+0x1510>
2000382c:	4623      	mov	r3, r4
2000382e:	463a      	mov	r2, r7
20003830:	4659      	mov	r1, fp
20003832:	4648      	mov	r0, r9
20003834:	f001 fcfe 	bl	20005234 <__sbprintf>
20003838:	900a      	str	r0, [sp, #40]	; 0x28
2000383a:	980a      	ldr	r0, [sp, #40]	; 0x28
2000383c:	b057      	add	sp, #348	; 0x15c
2000383e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20003842:	1be5      	subs	r5, r4, r7
20003844:	f000 809d 	beq.w	20003982 <_vfprintf_r+0x366>
20003848:	e9dd 322b 	ldrd	r3, r2, [sp, #172]	; 0xac
2000384c:	3301      	adds	r3, #1
2000384e:	442a      	add	r2, r5
20003850:	2b07      	cmp	r3, #7
20003852:	e9c8 7500 	strd	r7, r5, [r8]
20003856:	e9cd 322b 	strd	r3, r2, [sp, #172]	; 0xac
2000385a:	dc06      	bgt.n	2000386a <_vfprintf_r+0x24e>
2000385c:	f108 0808 	add.w	r8, r8, #8
20003860:	9a0a      	ldr	r2, [sp, #40]	; 0x28
20003862:	7823      	ldrb	r3, [r4, #0]
20003864:	442a      	add	r2, r5
20003866:	920a      	str	r2, [sp, #40]	; 0x28
20003868:	e738      	b.n	200036dc <_vfprintf_r+0xc0>
2000386a:	4651      	mov	r1, sl
2000386c:	4648      	mov	r0, r9
2000386e:	aa2a      	add	r2, sp, #168	; 0xa8
20003870:	f004 fb7c 	bl	20007f6c <__sprint_r>
20003874:	2800      	cmp	r0, #0
20003876:	f041 840e 	bne.w	20005096 <_vfprintf_r+0x1a7a>
2000387a:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
2000387e:	e7ef      	b.n	20003860 <_vfprintf_r+0x244>
20003880:	2e00      	cmp	r6, #0
20003882:	d07e      	beq.n	20003982 <_vfprintf_r+0x366>
20003884:	2300      	movs	r3, #0
20003886:	2101      	movs	r1, #1
20003888:	461a      	mov	r2, r3
2000388a:	9108      	str	r1, [sp, #32]
2000388c:	f88d 60f4 	strb.w	r6, [sp, #244]	; 0xf4
20003890:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
20003894:	930d      	str	r3, [sp, #52]	; 0x34
20003896:	9309      	str	r3, [sp, #36]	; 0x24
20003898:	9312      	str	r3, [sp, #72]	; 0x48
2000389a:	9316      	str	r3, [sp, #88]	; 0x58
2000389c:	9310      	str	r3, [sp, #64]	; 0x40
2000389e:	910c      	str	r1, [sp, #48]	; 0x30
200038a0:	af3d      	add	r7, sp, #244	; 0xf4
200038a2:	9b07      	ldr	r3, [sp, #28]
200038a4:	f013 0302 	ands.w	r3, r3, #2
200038a8:	d002      	beq.n	200038b0 <_vfprintf_r+0x294>
200038aa:	9908      	ldr	r1, [sp, #32]
200038ac:	3102      	adds	r1, #2
200038ae:	9108      	str	r1, [sp, #32]
200038b0:	9907      	ldr	r1, [sp, #28]
200038b2:	f011 0184 	ands.w	r1, r1, #132	; 0x84
200038b6:	910f      	str	r1, [sp, #60]	; 0x3c
200038b8:	d105      	bne.n	200038c6 <_vfprintf_r+0x2aa>
200038ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
200038bc:	9808      	ldr	r0, [sp, #32]
200038be:	1a0d      	subs	r5, r1, r0
200038c0:	2d00      	cmp	r5, #0
200038c2:	f300 839c 	bgt.w	20003ffe <_vfprintf_r+0x9e2>
200038c6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
200038c8:	b172      	cbz	r2, 200038e8 <_vfprintf_r+0x2cc>
200038ca:	2001      	movs	r0, #1
200038cc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
200038ce:	4404      	add	r4, r0
200038d0:	4402      	add	r2, r0
200038d2:	f10d 018b 	add.w	r1, sp, #139	; 0x8b
200038d6:	2a07      	cmp	r2, #7
200038d8:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
200038dc:	e9c8 1000 	strd	r1, r0, [r8]
200038e0:	f300 840b 	bgt.w	200040fa <_vfprintf_r+0xade>
200038e4:	f108 0808 	add.w	r8, r8, #8
200038e8:	b16b      	cbz	r3, 20003906 <_vfprintf_r+0x2ea>
200038ea:	2102      	movs	r1, #2
200038ec:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200038ee:	440c      	add	r4, r1
200038f0:	3301      	adds	r3, #1
200038f2:	aa23      	add	r2, sp, #140	; 0x8c
200038f4:	2b07      	cmp	r3, #7
200038f6:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
200038fa:	e9c8 2100 	strd	r2, r1, [r8]
200038fe:	f300 840b 	bgt.w	20004118 <_vfprintf_r+0xafc>
20003902:	f108 0808 	add.w	r8, r8, #8
20003906:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20003908:	2b80      	cmp	r3, #128	; 0x80
2000390a:	f000 8278 	beq.w	20003dfe <_vfprintf_r+0x7e2>
2000390e:	9b09      	ldr	r3, [sp, #36]	; 0x24
20003910:	9a0c      	ldr	r2, [sp, #48]	; 0x30
20003912:	1a9d      	subs	r5, r3, r2
20003914:	2d00      	cmp	r5, #0
20003916:	f300 82b2 	bgt.w	20003e7e <_vfprintf_r+0x862>
2000391a:	9b07      	ldr	r3, [sp, #28]
2000391c:	05dd      	lsls	r5, r3, #23
2000391e:	f100 8219 	bmi.w	20003d54 <_vfprintf_r+0x738>
20003922:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20003924:	9a0c      	ldr	r2, [sp, #48]	; 0x30
20003926:	3301      	adds	r3, #1
20003928:	4414      	add	r4, r2
2000392a:	2b07      	cmp	r3, #7
2000392c:	e9c8 7200 	strd	r7, r2, [r8]
20003930:	942c      	str	r4, [sp, #176]	; 0xb0
20003932:	932b      	str	r3, [sp, #172]	; 0xac
20003934:	f300 83d5 	bgt.w	200040e2 <_vfprintf_r+0xac6>
20003938:	f108 0808 	add.w	r8, r8, #8
2000393c:	9b07      	ldr	r3, [sp, #28]
2000393e:	075d      	lsls	r5, r3, #29
20003940:	d505      	bpl.n	2000394e <_vfprintf_r+0x332>
20003942:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20003944:	9a08      	ldr	r2, [sp, #32]
20003946:	1a9d      	subs	r5, r3, r2
20003948:	2d00      	cmp	r5, #0
2000394a:	f300 83f2 	bgt.w	20004132 <_vfprintf_r+0xb16>
2000394e:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	; 0x28
20003952:	9908      	ldr	r1, [sp, #32]
20003954:	428a      	cmp	r2, r1
20003956:	bfac      	ite	ge
20003958:	189b      	addge	r3, r3, r2
2000395a:	185b      	addlt	r3, r3, r1
2000395c:	930a      	str	r3, [sp, #40]	; 0x28
2000395e:	2c00      	cmp	r4, #0
20003960:	f040 82c1 	bne.w	20003ee6 <_vfprintf_r+0x8ca>
20003964:	2300      	movs	r3, #0
20003966:	932b      	str	r3, [sp, #172]	; 0xac
20003968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2000396a:	b11b      	cbz	r3, 20003974 <_vfprintf_r+0x358>
2000396c:	4648      	mov	r0, r9
2000396e:	990d      	ldr	r1, [sp, #52]	; 0x34
20003970:	f002 fe88 	bl	20006684 <_free_r>
20003974:	465f      	mov	r7, fp
20003976:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
2000397a:	783b      	ldrb	r3, [r7, #0]
2000397c:	2b00      	cmp	r3, #0
2000397e:	f47f aea0 	bne.w	200036c2 <_vfprintf_r+0xa6>
20003982:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
20003984:	46d3      	mov	fp, sl
20003986:	2b00      	cmp	r3, #0
20003988:	f040 87fb 	bne.w	20004982 <_vfprintf_r+0x1366>
2000398c:	2300      	movs	r3, #0
2000398e:	932b      	str	r3, [sp, #172]	; 0xac
20003990:	e2b7      	b.n	20003f02 <_vfprintf_r+0x8e6>
20003992:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003994:	3307      	adds	r3, #7
20003996:	f023 0307 	bic.w	r3, r3, #7
2000399a:	4619      	mov	r1, r3
2000399c:	e8f1 2302 	ldrd	r2, r3, [r1], #8
200039a0:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
200039a4:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
200039a8:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
200039ac:	461d      	mov	r5, r3
200039ae:	4618      	mov	r0, r3
200039b0:	910e      	str	r1, [sp, #56]	; 0x38
200039b2:	f04f 32ff 	mov.w	r2, #4294967295
200039b6:	4621      	mov	r1, r4
200039b8:	4bb0      	ldr	r3, [pc, #704]	; (20003c7c <_vfprintf_r+0x660>)
200039ba:	f004 fdcf 	bl	2000855c <__aeabi_dcmpun>
200039be:	2800      	cmp	r0, #0
200039c0:	f040 856f 	bne.w	200044a2 <_vfprintf_r+0xe86>
200039c4:	4628      	mov	r0, r5
200039c6:	4621      	mov	r1, r4
200039c8:	f04f 32ff 	mov.w	r2, #4294967295
200039cc:	4bab      	ldr	r3, [pc, #684]	; (20003c7c <_vfprintf_r+0x660>)
200039ce:	f004 fda7 	bl	20008520 <__aeabi_dcmple>
200039d2:	2800      	cmp	r0, #0
200039d4:	f040 8565 	bne.w	200044a2 <_vfprintf_r+0xe86>
200039d8:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
200039dc:	2200      	movs	r2, #0
200039de:	2300      	movs	r3, #0
200039e0:	f004 fd94 	bl	2000850c <__aeabi_dcmplt>
200039e4:	2800      	cmp	r0, #0
200039e6:	f041 80e9 	bne.w	20004bbc <_vfprintf_r+0x15a0>
200039ea:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
200039ee:	2003      	movs	r0, #3
200039f0:	2100      	movs	r1, #0
200039f2:	4fa3      	ldr	r7, [pc, #652]	; (20003c80 <_vfprintf_r+0x664>)
200039f4:	4ba3      	ldr	r3, [pc, #652]	; (20003c84 <_vfprintf_r+0x668>)
200039f6:	9008      	str	r0, [sp, #32]
200039f8:	910d      	str	r1, [sp, #52]	; 0x34
200039fa:	2e47      	cmp	r6, #71	; 0x47
200039fc:	bfc8      	it	gt
200039fe:	461f      	movgt	r7, r3
20003a00:	9c07      	ldr	r4, [sp, #28]
20003a02:	900c      	str	r0, [sp, #48]	; 0x30
20003a04:	f024 0480 	bic.w	r4, r4, #128	; 0x80
20003a08:	9407      	str	r4, [sp, #28]
20003a0a:	9109      	str	r1, [sp, #36]	; 0x24
20003a0c:	9112      	str	r1, [sp, #72]	; 0x48
20003a0e:	9116      	str	r1, [sp, #88]	; 0x58
20003a10:	9110      	str	r1, [sp, #64]	; 0x40
20003a12:	2a00      	cmp	r2, #0
20003a14:	f43f af45 	beq.w	200038a2 <_vfprintf_r+0x286>
20003a18:	9b08      	ldr	r3, [sp, #32]
20003a1a:	3301      	adds	r3, #1
20003a1c:	9308      	str	r3, [sp, #32]
20003a1e:	e740      	b.n	200038a2 <_vfprintf_r+0x286>
20003a20:	4648      	mov	r0, r9
20003a22:	f002 fd8f 	bl	20006544 <__sinit>
20003a26:	e611      	b.n	2000364c <_vfprintf_r+0x30>
20003a28:	9b07      	ldr	r3, [sp, #28]
20003a2a:	f89b 6000 	ldrb.w	r6, [fp]
20003a2e:	f043 0320 	orr.w	r3, r3, #32
20003a32:	9307      	str	r3, [sp, #28]
20003a34:	e662      	b.n	200036fc <_vfprintf_r+0xe0>
20003a36:	9b07      	ldr	r3, [sp, #28]
20003a38:	f043 0310 	orr.w	r3, r3, #16
20003a3c:	9307      	str	r3, [sp, #28]
20003a3e:	9b07      	ldr	r3, [sp, #28]
20003a40:	069c      	lsls	r4, r3, #26
20003a42:	f140 848e 	bpl.w	20004362 <_vfprintf_r+0xd46>
20003a46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003a48:	3307      	adds	r3, #7
20003a4a:	f023 0307 	bic.w	r3, r3, #7
20003a4e:	4619      	mov	r1, r3
20003a50:	e8f1 2302 	ldrd	r2, r3, [r1], #8
20003a54:	4614      	mov	r4, r2
20003a56:	461d      	mov	r5, r3
20003a58:	910e      	str	r1, [sp, #56]	; 0x38
20003a5a:	2a00      	cmp	r2, #0
20003a5c:	f173 0300 	sbcs.w	r3, r3, #0
20003a60:	f2c0 84f8 	blt.w	20004454 <_vfprintf_r+0xe38>
20003a64:	9b09      	ldr	r3, [sp, #36]	; 0x24
20003a66:	3301      	adds	r3, #1
20003a68:	9b07      	ldr	r3, [sp, #28]
20003a6a:	f000 8309 	beq.w	20004080 <_vfprintf_r+0xa64>
20003a6e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
20003a72:	ea54 0205 	orrs.w	r2, r4, r5
20003a76:	9308      	str	r3, [sp, #32]
20003a78:	f040 8303 	bne.w	20004082 <_vfprintf_r+0xa66>
20003a7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
20003a7e:	2a00      	cmp	r2, #0
20003a80:	f040 8304 	bne.w	2000408c <_vfprintf_r+0xa70>
20003a84:	9307      	str	r3, [sp, #28]
20003a86:	2300      	movs	r3, #0
20003a88:	af56      	add	r7, sp, #344	; 0x158
20003a8a:	9309      	str	r3, [sp, #36]	; 0x24
20003a8c:	930c      	str	r3, [sp, #48]	; 0x30
20003a8e:	e153      	b.n	20003d38 <_vfprintf_r+0x71c>
20003a90:	2100      	movs	r1, #0
20003a92:	2401      	movs	r4, #1
20003a94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003a96:	460a      	mov	r2, r1
20003a98:	f853 0b04 	ldr.w	r0, [r3], #4
20003a9c:	9408      	str	r4, [sp, #32]
20003a9e:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
20003aa2:	f88d 108b 	strb.w	r1, [sp, #139]	; 0x8b
20003aa6:	f88d 00f4 	strb.w	r0, [sp, #244]	; 0xf4
20003aaa:	9109      	str	r1, [sp, #36]	; 0x24
20003aac:	9112      	str	r1, [sp, #72]	; 0x48
20003aae:	9116      	str	r1, [sp, #88]	; 0x58
20003ab0:	9110      	str	r1, [sp, #64]	; 0x40
20003ab2:	940c      	str	r4, [sp, #48]	; 0x30
20003ab4:	af3d      	add	r7, sp, #244	; 0xf4
20003ab6:	e6f4      	b.n	200038a2 <_vfprintf_r+0x286>
20003ab8:	2500      	movs	r5, #0
20003aba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
20003abc:	f88d 508b 	strb.w	r5, [sp, #139]	; 0x8b
20003ac0:	f854 7b04 	ldr.w	r7, [r4], #4
20003ac4:	2f00      	cmp	r7, #0
20003ac6:	f000 8623 	beq.w	20004710 <_vfprintf_r+0x10f4>
20003aca:	9a09      	ldr	r2, [sp, #36]	; 0x24
20003acc:	4613      	mov	r3, r2
20003ace:	3301      	adds	r3, #1
20003ad0:	f000 8716 	beq.w	20004900 <_vfprintf_r+0x12e4>
20003ad4:	4629      	mov	r1, r5
20003ad6:	4638      	mov	r0, r7
20003ad8:	f003 fba6 	bl	20007228 <memchr>
20003adc:	900d      	str	r0, [sp, #52]	; 0x34
20003ade:	2800      	cmp	r0, #0
20003ae0:	f001 81a6 	beq.w	20004e30 <_vfprintf_r+0x1814>
20003ae4:	462b      	mov	r3, r5
20003ae6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
20003ae8:	9509      	str	r5, [sp, #36]	; 0x24
20003aea:	1bd2      	subs	r2, r2, r7
20003aec:	920c      	str	r2, [sp, #48]	; 0x30
20003aee:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
20003af2:	9208      	str	r2, [sp, #32]
20003af4:	940e      	str	r4, [sp, #56]	; 0x38
20003af6:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
20003afa:	930d      	str	r3, [sp, #52]	; 0x34
20003afc:	9312      	str	r3, [sp, #72]	; 0x48
20003afe:	9316      	str	r3, [sp, #88]	; 0x58
20003b00:	9310      	str	r3, [sp, #64]	; 0x40
20003b02:	e786      	b.n	20003a12 <_vfprintf_r+0x3f6>
20003b04:	9b07      	ldr	r3, [sp, #28]
20003b06:	f043 0310 	orr.w	r3, r3, #16
20003b0a:	9307      	str	r3, [sp, #28]
20003b0c:	9b07      	ldr	r3, [sp, #28]
20003b0e:	069a      	lsls	r2, r3, #26
20003b10:	f140 8448 	bpl.w	200043a4 <_vfprintf_r+0xd88>
20003b14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003b16:	3307      	adds	r3, #7
20003b18:	f023 0307 	bic.w	r3, r3, #7
20003b1c:	e8f3 4502 	ldrd	r4, r5, [r3], #8
20003b20:	930e      	str	r3, [sp, #56]	; 0x38
20003b22:	9b07      	ldr	r3, [sp, #28]
20003b24:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
20003b28:	9308      	str	r3, [sp, #32]
20003b2a:	2300      	movs	r3, #0
20003b2c:	2200      	movs	r2, #0
20003b2e:	f88d 208b 	strb.w	r2, [sp, #139]	; 0x8b
20003b32:	9a09      	ldr	r2, [sp, #36]	; 0x24
20003b34:	4611      	mov	r1, r2
20003b36:	3101      	adds	r1, #1
20003b38:	f000 80df 	beq.w	20003cfa <_vfprintf_r+0x6de>
20003b3c:	9908      	ldr	r1, [sp, #32]
20003b3e:	f021 0180 	bic.w	r1, r1, #128	; 0x80
20003b42:	9107      	str	r1, [sp, #28]
20003b44:	ea54 0105 	orrs.w	r1, r4, r5
20003b48:	f040 80d5 	bne.w	20003cf6 <_vfprintf_r+0x6da>
20003b4c:	2a00      	cmp	r2, #0
20003b4e:	f040 8238 	bne.w	20003fc2 <_vfprintf_r+0x9a6>
20003b52:	2b00      	cmp	r3, #0
20003b54:	d197      	bne.n	20003a86 <_vfprintf_r+0x46a>
20003b56:	9b08      	ldr	r3, [sp, #32]
20003b58:	f013 0301 	ands.w	r3, r3, #1
20003b5c:	930c      	str	r3, [sp, #48]	; 0x30
20003b5e:	f000 8465 	beq.w	2000442c <_vfprintf_r+0xe10>
20003b62:	2330      	movs	r3, #48	; 0x30
20003b64:	f20d 1757 	addw	r7, sp, #343	; 0x157
20003b68:	f88d 3157 	strb.w	r3, [sp, #343]	; 0x157
20003b6c:	e0e4      	b.n	20003d38 <_vfprintf_r+0x71c>
20003b6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20003b70:	425b      	negs	r3, r3
20003b72:	930b      	str	r3, [sp, #44]	; 0x2c
20003b74:	9b07      	ldr	r3, [sp, #28]
20003b76:	f89b 6000 	ldrb.w	r6, [fp]
20003b7a:	f043 0304 	orr.w	r3, r3, #4
20003b7e:	9307      	str	r3, [sp, #28]
20003b80:	e5bc      	b.n	200036fc <_vfprintf_r+0xe0>
20003b82:	9b07      	ldr	r3, [sp, #28]
20003b84:	069d      	lsls	r5, r3, #26
20003b86:	f100 8470 	bmi.w	2000446a <_vfprintf_r+0xe4e>
20003b8a:	9b07      	ldr	r3, [sp, #28]
20003b8c:	06dc      	lsls	r4, r3, #27
20003b8e:	f100 867b 	bmi.w	20004888 <_vfprintf_r+0x126c>
20003b92:	9b07      	ldr	r3, [sp, #28]
20003b94:	0658      	lsls	r0, r3, #25
20003b96:	f100 8706 	bmi.w	200049a6 <_vfprintf_r+0x138a>
20003b9a:	9b07      	ldr	r3, [sp, #28]
20003b9c:	0599      	lsls	r1, r3, #22
20003b9e:	f140 8673 	bpl.w	20004888 <_vfprintf_r+0x126c>
20003ba2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003ba4:	990a      	ldr	r1, [sp, #40]	; 0x28
20003ba6:	f853 2b04 	ldr.w	r2, [r3], #4
20003baa:	465f      	mov	r7, fp
20003bac:	7011      	strb	r1, [r2, #0]
20003bae:	930e      	str	r3, [sp, #56]	; 0x38
20003bb0:	e6e3      	b.n	2000397a <_vfprintf_r+0x35e>
20003bb2:	f89b 6000 	ldrb.w	r6, [fp]
20003bb6:	f88d 408b 	strb.w	r4, [sp, #139]	; 0x8b
20003bba:	e59f      	b.n	200036fc <_vfprintf_r+0xe0>
20003bbc:	9b07      	ldr	r3, [sp, #28]
20003bbe:	f89b 6000 	ldrb.w	r6, [fp]
20003bc2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
20003bc6:	9307      	str	r3, [sp, #28]
20003bc8:	e598      	b.n	200036fc <_vfprintf_r+0xe0>
20003bca:	465a      	mov	r2, fp
20003bcc:	f812 6b01 	ldrb.w	r6, [r2], #1
20003bd0:	2e2a      	cmp	r6, #42	; 0x2a
20003bd2:	f001 8307 	beq.w	200051e4 <_vfprintf_r+0x1bc8>
20003bd6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
20003bda:	2b09      	cmp	r3, #9
20003bdc:	4693      	mov	fp, r2
20003bde:	bf98      	it	ls
20003be0:	2200      	movls	r2, #0
20003be2:	f201 816f 	bhi.w	20004ec4 <_vfprintf_r+0x18a8>
20003be6:	f81b 6b01 	ldrb.w	r6, [fp], #1
20003bea:	eb02 0282 	add.w	r2, r2, r2, lsl #2
20003bee:	eb03 0242 	add.w	r2, r3, r2, lsl #1
20003bf2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
20003bf6:	2b09      	cmp	r3, #9
20003bf8:	d9f5      	bls.n	20003be6 <_vfprintf_r+0x5ca>
20003bfa:	9209      	str	r2, [sp, #36]	; 0x24
20003bfc:	e580      	b.n	20003700 <_vfprintf_r+0xe4>
20003bfe:	9b07      	ldr	r3, [sp, #28]
20003c00:	f043 0310 	orr.w	r3, r3, #16
20003c04:	9308      	str	r3, [sp, #32]
20003c06:	9b08      	ldr	r3, [sp, #32]
20003c08:	069d      	lsls	r5, r3, #26
20003c0a:	f140 83bb 	bpl.w	20004384 <_vfprintf_r+0xd68>
20003c0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003c10:	3307      	adds	r3, #7
20003c12:	f023 0307 	bic.w	r3, r3, #7
20003c16:	e8f3 4502 	ldrd	r4, r5, [r3], #8
20003c1a:	930e      	str	r3, [sp, #56]	; 0x38
20003c1c:	2301      	movs	r3, #1
20003c1e:	e785      	b.n	20003b2c <_vfprintf_r+0x510>
20003c20:	f647 0230 	movw	r2, #30768	; 0x7830
20003c24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20003c26:	9907      	ldr	r1, [sp, #28]
20003c28:	f853 4b04 	ldr.w	r4, [r3], #4
20003c2c:	f041 0102 	orr.w	r1, r1, #2
20003c30:	930e      	str	r3, [sp, #56]	; 0x38
20003c32:	4b15      	ldr	r3, [pc, #84]	; (20003c88 <_vfprintf_r+0x66c>)
20003c34:	2500      	movs	r5, #0
20003c36:	9319      	str	r3, [sp, #100]	; 0x64
20003c38:	2678      	movs	r6, #120	; 0x78
20003c3a:	2302      	movs	r3, #2
20003c3c:	9108      	str	r1, [sp, #32]
20003c3e:	f8ad 208c 	strh.w	r2, [sp, #140]	; 0x8c
20003c42:	e773      	b.n	20003b2c <_vfprintf_r+0x510>
20003c44:	f89b 6000 	ldrb.w	r6, [fp]
20003c48:	9b07      	ldr	r3, [sp, #28]
20003c4a:	2e6c      	cmp	r6, #108	; 0x6c
20003c4c:	f000 8541 	beq.w	200046d2 <_vfprintf_r+0x10b6>
20003c50:	f043 0310 	orr.w	r3, r3, #16
20003c54:	9307      	str	r3, [sp, #28]
20003c56:	e551      	b.n	200036fc <_vfprintf_r+0xe0>
20003c58:	f89b 6000 	ldrb.w	r6, [fp]
20003c5c:	9b07      	ldr	r3, [sp, #28]
20003c5e:	2e68      	cmp	r6, #104	; 0x68
20003c60:	f000 854d 	beq.w	200046fe <_vfprintf_r+0x10e2>
20003c64:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20003c68:	9307      	str	r3, [sp, #28]
20003c6a:	e547      	b.n	200036fc <_vfprintf_r+0xe0>
20003c6c:	9b07      	ldr	r3, [sp, #28]
20003c6e:	f89b 6000 	ldrb.w	r6, [fp]
20003c72:	f043 0308 	orr.w	r3, r3, #8
20003c76:	9307      	str	r3, [sp, #28]
20003c78:	e540      	b.n	200036fc <_vfprintf_r+0xe0>
20003c7a:	bf00      	nop
20003c7c:	7fefffff 	.word	0x7fefffff
20003c80:	20008f94 	.word	0x20008f94
20003c84:	20008f98 	.word	0x20008f98
20003c88:	20008fa4 	.word	0x20008fa4
20003c8c:	4648      	mov	r0, r9
20003c8e:	f002 ff99 	bl	20006bc4 <_localeconv_r>
20003c92:	6843      	ldr	r3, [r0, #4]
20003c94:	4618      	mov	r0, r3
20003c96:	931c      	str	r3, [sp, #112]	; 0x70
20003c98:	f7ff fc5e 	bl	20003558 <strlen>
20003c9c:	4603      	mov	r3, r0
20003c9e:	4648      	mov	r0, r9
20003ca0:	461d      	mov	r5, r3
20003ca2:	931d      	str	r3, [sp, #116]	; 0x74
20003ca4:	f002 ff8e 	bl	20006bc4 <_localeconv_r>
20003ca8:	6882      	ldr	r2, [r0, #8]
20003caa:	2120      	movs	r1, #32
20003cac:	921a      	str	r2, [sp, #104]	; 0x68
20003cae:	2d00      	cmp	r5, #0
20003cb0:	f43f ad9f 	beq.w	200037f2 <_vfprintf_r+0x1d6>
20003cb4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
20003cb6:	2b00      	cmp	r3, #0
20003cb8:	f43f ad9b 	beq.w	200037f2 <_vfprintf_r+0x1d6>
20003cbc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
20003cbe:	781b      	ldrb	r3, [r3, #0]
20003cc0:	2b00      	cmp	r3, #0
20003cc2:	f43f ad96 	beq.w	200037f2 <_vfprintf_r+0x1d6>
20003cc6:	9b07      	ldr	r3, [sp, #28]
20003cc8:	f89b 6000 	ldrb.w	r6, [fp]
20003ccc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
20003cd0:	9307      	str	r3, [sp, #28]
20003cd2:	e513      	b.n	200036fc <_vfprintf_r+0xe0>
20003cd4:	9b07      	ldr	r3, [sp, #28]
20003cd6:	f89b 6000 	ldrb.w	r6, [fp]
20003cda:	f043 0301 	orr.w	r3, r3, #1
20003cde:	9307      	str	r3, [sp, #28]
20003ce0:	e50c      	b.n	200036fc <_vfprintf_r+0xe0>
20003ce2:	f89d 308b 	ldrb.w	r3, [sp, #139]	; 0x8b
20003ce6:	2b00      	cmp	r3, #0
20003ce8:	f47f ad83 	bne.w	200037f2 <_vfprintf_r+0x1d6>
20003cec:	f89b 6000 	ldrb.w	r6, [fp]
20003cf0:	f88d 108b 	strb.w	r1, [sp, #139]	; 0x8b
20003cf4:	e502      	b.n	200036fc <_vfprintf_r+0xe0>
20003cf6:	9a07      	ldr	r2, [sp, #28]
20003cf8:	9208      	str	r2, [sp, #32]
20003cfa:	2b01      	cmp	r3, #1
20003cfc:	f000 81c1 	beq.w	20004082 <_vfprintf_r+0xa66>
20003d00:	2b02      	cmp	r3, #2
20003d02:	f000 8166 	beq.w	20003fd2 <_vfprintf_r+0x9b6>
20003d06:	af56      	add	r7, sp, #344	; 0x158
20003d08:	08e2      	lsrs	r2, r4, #3
20003d0a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
20003d0e:	08e9      	lsrs	r1, r5, #3
20003d10:	f004 0307 	and.w	r3, r4, #7
20003d14:	460d      	mov	r5, r1
20003d16:	4614      	mov	r4, r2
20003d18:	3330      	adds	r3, #48	; 0x30
20003d1a:	ea54 0105 	orrs.w	r1, r4, r5
20003d1e:	463a      	mov	r2, r7
20003d20:	f807 3d01 	strb.w	r3, [r7, #-1]!
20003d24:	d1f0      	bne.n	20003d08 <_vfprintf_r+0x6ec>
20003d26:	9908      	ldr	r1, [sp, #32]
20003d28:	4608      	mov	r0, r1
20003d2a:	07c0      	lsls	r0, r0, #31
20003d2c:	f100 82d3 	bmi.w	200042d6 <_vfprintf_r+0xcba>
20003d30:	ab56      	add	r3, sp, #344	; 0x158
20003d32:	1bdb      	subs	r3, r3, r7
20003d34:	9107      	str	r1, [sp, #28]
20003d36:	930c      	str	r3, [sp, #48]	; 0x30
20003d38:	2300      	movs	r3, #0
20003d3a:	9909      	ldr	r1, [sp, #36]	; 0x24
20003d3c:	930d      	str	r3, [sp, #52]	; 0x34
20003d3e:	9312      	str	r3, [sp, #72]	; 0x48
20003d40:	9316      	str	r3, [sp, #88]	; 0x58
20003d42:	9310      	str	r3, [sp, #64]	; 0x40
20003d44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20003d46:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
20003d4a:	428b      	cmp	r3, r1
20003d4c:	bfb8      	it	lt
20003d4e:	460b      	movlt	r3, r1
20003d50:	9308      	str	r3, [sp, #32]
20003d52:	e65e      	b.n	20003a12 <_vfprintf_r+0x3f6>
20003d54:	2e65      	cmp	r6, #101	; 0x65
20003d56:	f340 80e5 	ble.w	20003f24 <_vfprintf_r+0x908>
20003d5a:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
20003d5e:	2200      	movs	r2, #0
20003d60:	2300      	movs	r3, #0
20003d62:	f004 fbc9 	bl	200084f8 <__aeabi_dcmpeq>
20003d66:	2800      	cmp	r0, #0
20003d68:	f000 821b 	beq.w	200041a2 <_vfprintf_r+0xb86>
20003d6c:	2101      	movs	r1, #1
20003d6e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20003d70:	4acb      	ldr	r2, [pc, #812]	; (200040a0 <_vfprintf_r+0xa84>)
20003d72:	440b      	add	r3, r1
20003d74:	440c      	add	r4, r1
20003d76:	2b07      	cmp	r3, #7
20003d78:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20003d7c:	e9c8 2100 	strd	r2, r1, [r8]
20003d80:	f300 8567 	bgt.w	20004852 <_vfprintf_r+0x1236>
20003d84:	f108 0808 	add.w	r8, r8, #8
20003d88:	9b24      	ldr	r3, [sp, #144]	; 0x90
20003d8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
20003d8c:	4293      	cmp	r3, r2
20003d8e:	f280 8318 	bge.w	200043c2 <_vfprintf_r+0xda6>
20003d92:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20003d94:	9a17      	ldr	r2, [sp, #92]	; 0x5c
20003d96:	3301      	adds	r3, #1
20003d98:	9918      	ldr	r1, [sp, #96]	; 0x60
20003d9a:	4414      	add	r4, r2
20003d9c:	2b07      	cmp	r3, #7
20003d9e:	e9c8 1200 	strd	r1, r2, [r8]
20003da2:	942c      	str	r4, [sp, #176]	; 0xb0
20003da4:	932b      	str	r3, [sp, #172]	; 0xac
20003da6:	f300 849d 	bgt.w	200046e4 <_vfprintf_r+0x10c8>
20003daa:	f108 0808 	add.w	r8, r8, #8
20003dae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20003db0:	1e5d      	subs	r5, r3, #1
20003db2:	2d00      	cmp	r5, #0
20003db4:	f77f adc2 	ble.w	2000393c <_vfprintf_r+0x320>
20003db8:	2d10      	cmp	r5, #16
20003dba:	f340 8557 	ble.w	2000486c <_vfprintf_r+0x1250>
20003dbe:	4fb9      	ldr	r7, [pc, #740]	; (200040a4 <_vfprintf_r+0xa88>)
20003dc0:	2610      	movs	r6, #16
20003dc2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20003dc4:	970f      	str	r7, [sp, #60]	; 0x3c
20003dc6:	e005      	b.n	20003dd4 <_vfprintf_r+0x7b8>
20003dc8:	f108 0808 	add.w	r8, r8, #8
20003dcc:	3d10      	subs	r5, #16
20003dce:	2d10      	cmp	r5, #16
20003dd0:	f340 854f 	ble.w	20004872 <_vfprintf_r+0x1256>
20003dd4:	3301      	adds	r3, #1
20003dd6:	3410      	adds	r4, #16
20003dd8:	2b07      	cmp	r3, #7
20003dda:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20003dde:	e9c8 7600 	strd	r7, r6, [r8]
20003de2:	ddf1      	ble.n	20003dc8 <_vfprintf_r+0x7ac>
20003de4:	4651      	mov	r1, sl
20003de6:	4648      	mov	r0, r9
20003de8:	aa2a      	add	r2, sp, #168	; 0xa8
20003dea:	f004 f8bf 	bl	20007f6c <__sprint_r>
20003dee:	2800      	cmp	r0, #0
20003df0:	f040 8081 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20003df4:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
20003df8:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20003dfc:	e7e6      	b.n	20003dcc <_vfprintf_r+0x7b0>
20003dfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20003e00:	9a08      	ldr	r2, [sp, #32]
20003e02:	1a9d      	subs	r5, r3, r2
20003e04:	2d00      	cmp	r5, #0
20003e06:	f77f ad82 	ble.w	2000390e <_vfprintf_r+0x2f2>
20003e0a:	2d10      	cmp	r5, #16
20003e0c:	f341 80a7 	ble.w	20004f5e <_vfprintf_r+0x1942>
20003e10:	48a4      	ldr	r0, [pc, #656]	; (200040a4 <_vfprintf_r+0xa88>)
20003e12:	4621      	mov	r1, r4
20003e14:	2310      	movs	r3, #16
20003e16:	4604      	mov	r4, r0
20003e18:	9a2b      	ldr	r2, [sp, #172]	; 0xac
20003e1a:	900f      	str	r0, [sp, #60]	; 0x3c
20003e1c:	e004      	b.n	20003e28 <_vfprintf_r+0x80c>
20003e1e:	3d10      	subs	r5, #16
20003e20:	2d10      	cmp	r5, #16
20003e22:	f108 0808 	add.w	r8, r8, #8
20003e26:	dd17      	ble.n	20003e58 <_vfprintf_r+0x83c>
20003e28:	3201      	adds	r2, #1
20003e2a:	3110      	adds	r1, #16
20003e2c:	2a07      	cmp	r2, #7
20003e2e:	e9cd 212b 	strd	r2, r1, [sp, #172]	; 0xac
20003e32:	e9c8 4300 	strd	r4, r3, [r8]
20003e36:	ddf2      	ble.n	20003e1e <_vfprintf_r+0x802>
20003e38:	4651      	mov	r1, sl
20003e3a:	4648      	mov	r0, r9
20003e3c:	aa2a      	add	r2, sp, #168	; 0xa8
20003e3e:	f004 f895 	bl	20007f6c <__sprint_r>
20003e42:	2800      	cmp	r0, #0
20003e44:	d157      	bne.n	20003ef6 <_vfprintf_r+0x8da>
20003e46:	e9dd 212b 	ldrd	r2, r1, [sp, #172]	; 0xac
20003e4a:	3d10      	subs	r5, #16
20003e4c:	2d10      	cmp	r5, #16
20003e4e:	f04f 0310 	mov.w	r3, #16
20003e52:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20003e56:	dce7      	bgt.n	20003e28 <_vfprintf_r+0x80c>
20003e58:	460c      	mov	r4, r1
20003e5a:	3201      	adds	r2, #1
20003e5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20003e5e:	442c      	add	r4, r5
20003e60:	2a07      	cmp	r2, #7
20003e62:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
20003e66:	e9c8 3500 	strd	r3, r5, [r8]
20003e6a:	f300 840a 	bgt.w	20004682 <_vfprintf_r+0x1066>
20003e6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
20003e70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
20003e72:	f108 0808 	add.w	r8, r8, #8
20003e76:	1a9d      	subs	r5, r3, r2
20003e78:	2d00      	cmp	r5, #0
20003e7a:	f77f ad4e 	ble.w	2000391a <_vfprintf_r+0x2fe>
20003e7e:	2d10      	cmp	r5, #16
20003e80:	f340 857a 	ble.w	20004978 <_vfprintf_r+0x135c>
20003e84:	4887      	ldr	r0, [pc, #540]	; (200040a4 <_vfprintf_r+0xa88>)
20003e86:	4621      	mov	r1, r4
20003e88:	2310      	movs	r3, #16
20003e8a:	4604      	mov	r4, r0
20003e8c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
20003e8e:	900f      	str	r0, [sp, #60]	; 0x3c
20003e90:	e004      	b.n	20003e9c <_vfprintf_r+0x880>
20003e92:	3d10      	subs	r5, #16
20003e94:	2d10      	cmp	r5, #16
20003e96:	f108 0808 	add.w	r8, r8, #8
20003e9a:	dd16      	ble.n	20003eca <_vfprintf_r+0x8ae>
20003e9c:	3201      	adds	r2, #1
20003e9e:	3110      	adds	r1, #16
20003ea0:	2a07      	cmp	r2, #7
20003ea2:	e9cd 212b 	strd	r2, r1, [sp, #172]	; 0xac
20003ea6:	e9c8 4300 	strd	r4, r3, [r8]
20003eaa:	ddf2      	ble.n	20003e92 <_vfprintf_r+0x876>
20003eac:	4651      	mov	r1, sl
20003eae:	4648      	mov	r0, r9
20003eb0:	aa2a      	add	r2, sp, #168	; 0xa8
20003eb2:	f004 f85b 	bl	20007f6c <__sprint_r>
20003eb6:	b9f0      	cbnz	r0, 20003ef6 <_vfprintf_r+0x8da>
20003eb8:	e9dd 212b 	ldrd	r2, r1, [sp, #172]	; 0xac
20003ebc:	3d10      	subs	r5, #16
20003ebe:	2d10      	cmp	r5, #16
20003ec0:	f04f 0310 	mov.w	r3, #16
20003ec4:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20003ec8:	dce8      	bgt.n	20003e9c <_vfprintf_r+0x880>
20003eca:	460c      	mov	r4, r1
20003ecc:	3201      	adds	r2, #1
20003ece:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20003ed0:	442c      	add	r4, r5
20003ed2:	2a07      	cmp	r2, #7
20003ed4:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
20003ed8:	e9c8 3500 	strd	r3, r5, [r8]
20003edc:	f300 8234 	bgt.w	20004348 <_vfprintf_r+0xd2c>
20003ee0:	f108 0808 	add.w	r8, r8, #8
20003ee4:	e519      	b.n	2000391a <_vfprintf_r+0x2fe>
20003ee6:	4651      	mov	r1, sl
20003ee8:	4648      	mov	r0, r9
20003eea:	aa2a      	add	r2, sp, #168	; 0xa8
20003eec:	f004 f83e 	bl	20007f6c <__sprint_r>
20003ef0:	2800      	cmp	r0, #0
20003ef2:	f43f ad37 	beq.w	20003964 <_vfprintf_r+0x348>
20003ef6:	46d3      	mov	fp, sl
20003ef8:	990d      	ldr	r1, [sp, #52]	; 0x34
20003efa:	b111      	cbz	r1, 20003f02 <_vfprintf_r+0x8e6>
20003efc:	4648      	mov	r0, r9
20003efe:	f002 fbc1 	bl	20006684 <_free_r>
20003f02:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
20003f06:	f013 0f01 	tst.w	r3, #1
20003f0a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
20003f0e:	d102      	bne.n	20003f16 <_vfprintf_r+0x8fa>
20003f10:	0598      	lsls	r0, r3, #22
20003f12:	f140 8477 	bpl.w	20004804 <_vfprintf_r+0x11e8>
20003f16:	0659      	lsls	r1, r3, #25
20003f18:	f101 801c 	bmi.w	20004f54 <_vfprintf_r+0x1938>
20003f1c:	980a      	ldr	r0, [sp, #40]	; 0x28
20003f1e:	b057      	add	sp, #348	; 0x15c
20003f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20003f24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20003f26:	2b01      	cmp	r3, #1
20003f28:	f340 81b7 	ble.w	2000429a <_vfprintf_r+0xc7e>
20003f2c:	2301      	movs	r3, #1
20003f2e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
20003f30:	441c      	add	r4, r3
20003f32:	441d      	add	r5, r3
20003f34:	2d07      	cmp	r5, #7
20003f36:	942c      	str	r4, [sp, #176]	; 0xb0
20003f38:	f8c8 7000 	str.w	r7, [r8]
20003f3c:	952b      	str	r5, [sp, #172]	; 0xac
20003f3e:	f8c8 3004 	str.w	r3, [r8, #4]
20003f42:	f300 83ff 	bgt.w	20004744 <_vfprintf_r+0x1128>
20003f46:	f108 0808 	add.w	r8, r8, #8
20003f4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
20003f4c:	3501      	adds	r5, #1
20003f4e:	9a18      	ldr	r2, [sp, #96]	; 0x60
20003f50:	441c      	add	r4, r3
20003f52:	2d07      	cmp	r5, #7
20003f54:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
20003f58:	e9c8 2300 	strd	r2, r3, [r8]
20003f5c:	f300 8400 	bgt.w	20004760 <_vfprintf_r+0x1144>
20003f60:	f108 0808 	add.w	r8, r8, #8
20003f64:	2300      	movs	r3, #0
20003f66:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
20003f6a:	2200      	movs	r2, #0
20003f6c:	f004 fac4 	bl	200084f8 <__aeabi_dcmpeq>
20003f70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20003f72:	2800      	cmp	r0, #0
20003f74:	f040 81bd 	bne.w	200042f2 <_vfprintf_r+0xcd6>
20003f78:	3b01      	subs	r3, #1
20003f7a:	3501      	adds	r5, #1
20003f7c:	3701      	adds	r7, #1
20003f7e:	441c      	add	r4, r3
20003f80:	2d07      	cmp	r5, #7
20003f82:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
20003f86:	f8c8 7000 	str.w	r7, [r8]
20003f8a:	f8c8 3004 	str.w	r3, [r8, #4]
20003f8e:	f300 8393 	bgt.w	200046b8 <_vfprintf_r+0x109c>
20003f92:	f108 0808 	add.w	r8, r8, #8
20003f96:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
20003f98:	3501      	adds	r5, #1
20003f9a:	4414      	add	r4, r2
20003f9c:	ab26      	add	r3, sp, #152	; 0x98
20003f9e:	2d07      	cmp	r5, #7
20003fa0:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
20003fa4:	e9c8 3200 	strd	r3, r2, [r8]
20003fa8:	f77f acc6 	ble.w	20003938 <_vfprintf_r+0x31c>
20003fac:	4651      	mov	r1, sl
20003fae:	4648      	mov	r0, r9
20003fb0:	aa2a      	add	r2, sp, #168	; 0xa8
20003fb2:	f003 ffdb 	bl	20007f6c <__sprint_r>
20003fb6:	2800      	cmp	r0, #0
20003fb8:	d19d      	bne.n	20003ef6 <_vfprintf_r+0x8da>
20003fba:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20003fbc:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20003fc0:	e4bc      	b.n	2000393c <_vfprintf_r+0x320>
20003fc2:	2b01      	cmp	r3, #1
20003fc4:	f000 87d0 	beq.w	20004f68 <_vfprintf_r+0x194c>
20003fc8:	2b02      	cmp	r3, #2
20003fca:	9b07      	ldr	r3, [sp, #28]
20003fcc:	9308      	str	r3, [sp, #32]
20003fce:	f47f ae9a 	bne.w	20003d06 <_vfprintf_r+0x6ea>
20003fd2:	9819      	ldr	r0, [sp, #100]	; 0x64
20003fd4:	af56      	add	r7, sp, #344	; 0x158
20003fd6:	0923      	lsrs	r3, r4, #4
20003fd8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
20003fdc:	0929      	lsrs	r1, r5, #4
20003fde:	f004 020f 	and.w	r2, r4, #15
20003fe2:	460d      	mov	r5, r1
20003fe4:	461c      	mov	r4, r3
20003fe6:	5c83      	ldrb	r3, [r0, r2]
20003fe8:	f807 3d01 	strb.w	r3, [r7, #-1]!
20003fec:	ea54 0305 	orrs.w	r3, r4, r5
20003ff0:	d1f1      	bne.n	20003fd6 <_vfprintf_r+0x9ba>
20003ff2:	9b08      	ldr	r3, [sp, #32]
20003ff4:	9307      	str	r3, [sp, #28]
20003ff6:	ab56      	add	r3, sp, #344	; 0x158
20003ff8:	1bdb      	subs	r3, r3, r7
20003ffa:	930c      	str	r3, [sp, #48]	; 0x30
20003ffc:	e69c      	b.n	20003d38 <_vfprintf_r+0x71c>
20003ffe:	2d10      	cmp	r5, #16
20004000:	f340 8738 	ble.w	20004e74 <_vfprintf_r+0x1858>
20004004:	e9dd 212b 	ldrd	r2, r1, [sp, #172]	; 0xac
20004008:	931e      	str	r3, [sp, #120]	; 0x78
2000400a:	460b      	mov	r3, r1
2000400c:	4639      	mov	r1, r7
2000400e:	2410      	movs	r4, #16
20004010:	4637      	mov	r7, r6
20004012:	4656      	mov	r6, sl
20004014:	46ca      	mov	sl, r9
20004016:	4689      	mov	r9, r1
20004018:	e004      	b.n	20004024 <_vfprintf_r+0xa08>
2000401a:	3d10      	subs	r5, #16
2000401c:	2d10      	cmp	r5, #16
2000401e:	f108 0808 	add.w	r8, r8, #8
20004022:	dd17      	ble.n	20004054 <_vfprintf_r+0xa38>
20004024:	3201      	adds	r2, #1
20004026:	4920      	ldr	r1, [pc, #128]	; (200040a8 <_vfprintf_r+0xa8c>)
20004028:	3310      	adds	r3, #16
2000402a:	2a07      	cmp	r2, #7
2000402c:	e9cd 232b 	strd	r2, r3, [sp, #172]	; 0xac
20004030:	e9c8 1400 	strd	r1, r4, [r8]
20004034:	ddf1      	ble.n	2000401a <_vfprintf_r+0x9fe>
20004036:	4631      	mov	r1, r6
20004038:	4650      	mov	r0, sl
2000403a:	aa2a      	add	r2, sp, #168	; 0xa8
2000403c:	f003 ff96 	bl	20007f6c <__sprint_r>
20004040:	2800      	cmp	r0, #0
20004042:	f040 83f8 	bne.w	20004836 <_vfprintf_r+0x121a>
20004046:	e9dd 232b 	ldrd	r2, r3, [sp, #172]	; 0xac
2000404a:	3d10      	subs	r5, #16
2000404c:	2d10      	cmp	r5, #16
2000404e:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004052:	dce7      	bgt.n	20004024 <_vfprintf_r+0xa08>
20004054:	4648      	mov	r0, r9
20004056:	46d1      	mov	r9, sl
20004058:	46b2      	mov	sl, r6
2000405a:	463e      	mov	r6, r7
2000405c:	4607      	mov	r7, r0
2000405e:	4619      	mov	r1, r3
20004060:	9b1e      	ldr	r3, [sp, #120]	; 0x78
20004062:	186c      	adds	r4, r5, r1
20004064:	3201      	adds	r2, #1
20004066:	4910      	ldr	r1, [pc, #64]	; (200040a8 <_vfprintf_r+0xa8c>)
20004068:	2a07      	cmp	r2, #7
2000406a:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
2000406e:	e9c8 1500 	strd	r1, r5, [r8]
20004072:	f300 83cf 	bgt.w	20004814 <_vfprintf_r+0x11f8>
20004076:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
2000407a:	f108 0808 	add.w	r8, r8, #8
2000407e:	e423      	b.n	200038c8 <_vfprintf_r+0x2ac>
20004080:	9308      	str	r3, [sp, #32]
20004082:	2d00      	cmp	r5, #0
20004084:	bf08      	it	eq
20004086:	2c0a      	cmpeq	r4, #10
20004088:	f080 8378 	bcs.w	2000477c <_vfprintf_r+0x1160>
2000408c:	9b08      	ldr	r3, [sp, #32]
2000408e:	3430      	adds	r4, #48	; 0x30
20004090:	9307      	str	r3, [sp, #28]
20004092:	2301      	movs	r3, #1
20004094:	f88d 4157 	strb.w	r4, [sp, #343]	; 0x157
20004098:	930c      	str	r3, [sp, #48]	; 0x30
2000409a:	f20d 1757 	addw	r7, sp, #343	; 0x157
2000409e:	e64b      	b.n	20003d38 <_vfprintf_r+0x71c>
200040a0:	20008fd4 	.word	0x20008fd4
200040a4:	20008fe8 	.word	0x20008fe8
200040a8:	20008fd8 	.word	0x20008fd8
200040ac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200040ae:	9917      	ldr	r1, [sp, #92]	; 0x5c
200040b0:	3301      	adds	r3, #1
200040b2:	9818      	ldr	r0, [sp, #96]	; 0x60
200040b4:	440c      	add	r4, r1
200040b6:	2b07      	cmp	r3, #7
200040b8:	e9c8 0100 	strd	r0, r1, [r8]
200040bc:	942c      	str	r4, [sp, #176]	; 0xb0
200040be:	932b      	str	r3, [sp, #172]	; 0xac
200040c0:	f300 8525 	bgt.w	20004b0e <_vfprintf_r+0x14f2>
200040c4:	f108 0808 	add.w	r8, r8, #8
200040c8:	2a00      	cmp	r2, #0
200040ca:	f2c0 86ff 	blt.w	20004ecc <_vfprintf_r+0x18b0>
200040ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
200040d0:	3301      	adds	r3, #1
200040d2:	4414      	add	r4, r2
200040d4:	2b07      	cmp	r3, #7
200040d6:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
200040da:	e9c8 7200 	strd	r7, r2, [r8]
200040de:	f77f ac2b 	ble.w	20003938 <_vfprintf_r+0x31c>
200040e2:	4651      	mov	r1, sl
200040e4:	4648      	mov	r0, r9
200040e6:	aa2a      	add	r2, sp, #168	; 0xa8
200040e8:	f003 ff40 	bl	20007f6c <__sprint_r>
200040ec:	2800      	cmp	r0, #0
200040ee:	f47f af02 	bne.w	20003ef6 <_vfprintf_r+0x8da>
200040f2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
200040f4:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
200040f8:	e420      	b.n	2000393c <_vfprintf_r+0x320>
200040fa:	4651      	mov	r1, sl
200040fc:	4648      	mov	r0, r9
200040fe:	aa2a      	add	r2, sp, #168	; 0xa8
20004100:	931e      	str	r3, [sp, #120]	; 0x78
20004102:	f003 ff33 	bl	20007f6c <__sprint_r>
20004106:	2800      	cmp	r0, #0
20004108:	f47f aef5 	bne.w	20003ef6 <_vfprintf_r+0x8da>
2000410c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
2000410e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
20004110:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004114:	f7ff bbe8 	b.w	200038e8 <_vfprintf_r+0x2cc>
20004118:	4651      	mov	r1, sl
2000411a:	4648      	mov	r0, r9
2000411c:	aa2a      	add	r2, sp, #168	; 0xa8
2000411e:	f003 ff25 	bl	20007f6c <__sprint_r>
20004122:	2800      	cmp	r0, #0
20004124:	f47f aee7 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004128:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
2000412a:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
2000412e:	f7ff bbea 	b.w	20003906 <_vfprintf_r+0x2ea>
20004132:	2d10      	cmp	r5, #16
20004134:	f340 86ff 	ble.w	20004f36 <_vfprintf_r+0x191a>
20004138:	2610      	movs	r6, #16
2000413a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
2000413c:	e004      	b.n	20004148 <_vfprintf_r+0xb2c>
2000413e:	3d10      	subs	r5, #16
20004140:	2d10      	cmp	r5, #16
20004142:	f108 0808 	add.w	r8, r8, #8
20004146:	dd17      	ble.n	20004178 <_vfprintf_r+0xb5c>
20004148:	3301      	adds	r3, #1
2000414a:	4ab9      	ldr	r2, [pc, #740]	; (20004430 <_vfprintf_r+0xe14>)
2000414c:	3410      	adds	r4, #16
2000414e:	2b07      	cmp	r3, #7
20004150:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20004154:	e9c8 2600 	strd	r2, r6, [r8]
20004158:	ddf1      	ble.n	2000413e <_vfprintf_r+0xb22>
2000415a:	4651      	mov	r1, sl
2000415c:	4648      	mov	r0, r9
2000415e:	aa2a      	add	r2, sp, #168	; 0xa8
20004160:	f003 ff04 	bl	20007f6c <__sprint_r>
20004164:	2800      	cmp	r0, #0
20004166:	f47f aec6 	bne.w	20003ef6 <_vfprintf_r+0x8da>
2000416a:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
2000416e:	3d10      	subs	r5, #16
20004170:	2d10      	cmp	r5, #16
20004172:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004176:	dce7      	bgt.n	20004148 <_vfprintf_r+0xb2c>
20004178:	3301      	adds	r3, #1
2000417a:	4aad      	ldr	r2, [pc, #692]	; (20004430 <_vfprintf_r+0xe14>)
2000417c:	442c      	add	r4, r5
2000417e:	2b07      	cmp	r3, #7
20004180:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20004184:	e9c8 2500 	strd	r2, r5, [r8]
20004188:	f77f abe1 	ble.w	2000394e <_vfprintf_r+0x332>
2000418c:	4651      	mov	r1, sl
2000418e:	4648      	mov	r0, r9
20004190:	aa2a      	add	r2, sp, #168	; 0xa8
20004192:	f003 feeb 	bl	20007f6c <__sprint_r>
20004196:	2800      	cmp	r0, #0
20004198:	f47f aead 	bne.w	20003ef6 <_vfprintf_r+0x8da>
2000419c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
2000419e:	f7ff bbd6 	b.w	2000394e <_vfprintf_r+0x332>
200041a2:	9a24      	ldr	r2, [sp, #144]	; 0x90
200041a4:	2a00      	cmp	r2, #0
200041a6:	f340 811a 	ble.w	200043de <_vfprintf_r+0xdc2>
200041aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
200041ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
200041ae:	4293      	cmp	r3, r2
200041b0:	bfa8      	it	ge
200041b2:	4613      	movge	r3, r2
200041b4:	2b00      	cmp	r3, #0
200041b6:	461d      	mov	r5, r3
200041b8:	dd0b      	ble.n	200041d2 <_vfprintf_r+0xbb6>
200041ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200041bc:	442c      	add	r4, r5
200041be:	3301      	adds	r3, #1
200041c0:	2b07      	cmp	r3, #7
200041c2:	e9c8 7500 	strd	r7, r5, [r8]
200041c6:	942c      	str	r4, [sp, #176]	; 0xb0
200041c8:	932b      	str	r3, [sp, #172]	; 0xac
200041ca:	f300 85db 	bgt.w	20004d84 <_vfprintf_r+0x1768>
200041ce:	f108 0808 	add.w	r8, r8, #8
200041d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
200041d4:	2d00      	cmp	r5, #0
200041d6:	bfa8      	it	ge
200041d8:	1b5b      	subge	r3, r3, r5
200041da:	2b00      	cmp	r3, #0
200041dc:	461d      	mov	r5, r3
200041de:	f300 8367 	bgt.w	200048b0 <_vfprintf_r+0x1294>
200041e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
200041e4:	443b      	add	r3, r7
200041e6:	461e      	mov	r6, r3
200041e8:	9b07      	ldr	r3, [sp, #28]
200041ea:	0559      	lsls	r1, r3, #21
200041ec:	f100 8501 	bmi.w	20004bf2 <_vfprintf_r+0x15d6>
200041f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
200041f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
200041f4:	4293      	cmp	r3, r2
200041f6:	db03      	blt.n	20004200 <_vfprintf_r+0xbe4>
200041f8:	9a07      	ldr	r2, [sp, #28]
200041fa:	07d2      	lsls	r2, r2, #31
200041fc:	f140 83cb 	bpl.w	20004996 <_vfprintf_r+0x137a>
20004200:	9a2b      	ldr	r2, [sp, #172]	; 0xac
20004202:	9917      	ldr	r1, [sp, #92]	; 0x5c
20004204:	3201      	adds	r2, #1
20004206:	9818      	ldr	r0, [sp, #96]	; 0x60
20004208:	440c      	add	r4, r1
2000420a:	2a07      	cmp	r2, #7
2000420c:	e9c8 0100 	strd	r0, r1, [r8]
20004210:	942c      	str	r4, [sp, #176]	; 0xb0
20004212:	922b      	str	r2, [sp, #172]	; 0xac
20004214:	f300 85c3 	bgt.w	20004d9e <_vfprintf_r+0x1782>
20004218:	f108 0808 	add.w	r8, r8, #8
2000421c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
2000421e:	18bd      	adds	r5, r7, r2
20004220:	1bad      	subs	r5, r5, r6
20004222:	1ad3      	subs	r3, r2, r3
20004224:	429d      	cmp	r5, r3
20004226:	bfa8      	it	ge
20004228:	461d      	movge	r5, r3
2000422a:	2d00      	cmp	r5, #0
2000422c:	dd0b      	ble.n	20004246 <_vfprintf_r+0xc2a>
2000422e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
20004230:	442c      	add	r4, r5
20004232:	3201      	adds	r2, #1
20004234:	2a07      	cmp	r2, #7
20004236:	e9c8 6500 	strd	r6, r5, [r8]
2000423a:	942c      	str	r4, [sp, #176]	; 0xb0
2000423c:	922b      	str	r2, [sp, #172]	; 0xac
2000423e:	f300 861d 	bgt.w	20004e7c <_vfprintf_r+0x1860>
20004242:	f108 0808 	add.w	r8, r8, #8
20004246:	2d00      	cmp	r5, #0
20004248:	bfb4      	ite	lt
2000424a:	461d      	movlt	r5, r3
2000424c:	1b5d      	subge	r5, r3, r5
2000424e:	2d00      	cmp	r5, #0
20004250:	f77f ab74 	ble.w	2000393c <_vfprintf_r+0x320>
20004254:	2d10      	cmp	r5, #16
20004256:	f340 8309 	ble.w	2000486c <_vfprintf_r+0x1250>
2000425a:	4f76      	ldr	r7, [pc, #472]	; (20004434 <_vfprintf_r+0xe18>)
2000425c:	2610      	movs	r6, #16
2000425e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004260:	970f      	str	r7, [sp, #60]	; 0x3c
20004262:	e005      	b.n	20004270 <_vfprintf_r+0xc54>
20004264:	f108 0808 	add.w	r8, r8, #8
20004268:	3d10      	subs	r5, #16
2000426a:	2d10      	cmp	r5, #16
2000426c:	f340 8301 	ble.w	20004872 <_vfprintf_r+0x1256>
20004270:	3301      	adds	r3, #1
20004272:	3410      	adds	r4, #16
20004274:	2b07      	cmp	r3, #7
20004276:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
2000427a:	e9c8 7600 	strd	r7, r6, [r8]
2000427e:	ddf1      	ble.n	20004264 <_vfprintf_r+0xc48>
20004280:	4651      	mov	r1, sl
20004282:	4648      	mov	r0, r9
20004284:	aa2a      	add	r2, sp, #168	; 0xa8
20004286:	f003 fe71 	bl	20007f6c <__sprint_r>
2000428a:	2800      	cmp	r0, #0
2000428c:	f47f ae33 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004290:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
20004294:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004298:	e7e6      	b.n	20004268 <_vfprintf_r+0xc4c>
2000429a:	9b07      	ldr	r3, [sp, #28]
2000429c:	07de      	lsls	r6, r3, #31
2000429e:	f53f ae45 	bmi.w	20003f2c <_vfprintf_r+0x910>
200042a2:	2301      	movs	r3, #1
200042a4:	9d2b      	ldr	r5, [sp, #172]	; 0xac
200042a6:	441c      	add	r4, r3
200042a8:	441d      	add	r5, r3
200042aa:	2d07      	cmp	r5, #7
200042ac:	942c      	str	r4, [sp, #176]	; 0xb0
200042ae:	f8c8 7000 	str.w	r7, [r8]
200042b2:	952b      	str	r5, [sp, #172]	; 0xac
200042b4:	f8c8 3004 	str.w	r3, [r8, #4]
200042b8:	f77f ae6b 	ble.w	20003f92 <_vfprintf_r+0x976>
200042bc:	4651      	mov	r1, sl
200042be:	4648      	mov	r0, r9
200042c0:	aa2a      	add	r2, sp, #168	; 0xa8
200042c2:	f003 fe53 	bl	20007f6c <__sprint_r>
200042c6:	2800      	cmp	r0, #0
200042c8:	f47f ae15 	bne.w	20003ef6 <_vfprintf_r+0x8da>
200042cc:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
200042d0:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
200042d4:	e65f      	b.n	20003f96 <_vfprintf_r+0x97a>
200042d6:	2b30      	cmp	r3, #48	; 0x30
200042d8:	f43f ae8b 	beq.w	20003ff2 <_vfprintf_r+0x9d6>
200042dc:	2330      	movs	r3, #48	; 0x30
200042de:	3a02      	subs	r2, #2
200042e0:	f807 3c01 	strb.w	r3, [r7, #-1]
200042e4:	9908      	ldr	r1, [sp, #32]
200042e6:	ab56      	add	r3, sp, #344	; 0x158
200042e8:	1a9b      	subs	r3, r3, r2
200042ea:	4617      	mov	r7, r2
200042ec:	9107      	str	r1, [sp, #28]
200042ee:	930c      	str	r3, [sp, #48]	; 0x30
200042f0:	e522      	b.n	20003d38 <_vfprintf_r+0x71c>
200042f2:	1e5e      	subs	r6, r3, #1
200042f4:	2e00      	cmp	r6, #0
200042f6:	f77f ae4e 	ble.w	20003f96 <_vfprintf_r+0x97a>
200042fa:	2e10      	cmp	r6, #16
200042fc:	f340 874f 	ble.w	2000519e <_vfprintf_r+0x1b82>
20004300:	4b4c      	ldr	r3, [pc, #304]	; (20004434 <_vfprintf_r+0xe18>)
20004302:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
20004306:	2710      	movs	r7, #16
20004308:	46d3      	mov	fp, sl
2000430a:	930f      	str	r3, [sp, #60]	; 0x3c
2000430c:	46ca      	mov	sl, r9
2000430e:	4699      	mov	r9, r3
20004310:	e005      	b.n	2000431e <_vfprintf_r+0xd02>
20004312:	f108 0808 	add.w	r8, r8, #8
20004316:	3e10      	subs	r6, #16
20004318:	2e10      	cmp	r6, #16
2000431a:	f340 81bf 	ble.w	2000469c <_vfprintf_r+0x1080>
2000431e:	3501      	adds	r5, #1
20004320:	3410      	adds	r4, #16
20004322:	2d07      	cmp	r5, #7
20004324:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
20004328:	e9c8 9700 	strd	r9, r7, [r8]
2000432c:	ddf1      	ble.n	20004312 <_vfprintf_r+0xcf6>
2000432e:	4659      	mov	r1, fp
20004330:	4650      	mov	r0, sl
20004332:	aa2a      	add	r2, sp, #168	; 0xa8
20004334:	f003 fe1a 	bl	20007f6c <__sprint_r>
20004338:	2800      	cmp	r0, #0
2000433a:	f040 85ec 	bne.w	20004f16 <_vfprintf_r+0x18fa>
2000433e:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
20004342:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004346:	e7e6      	b.n	20004316 <_vfprintf_r+0xcfa>
20004348:	4651      	mov	r1, sl
2000434a:	4648      	mov	r0, r9
2000434c:	aa2a      	add	r2, sp, #168	; 0xa8
2000434e:	f003 fe0d 	bl	20007f6c <__sprint_r>
20004352:	2800      	cmp	r0, #0
20004354:	f47f adcf 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004358:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
2000435a:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
2000435e:	f7ff badc 	b.w	2000391a <_vfprintf_r+0x2fe>
20004362:	9b07      	ldr	r3, [sp, #28]
20004364:	06d8      	lsls	r0, r3, #27
20004366:	d469      	bmi.n	2000443c <_vfprintf_r+0xe20>
20004368:	9b07      	ldr	r3, [sp, #28]
2000436a:	0659      	lsls	r1, r3, #25
2000436c:	f140 82f6 	bpl.w	2000495c <_vfprintf_r+0x1340>
20004370:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20004372:	f853 4b04 	ldr.w	r4, [r3], #4
20004376:	b224      	sxth	r4, r4
20004378:	17e5      	asrs	r5, r4, #31
2000437a:	930e      	str	r3, [sp, #56]	; 0x38
2000437c:	4622      	mov	r2, r4
2000437e:	462b      	mov	r3, r5
20004380:	f7ff bb6b 	b.w	20003a5a <_vfprintf_r+0x43e>
20004384:	9b08      	ldr	r3, [sp, #32]
20004386:	06dc      	lsls	r4, r3, #27
20004388:	d47c      	bmi.n	20004484 <_vfprintf_r+0xe68>
2000438a:	9b08      	ldr	r3, [sp, #32]
2000438c:	0658      	lsls	r0, r3, #25
2000438e:	f140 82ca 	bpl.w	20004926 <_vfprintf_r+0x130a>
20004392:	9a0e      	ldr	r2, [sp, #56]	; 0x38
20004394:	2301      	movs	r3, #1
20004396:	f852 4b04 	ldr.w	r4, [r2], #4
2000439a:	2500      	movs	r5, #0
2000439c:	920e      	str	r2, [sp, #56]	; 0x38
2000439e:	b2a4      	uxth	r4, r4
200043a0:	f7ff bbc4 	b.w	20003b2c <_vfprintf_r+0x510>
200043a4:	9b07      	ldr	r3, [sp, #28]
200043a6:	06db      	lsls	r3, r3, #27
200043a8:	d474      	bmi.n	20004494 <_vfprintf_r+0xe78>
200043aa:	9b07      	ldr	r3, [sp, #28]
200043ac:	065f      	lsls	r7, r3, #25
200043ae:	f140 82c9 	bpl.w	20004944 <_vfprintf_r+0x1328>
200043b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
200043b4:	2500      	movs	r5, #0
200043b6:	f853 4b04 	ldr.w	r4, [r3], #4
200043ba:	930e      	str	r3, [sp, #56]	; 0x38
200043bc:	b2a4      	uxth	r4, r4
200043be:	f7ff bbb0 	b.w	20003b22 <_vfprintf_r+0x506>
200043c2:	9b07      	ldr	r3, [sp, #28]
200043c4:	07d8      	lsls	r0, r3, #31
200043c6:	f57f aab9 	bpl.w	2000393c <_vfprintf_r+0x320>
200043ca:	e4e2      	b.n	20003d92 <_vfprintf_r+0x776>
200043cc:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
200043d0:	f002 fc00 	bl	20006bd4 <__retarget_lock_acquire_recursive>
200043d4:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
200043d8:	b29a      	uxth	r2, r3
200043da:	f7ff b942 	b.w	20003662 <_vfprintf_r+0x46>
200043de:	2001      	movs	r0, #1
200043e0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200043e2:	4915      	ldr	r1, [pc, #84]	; (20004438 <_vfprintf_r+0xe1c>)
200043e4:	4403      	add	r3, r0
200043e6:	4404      	add	r4, r0
200043e8:	2b07      	cmp	r3, #7
200043ea:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
200043ee:	e9c8 1000 	strd	r1, r0, [r8]
200043f2:	f300 84ac 	bgt.w	20004d4e <_vfprintf_r+0x1732>
200043f6:	f108 0808 	add.w	r8, r8, #8
200043fa:	2a00      	cmp	r2, #0
200043fc:	f47f ae56 	bne.w	200040ac <_vfprintf_r+0xa90>
20004400:	9b07      	ldr	r3, [sp, #28]
20004402:	9a13      	ldr	r2, [sp, #76]	; 0x4c
20004404:	f003 0301 	and.w	r3, r3, #1
20004408:	4313      	orrs	r3, r2
2000440a:	f43f aa97 	beq.w	2000393c <_vfprintf_r+0x320>
2000440e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004410:	9a17      	ldr	r2, [sp, #92]	; 0x5c
20004412:	3301      	adds	r3, #1
20004414:	9918      	ldr	r1, [sp, #96]	; 0x60
20004416:	4414      	add	r4, r2
20004418:	2b07      	cmp	r3, #7
2000441a:	e9c8 1200 	strd	r1, r2, [r8]
2000441e:	942c      	str	r4, [sp, #176]	; 0xb0
20004420:	932b      	str	r3, [sp, #172]	; 0xac
20004422:	f300 8374 	bgt.w	20004b0e <_vfprintf_r+0x14f2>
20004426:	f108 0808 	add.w	r8, r8, #8
2000442a:	e650      	b.n	200040ce <_vfprintf_r+0xab2>
2000442c:	af56      	add	r7, sp, #344	; 0x158
2000442e:	e483      	b.n	20003d38 <_vfprintf_r+0x71c>
20004430:	20008fd8 	.word	0x20008fd8
20004434:	20008fe8 	.word	0x20008fe8
20004438:	20008fd4 	.word	0x20008fd4
2000443c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000443e:	f853 4b04 	ldr.w	r4, [r3], #4
20004442:	4622      	mov	r2, r4
20004444:	17e5      	asrs	r5, r4, #31
20004446:	930e      	str	r3, [sp, #56]	; 0x38
20004448:	462b      	mov	r3, r5
2000444a:	2a00      	cmp	r2, #0
2000444c:	f173 0300 	sbcs.w	r3, r3, #0
20004450:	f6bf ab08 	bge.w	20003a64 <_vfprintf_r+0x448>
20004454:	232d      	movs	r3, #45	; 0x2d
20004456:	9a07      	ldr	r2, [sp, #28]
20004458:	4264      	negs	r4, r4
2000445a:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
2000445e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
20004462:	2301      	movs	r3, #1
20004464:	9208      	str	r2, [sp, #32]
20004466:	f7ff bb64 	b.w	20003b32 <_vfprintf_r+0x516>
2000446a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000446c:	465f      	mov	r7, fp
2000446e:	f853 1b04 	ldr.w	r1, [r3], #4
20004472:	930e      	str	r3, [sp, #56]	; 0x38
20004474:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20004476:	17dd      	asrs	r5, r3, #31
20004478:	461a      	mov	r2, r3
2000447a:	462b      	mov	r3, r5
2000447c:	e9c1 2300 	strd	r2, r3, [r1]
20004480:	f7ff ba7b 	b.w	2000397a <_vfprintf_r+0x35e>
20004484:	9a0e      	ldr	r2, [sp, #56]	; 0x38
20004486:	2301      	movs	r3, #1
20004488:	f852 4b04 	ldr.w	r4, [r2], #4
2000448c:	2500      	movs	r5, #0
2000448e:	920e      	str	r2, [sp, #56]	; 0x38
20004490:	f7ff bb4c 	b.w	20003b2c <_vfprintf_r+0x510>
20004494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20004496:	2500      	movs	r5, #0
20004498:	f853 4b04 	ldr.w	r4, [r3], #4
2000449c:	930e      	str	r3, [sp, #56]	; 0x38
2000449e:	f7ff bb40 	b.w	20003b22 <_vfprintf_r+0x506>
200044a2:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
200044a6:	460b      	mov	r3, r1
200044a8:	4602      	mov	r2, r0
200044aa:	f004 f857 	bl	2000855c <__aeabi_dcmpun>
200044ae:	4601      	mov	r1, r0
200044b0:	2800      	cmp	r0, #0
200044b2:	f040 85dd 	bne.w	20005070 <_vfprintf_r+0x1a54>
200044b6:	2e61      	cmp	r6, #97	; 0x61
200044b8:	f000 8582 	beq.w	20004fc0 <_vfprintf_r+0x19a4>
200044bc:	2e41      	cmp	r6, #65	; 0x41
200044be:	f000 827b 	beq.w	200049b8 <_vfprintf_r+0x139c>
200044c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
200044c4:	f026 0520 	bic.w	r5, r6, #32
200044c8:	1c5a      	adds	r2, r3, #1
200044ca:	9508      	str	r5, [sp, #32]
200044cc:	f000 85cc 	beq.w	20005068 <_vfprintf_r+0x1a4c>
200044d0:	2d47      	cmp	r5, #71	; 0x47
200044d2:	f000 85a3 	beq.w	2000501c <_vfprintf_r+0x1a00>
200044d6:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
200044da:	9b07      	ldr	r3, [sp, #28]
200044dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
200044e0:	9312      	str	r3, [sp, #72]	; 0x48
200044e2:	460b      	mov	r3, r1
200044e4:	2b00      	cmp	r3, #0
200044e6:	f2c0 8639 	blt.w	2000515c <_vfprintf_r+0x1b40>
200044ea:	2200      	movs	r2, #0
200044ec:	930f      	str	r3, [sp, #60]	; 0x3c
200044ee:	921e      	str	r2, [sp, #120]	; 0x78
200044f0:	920d      	str	r2, [sp, #52]	; 0x34
200044f2:	900c      	str	r0, [sp, #48]	; 0x30
200044f4:	2d46      	cmp	r5, #70	; 0x46
200044f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
200044f8:	f000 847a 	beq.w	20004df0 <_vfprintf_r+0x17d4>
200044fc:	2d45      	cmp	r5, #69	; 0x45
200044fe:	f04f 0002 	mov.w	r0, #2
20004502:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20004504:	f040 8459 	bne.w	20004dba <_vfprintf_r+0x179e>
20004508:	9909      	ldr	r1, [sp, #36]	; 0x24
2000450a:	9000      	str	r0, [sp, #0]
2000450c:	1c4c      	adds	r4, r1, #1
2000450e:	a928      	add	r1, sp, #160	; 0xa0
20004510:	a825      	add	r0, sp, #148	; 0x94
20004512:	9104      	str	r1, [sp, #16]
20004514:	a924      	add	r1, sp, #144	; 0x90
20004516:	e9cd 1002 	strd	r1, r0, [sp, #8]
2000451a:	9401      	str	r4, [sp, #4]
2000451c:	4648      	mov	r0, r9
2000451e:	f000 ffd7 	bl	200054d0 <_dtoa_r>
20004522:	4607      	mov	r7, r0
20004524:	4404      	add	r4, r0
20004526:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004528:	9d07      	ldr	r5, [sp, #28]
2000452a:	9307      	str	r3, [sp, #28]
2000452c:	2200      	movs	r2, #0
2000452e:	2300      	movs	r3, #0
20004530:	980c      	ldr	r0, [sp, #48]	; 0x30
20004532:	990f      	ldr	r1, [sp, #60]	; 0x3c
20004534:	f003 ffe0 	bl	200084f8 <__aeabi_dcmpeq>
20004538:	2800      	cmp	r0, #0
2000453a:	f000 832b 	beq.w	20004b94 <_vfprintf_r+0x1578>
2000453e:	4623      	mov	r3, r4
20004540:	1bdb      	subs	r3, r3, r7
20004542:	9313      	str	r3, [sp, #76]	; 0x4c
20004544:	9b08      	ldr	r3, [sp, #32]
20004546:	2b47      	cmp	r3, #71	; 0x47
20004548:	f000 82f6 	beq.w	20004b38 <_vfprintf_r+0x151c>
2000454c:	9b08      	ldr	r3, [sp, #32]
2000454e:	2b46      	cmp	r3, #70	; 0x46
20004550:	f000 847a 	beq.w	20004e48 <_vfprintf_r+0x182c>
20004554:	9b24      	ldr	r3, [sp, #144]	; 0x90
20004556:	9310      	str	r3, [sp, #64]	; 0x40
20004558:	9b10      	ldr	r3, [sp, #64]	; 0x40
2000455a:	9a08      	ldr	r2, [sp, #32]
2000455c:	3b01      	subs	r3, #1
2000455e:	2a41      	cmp	r2, #65	; 0x41
20004560:	9324      	str	r3, [sp, #144]	; 0x90
20004562:	f000 85f5 	beq.w	20005150 <_vfprintf_r+0x1b34>
20004566:	2100      	movs	r1, #0
20004568:	b2f2      	uxtb	r2, r6
2000456a:	2b00      	cmp	r3, #0
2000456c:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
20004570:	bfb6      	itet	lt
20004572:	222d      	movlt	r2, #45	; 0x2d
20004574:	222b      	movge	r2, #43	; 0x2b
20004576:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
20004578:	f88d 2099 	strb.w	r2, [sp, #153]	; 0x99
2000457c:	bfb8      	it	lt
2000457e:	f1c3 0301 	rsblt	r3, r3, #1
20004582:	2b09      	cmp	r3, #9
20004584:	f340 85d5 	ble.w	20005132 <_vfprintf_r+0x1b16>
20004588:	f10d 0ea7 	add.w	lr, sp, #167	; 0xa7
2000458c:	4672      	mov	r2, lr
2000458e:	469c      	mov	ip, r3
20004590:	4cc2      	ldr	r4, [pc, #776]	; (2000489c <_vfprintf_r+0x1280>)
20004592:	4660      	mov	r0, ip
20004594:	4611      	mov	r1, r2
20004596:	fb84 230c 	smull	r2, r3, r4, ip
2000459a:	ea4f 72ec 	mov.w	r2, ip, asr #31
2000459e:	ebc2 02a3 	rsb	r2, r2, r3, asr #2
200045a2:	eb02 0382 	add.w	r3, r2, r2, lsl #2
200045a6:	ebac 0343 	sub.w	r3, ip, r3, lsl #1
200045aa:	3330      	adds	r3, #48	; 0x30
200045ac:	2863      	cmp	r0, #99	; 0x63
200045ae:	4694      	mov	ip, r2
200045b0:	f801 3c01 	strb.w	r3, [r1, #-1]
200045b4:	f101 32ff 	add.w	r2, r1, #4294967295
200045b8:	dceb      	bgt.n	20004592 <_vfprintf_r+0xf76>
200045ba:	4663      	mov	r3, ip
200045bc:	3330      	adds	r3, #48	; 0x30
200045be:	b2d8      	uxtb	r0, r3
200045c0:	1e8b      	subs	r3, r1, #2
200045c2:	459e      	cmp	lr, r3
200045c4:	f802 0c01 	strb.w	r0, [r2, #-1]
200045c8:	f240 8628 	bls.w	2000521c <_vfprintf_r+0x1c00>
200045cc:	f10d 039a 	add.w	r3, sp, #154	; 0x9a
200045d0:	e001      	b.n	200045d6 <_vfprintf_r+0xfba>
200045d2:	f812 0b01 	ldrb.w	r0, [r2], #1
200045d6:	4596      	cmp	lr, r2
200045d8:	f803 0b01 	strb.w	r0, [r3], #1
200045dc:	d1f9      	bne.n	200045d2 <_vfprintf_r+0xfb6>
200045de:	f10d 03a9 	add.w	r3, sp, #169	; 0xa9
200045e2:	f10d 029a 	add.w	r2, sp, #154	; 0x9a
200045e6:	1a5b      	subs	r3, r3, r1
200045e8:	4413      	add	r3, r2
200045ea:	aa26      	add	r2, sp, #152	; 0x98
200045ec:	1a9b      	subs	r3, r3, r2
200045ee:	931b      	str	r3, [sp, #108]	; 0x6c
200045f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
200045f2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
200045f4:	2b01      	cmp	r3, #1
200045f6:	441a      	add	r2, r3
200045f8:	920c      	str	r2, [sp, #48]	; 0x30
200045fa:	f340 85b2 	ble.w	20005162 <_vfprintf_r+0x1b46>
200045fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20004600:	9a17      	ldr	r2, [sp, #92]	; 0x5c
20004602:	4413      	add	r3, r2
20004604:	930c      	str	r3, [sp, #48]	; 0x30
20004606:	2300      	movs	r3, #0
20004608:	9312      	str	r3, [sp, #72]	; 0x48
2000460a:	9316      	str	r3, [sp, #88]	; 0x58
2000460c:	9310      	str	r3, [sp, #64]	; 0x40
2000460e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20004610:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
20004614:	f445 7280 	orr.w	r2, r5, #256	; 0x100
20004618:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2000461c:	9207      	str	r2, [sp, #28]
2000461e:	9308      	str	r3, [sp, #32]
20004620:	9b1e      	ldr	r3, [sp, #120]	; 0x78
20004622:	2b00      	cmp	r3, #0
20004624:	f040 82af 	bne.w	20004b86 <_vfprintf_r+0x156a>
20004628:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
2000462c:	9309      	str	r3, [sp, #36]	; 0x24
2000462e:	f7ff b9f0 	b.w	20003a12 <_vfprintf_r+0x3f6>
20004632:	9b07      	ldr	r3, [sp, #28]
20004634:	9308      	str	r3, [sp, #32]
20004636:	f7ff bae6 	b.w	20003c06 <_vfprintf_r+0x5ea>
2000463a:	4b99      	ldr	r3, [pc, #612]	; (200048a0 <_vfprintf_r+0x1284>)
2000463c:	9319      	str	r3, [sp, #100]	; 0x64
2000463e:	9b07      	ldr	r3, [sp, #28]
20004640:	0699      	lsls	r1, r3, #26
20004642:	d575      	bpl.n	20004730 <_vfprintf_r+0x1114>
20004644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20004646:	3307      	adds	r3, #7
20004648:	f023 0307 	bic.w	r3, r3, #7
2000464c:	e8f3 4502 	ldrd	r4, r5, [r3], #8
20004650:	930e      	str	r3, [sp, #56]	; 0x38
20004652:	9a07      	ldr	r2, [sp, #28]
20004654:	07d7      	lsls	r7, r2, #31
20004656:	d50a      	bpl.n	2000466e <_vfprintf_r+0x1052>
20004658:	ea54 0305 	orrs.w	r3, r4, r5
2000465c:	d007      	beq.n	2000466e <_vfprintf_r+0x1052>
2000465e:	2330      	movs	r3, #48	; 0x30
20004660:	f042 0202 	orr.w	r2, r2, #2
20004664:	f88d 608d 	strb.w	r6, [sp, #141]	; 0x8d
20004668:	9207      	str	r2, [sp, #28]
2000466a:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
2000466e:	9a07      	ldr	r2, [sp, #28]
20004670:	2302      	movs	r3, #2
20004672:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
20004676:	9208      	str	r2, [sp, #32]
20004678:	f7ff ba58 	b.w	20003b2c <_vfprintf_r+0x510>
2000467c:	4b89      	ldr	r3, [pc, #548]	; (200048a4 <_vfprintf_r+0x1288>)
2000467e:	9319      	str	r3, [sp, #100]	; 0x64
20004680:	e7dd      	b.n	2000463e <_vfprintf_r+0x1022>
20004682:	4651      	mov	r1, sl
20004684:	4648      	mov	r0, r9
20004686:	aa2a      	add	r2, sp, #168	; 0xa8
20004688:	f003 fc70 	bl	20007f6c <__sprint_r>
2000468c:	2800      	cmp	r0, #0
2000468e:	f47f ac32 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004692:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004694:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004698:	f7ff b939 	b.w	2000390e <_vfprintf_r+0x2f2>
2000469c:	46d1      	mov	r9, sl
2000469e:	46da      	mov	sl, fp
200046a0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
200046a4:	3501      	adds	r5, #1
200046a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
200046a8:	4434      	add	r4, r6
200046aa:	2d07      	cmp	r5, #7
200046ac:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
200046b0:	e9c8 3600 	strd	r3, r6, [r8]
200046b4:	f77f ac6d 	ble.w	20003f92 <_vfprintf_r+0x976>
200046b8:	4651      	mov	r1, sl
200046ba:	4648      	mov	r0, r9
200046bc:	aa2a      	add	r2, sp, #168	; 0xa8
200046be:	f003 fc55 	bl	20007f6c <__sprint_r>
200046c2:	2800      	cmp	r0, #0
200046c4:	f47f ac17 	bne.w	20003ef6 <_vfprintf_r+0x8da>
200046c8:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
200046cc:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
200046d0:	e461      	b.n	20003f96 <_vfprintf_r+0x97a>
200046d2:	f043 0320 	orr.w	r3, r3, #32
200046d6:	f89b 6001 	ldrb.w	r6, [fp, #1]
200046da:	9307      	str	r3, [sp, #28]
200046dc:	f10b 0b01 	add.w	fp, fp, #1
200046e0:	f7ff b80c 	b.w	200036fc <_vfprintf_r+0xe0>
200046e4:	4651      	mov	r1, sl
200046e6:	4648      	mov	r0, r9
200046e8:	aa2a      	add	r2, sp, #168	; 0xa8
200046ea:	f003 fc3f 	bl	20007f6c <__sprint_r>
200046ee:	2800      	cmp	r0, #0
200046f0:	f47f ac01 	bne.w	20003ef6 <_vfprintf_r+0x8da>
200046f4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
200046f6:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
200046fa:	f7ff bb58 	b.w	20003dae <_vfprintf_r+0x792>
200046fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
20004702:	f89b 6001 	ldrb.w	r6, [fp, #1]
20004706:	9307      	str	r3, [sp, #28]
20004708:	f10b 0b01 	add.w	fp, fp, #1
2000470c:	f7fe bff6 	b.w	200036fc <_vfprintf_r+0xe0>
20004710:	9b09      	ldr	r3, [sp, #36]	; 0x24
20004712:	463a      	mov	r2, r7
20004714:	2b06      	cmp	r3, #6
20004716:	bf28      	it	cs
20004718:	2306      	movcs	r3, #6
2000471a:	9709      	str	r7, [sp, #36]	; 0x24
2000471c:	9712      	str	r7, [sp, #72]	; 0x48
2000471e:	9716      	str	r7, [sp, #88]	; 0x58
20004720:	9710      	str	r7, [sp, #64]	; 0x40
20004722:	970d      	str	r7, [sp, #52]	; 0x34
20004724:	9308      	str	r3, [sp, #32]
20004726:	4f60      	ldr	r7, [pc, #384]	; (200048a8 <_vfprintf_r+0x128c>)
20004728:	940e      	str	r4, [sp, #56]	; 0x38
2000472a:	930c      	str	r3, [sp, #48]	; 0x30
2000472c:	f7ff b971 	b.w	20003a12 <_vfprintf_r+0x3f6>
20004730:	9b07      	ldr	r3, [sp, #28]
20004732:	06da      	lsls	r2, r3, #27
20004734:	f140 8083 	bpl.w	2000483e <_vfprintf_r+0x1222>
20004738:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000473a:	2500      	movs	r5, #0
2000473c:	f853 4b04 	ldr.w	r4, [r3], #4
20004740:	930e      	str	r3, [sp, #56]	; 0x38
20004742:	e786      	b.n	20004652 <_vfprintf_r+0x1036>
20004744:	4651      	mov	r1, sl
20004746:	4648      	mov	r0, r9
20004748:	aa2a      	add	r2, sp, #168	; 0xa8
2000474a:	f003 fc0f 	bl	20007f6c <__sprint_r>
2000474e:	2800      	cmp	r0, #0
20004750:	f47f abd1 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004754:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
20004758:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
2000475c:	f7ff bbf5 	b.w	20003f4a <_vfprintf_r+0x92e>
20004760:	4651      	mov	r1, sl
20004762:	4648      	mov	r0, r9
20004764:	aa2a      	add	r2, sp, #168	; 0xa8
20004766:	f003 fc01 	bl	20007f6c <__sprint_r>
2000476a:	2800      	cmp	r0, #0
2000476c:	f47f abc3 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004770:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
20004774:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004778:	f7ff bbf4 	b.w	20003f64 <_vfprintf_r+0x948>
2000477c:	2200      	movs	r2, #0
2000477e:	9b08      	ldr	r3, [sp, #32]
20004780:	f8cd b01c 	str.w	fp, [sp, #28]
20004784:	f403 6380 	and.w	r3, r3, #1024	; 0x400
20004788:	960c      	str	r6, [sp, #48]	; 0x30
2000478a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
2000478e:	4693      	mov	fp, r2
20004790:	46ca      	mov	sl, r9
20004792:	461e      	mov	r6, r3
20004794:	46c1      	mov	r9, r8
20004796:	af56      	add	r7, sp, #344	; 0x158
20004798:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
2000479c:	e00b      	b.n	200047b6 <_vfprintf_r+0x119a>
2000479e:	220a      	movs	r2, #10
200047a0:	2300      	movs	r3, #0
200047a2:	4620      	mov	r0, r4
200047a4:	4629      	mov	r1, r5
200047a6:	f003 ff17 	bl	200085d8 <__aeabi_uldivmod>
200047aa:	2d00      	cmp	r5, #0
200047ac:	bf08      	it	eq
200047ae:	2c0a      	cmpeq	r4, #10
200047b0:	d31b      	bcc.n	200047ea <_vfprintf_r+0x11ce>
200047b2:	4604      	mov	r4, r0
200047b4:	460d      	mov	r5, r1
200047b6:	220a      	movs	r2, #10
200047b8:	2300      	movs	r3, #0
200047ba:	4620      	mov	r0, r4
200047bc:	4629      	mov	r1, r5
200047be:	f003 ff0b 	bl	200085d8 <__aeabi_uldivmod>
200047c2:	3230      	adds	r2, #48	; 0x30
200047c4:	f807 2c01 	strb.w	r2, [r7, #-1]
200047c8:	f10b 0b01 	add.w	fp, fp, #1
200047cc:	3f01      	subs	r7, #1
200047ce:	2e00      	cmp	r6, #0
200047d0:	d0e5      	beq.n	2000479e <_vfprintf_r+0x1182>
200047d2:	f898 3000 	ldrb.w	r3, [r8]
200047d6:	459b      	cmp	fp, r3
200047d8:	d1e1      	bne.n	2000479e <_vfprintf_r+0x1182>
200047da:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
200047de:	d0de      	beq.n	2000479e <_vfprintf_r+0x1182>
200047e0:	2d00      	cmp	r5, #0
200047e2:	bf08      	it	eq
200047e4:	2c0a      	cmpeq	r4, #10
200047e6:	f080 81ef 	bcs.w	20004bc8 <_vfprintf_r+0x15ac>
200047ea:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
200047ee:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
200047f2:	46c8      	mov	r8, r9
200047f4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
200047f6:	46d1      	mov	r9, sl
200047f8:	f8dd b01c 	ldr.w	fp, [sp, #28]
200047fc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
20004800:	f7ff bbf7 	b.w	20003ff2 <_vfprintf_r+0x9d6>
20004804:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
20004808:	f002 f9e6 	bl	20006bd8 <__retarget_lock_release_recursive>
2000480c:	f8bb 300c 	ldrh.w	r3, [fp, #12]
20004810:	f7ff bb81 	b.w	20003f16 <_vfprintf_r+0x8fa>
20004814:	4651      	mov	r1, sl
20004816:	4648      	mov	r0, r9
20004818:	aa2a      	add	r2, sp, #168	; 0xa8
2000481a:	931e      	str	r3, [sp, #120]	; 0x78
2000481c:	f003 fba6 	bl	20007f6c <__sprint_r>
20004820:	2800      	cmp	r0, #0
20004822:	f47f ab68 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004826:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
2000482a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
2000482c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
2000482e:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004832:	f7ff b849 	b.w	200038c8 <_vfprintf_r+0x2ac>
20004836:	46d1      	mov	r9, sl
20004838:	46b3      	mov	fp, r6
2000483a:	f7ff bb5d 	b.w	20003ef8 <_vfprintf_r+0x8dc>
2000483e:	9b07      	ldr	r3, [sp, #28]
20004840:	065b      	lsls	r3, r3, #25
20004842:	d565      	bpl.n	20004910 <_vfprintf_r+0x12f4>
20004844:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20004846:	2500      	movs	r5, #0
20004848:	f853 4b04 	ldr.w	r4, [r3], #4
2000484c:	930e      	str	r3, [sp, #56]	; 0x38
2000484e:	b2a4      	uxth	r4, r4
20004850:	e6ff      	b.n	20004652 <_vfprintf_r+0x1036>
20004852:	4651      	mov	r1, sl
20004854:	4648      	mov	r0, r9
20004856:	aa2a      	add	r2, sp, #168	; 0xa8
20004858:	f003 fb88 	bl	20007f6c <__sprint_r>
2000485c:	2800      	cmp	r0, #0
2000485e:	f47f ab4a 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004862:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004864:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004868:	f7ff ba8e 	b.w	20003d88 <_vfprintf_r+0x76c>
2000486c:	4a0f      	ldr	r2, [pc, #60]	; (200048ac <_vfprintf_r+0x1290>)
2000486e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004870:	920f      	str	r2, [sp, #60]	; 0x3c
20004872:	3301      	adds	r3, #1
20004874:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
20004876:	442c      	add	r4, r5
20004878:	2b07      	cmp	r3, #7
2000487a:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
2000487e:	e9c8 2500 	strd	r2, r5, [r8]
20004882:	f77f a859 	ble.w	20003938 <_vfprintf_r+0x31c>
20004886:	e42c      	b.n	200040e2 <_vfprintf_r+0xac6>
20004888:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000488a:	990a      	ldr	r1, [sp, #40]	; 0x28
2000488c:	f853 2b04 	ldr.w	r2, [r3], #4
20004890:	465f      	mov	r7, fp
20004892:	6011      	str	r1, [r2, #0]
20004894:	930e      	str	r3, [sp, #56]	; 0x38
20004896:	f7ff b870 	b.w	2000397a <_vfprintf_r+0x35e>
2000489a:	bf00      	nop
2000489c:	66666667 	.word	0x66666667
200048a0:	20008fa4 	.word	0x20008fa4
200048a4:	20008fb8 	.word	0x20008fb8
200048a8:	20008fcc 	.word	0x20008fcc
200048ac:	20008fe8 	.word	0x20008fe8
200048b0:	2b10      	cmp	r3, #16
200048b2:	f340 8493 	ble.w	200051dc <_vfprintf_r+0x1bc0>
200048b6:	4651      	mov	r1, sl
200048b8:	4abc      	ldr	r2, [pc, #752]	; (20004bac <_vfprintf_r+0x1590>)
200048ba:	46ca      	mov	sl, r9
200048bc:	9709      	str	r7, [sp, #36]	; 0x24
200048be:	2610      	movs	r6, #16
200048c0:	4617      	mov	r7, r2
200048c2:	4689      	mov	r9, r1
200048c4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200048c6:	920f      	str	r2, [sp, #60]	; 0x3c
200048c8:	e005      	b.n	200048d6 <_vfprintf_r+0x12ba>
200048ca:	f108 0808 	add.w	r8, r8, #8
200048ce:	3d10      	subs	r5, #16
200048d0:	2d10      	cmp	r5, #16
200048d2:	f340 822a 	ble.w	20004d2a <_vfprintf_r+0x170e>
200048d6:	3301      	adds	r3, #1
200048d8:	3410      	adds	r4, #16
200048da:	2b07      	cmp	r3, #7
200048dc:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
200048e0:	e9c8 7600 	strd	r7, r6, [r8]
200048e4:	ddf1      	ble.n	200048ca <_vfprintf_r+0x12ae>
200048e6:	4649      	mov	r1, r9
200048e8:	4650      	mov	r0, sl
200048ea:	aa2a      	add	r2, sp, #168	; 0xa8
200048ec:	f003 fb3e 	bl	20007f6c <__sprint_r>
200048f0:	2800      	cmp	r0, #0
200048f2:	f040 8313 	bne.w	20004f1c <_vfprintf_r+0x1900>
200048f6:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
200048fa:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
200048fe:	e7e6      	b.n	200048ce <_vfprintf_r+0x12b2>
20004900:	4638      	mov	r0, r7
20004902:	f7fe fe29 	bl	20003558 <strlen>
20004906:	462b      	mov	r3, r5
20004908:	4602      	mov	r2, r0
2000490a:	9509      	str	r5, [sp, #36]	; 0x24
2000490c:	f7ff b8ee 	b.w	20003aec <_vfprintf_r+0x4d0>
20004910:	9b07      	ldr	r3, [sp, #28]
20004912:	2500      	movs	r5, #0
20004914:	f413 7f00 	tst.w	r3, #512	; 0x200
20004918:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000491a:	f853 4b04 	ldr.w	r4, [r3], #4
2000491e:	930e      	str	r3, [sp, #56]	; 0x38
20004920:	bf18      	it	ne
20004922:	b2e4      	uxtbne	r4, r4
20004924:	e695      	b.n	20004652 <_vfprintf_r+0x1036>
20004926:	9a0e      	ldr	r2, [sp, #56]	; 0x38
20004928:	9b08      	ldr	r3, [sp, #32]
2000492a:	f852 4b04 	ldr.w	r4, [r2], #4
2000492e:	f413 7f00 	tst.w	r3, #512	; 0x200
20004932:	f04f 0500 	mov.w	r5, #0
20004936:	f04f 0301 	mov.w	r3, #1
2000493a:	920e      	str	r2, [sp, #56]	; 0x38
2000493c:	bf18      	it	ne
2000493e:	b2e4      	uxtbne	r4, r4
20004940:	f7ff b8f4 	b.w	20003b2c <_vfprintf_r+0x510>
20004944:	9b07      	ldr	r3, [sp, #28]
20004946:	2500      	movs	r5, #0
20004948:	f413 7f00 	tst.w	r3, #512	; 0x200
2000494c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2000494e:	f853 4b04 	ldr.w	r4, [r3], #4
20004952:	930e      	str	r3, [sp, #56]	; 0x38
20004954:	bf18      	it	ne
20004956:	b2e4      	uxtbne	r4, r4
20004958:	f7ff b8e3 	b.w	20003b22 <_vfprintf_r+0x506>
2000495c:	9b07      	ldr	r3, [sp, #28]
2000495e:	f413 7f00 	tst.w	r3, #512	; 0x200
20004962:	9b0e      	ldr	r3, [sp, #56]	; 0x38
20004964:	f853 4b04 	ldr.w	r4, [r3], #4
20004968:	bf18      	it	ne
2000496a:	b264      	sxtbne	r4, r4
2000496c:	17e5      	asrs	r5, r4, #31
2000496e:	930e      	str	r3, [sp, #56]	; 0x38
20004970:	4622      	mov	r2, r4
20004972:	462b      	mov	r3, r5
20004974:	f7ff b871 	b.w	20003a5a <_vfprintf_r+0x43e>
20004978:	4b8c      	ldr	r3, [pc, #560]	; (20004bac <_vfprintf_r+0x1590>)
2000497a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
2000497c:	930f      	str	r3, [sp, #60]	; 0x3c
2000497e:	f7ff baa5 	b.w	20003ecc <_vfprintf_r+0x8b0>
20004982:	4648      	mov	r0, r9
20004984:	4651      	mov	r1, sl
20004986:	aa2a      	add	r2, sp, #168	; 0xa8
20004988:	f003 faf0 	bl	20007f6c <__sprint_r>
2000498c:	2800      	cmp	r0, #0
2000498e:	f43e affd 	beq.w	2000398c <_vfprintf_r+0x370>
20004992:	f7ff bab6 	b.w	20003f02 <_vfprintf_r+0x8e6>
20004996:	9a13      	ldr	r2, [sp, #76]	; 0x4c
20004998:	18bd      	adds	r5, r7, r2
2000499a:	1bad      	subs	r5, r5, r6
2000499c:	1ad3      	subs	r3, r2, r3
2000499e:	429d      	cmp	r5, r3
200049a0:	bfa8      	it	ge
200049a2:	461d      	movge	r5, r3
200049a4:	e44f      	b.n	20004246 <_vfprintf_r+0xc2a>
200049a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
200049a8:	990a      	ldr	r1, [sp, #40]	; 0x28
200049aa:	f853 2b04 	ldr.w	r2, [r3], #4
200049ae:	465f      	mov	r7, fp
200049b0:	8011      	strh	r1, [r2, #0]
200049b2:	930e      	str	r3, [sp, #56]	; 0x38
200049b4:	f7fe bfe1 	b.w	2000397a <_vfprintf_r+0x35e>
200049b8:	2330      	movs	r3, #48	; 0x30
200049ba:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
200049be:	2358      	movs	r3, #88	; 0x58
200049c0:	f88d 308d 	strb.w	r3, [sp, #141]	; 0x8d
200049c4:	9b07      	ldr	r3, [sp, #28]
200049c6:	f043 0402 	orr.w	r4, r3, #2
200049ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
200049cc:	2b63      	cmp	r3, #99	; 0x63
200049ce:	f300 82ed 	bgt.w	20004fac <_vfprintf_r+0x1990>
200049d2:	2300      	movs	r3, #0
200049d4:	af3d      	add	r7, sp, #244	; 0xf4
200049d6:	930d      	str	r3, [sp, #52]	; 0x34
200049d8:	9b07      	ldr	r3, [sp, #28]
200049da:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
200049de:	f443 7381 	orr.w	r3, r3, #258	; 0x102
200049e2:	9312      	str	r3, [sp, #72]	; 0x48
200049e4:	4613      	mov	r3, r2
200049e6:	2b00      	cmp	r3, #0
200049e8:	f026 0520 	bic.w	r5, r6, #32
200049ec:	9407      	str	r4, [sp, #28]
200049ee:	f2c0 8255 	blt.w	20004e9c <_vfprintf_r+0x1880>
200049f2:	930f      	str	r3, [sp, #60]	; 0x3c
200049f4:	2300      	movs	r3, #0
200049f6:	9508      	str	r5, [sp, #32]
200049f8:	910c      	str	r1, [sp, #48]	; 0x30
200049fa:	931e      	str	r3, [sp, #120]	; 0x78
200049fc:	2e61      	cmp	r6, #97	; 0x61
200049fe:	f000 837b 	beq.w	200050f8 <_vfprintf_r+0x1adc>
20004a02:	2e41      	cmp	r6, #65	; 0x41
20004a04:	f47f ad76 	bne.w	200044f4 <_vfprintf_r+0xed8>
20004a08:	aa24      	add	r2, sp, #144	; 0x90
20004a0a:	980c      	ldr	r0, [sp, #48]	; 0x30
20004a0c:	990f      	ldr	r1, [sp, #60]	; 0x3c
20004a0e:	f003 f9e1 	bl	20007dd4 <frexp>
20004a12:	2200      	movs	r2, #0
20004a14:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
20004a18:	f7fe fa38 	bl	20002e8c <__aeabi_dmul>
20004a1c:	4604      	mov	r4, r0
20004a1e:	460d      	mov	r5, r1
20004a20:	2200      	movs	r2, #0
20004a22:	2300      	movs	r3, #0
20004a24:	e9cd 4510 	strd	r4, r5, [sp, #64]	; 0x40
20004a28:	f003 fd66 	bl	200084f8 <__aeabi_dcmpeq>
20004a2c:	b108      	cbz	r0, 20004a32 <_vfprintf_r+0x1416>
20004a2e:	2301      	movs	r3, #1
20004a30:	9324      	str	r3, [sp, #144]	; 0x90
20004a32:	4b5f      	ldr	r3, [pc, #380]	; (20004bb0 <_vfprintf_r+0x1594>)
20004a34:	930c      	str	r3, [sp, #48]	; 0x30
20004a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
20004a38:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
20004a3c:	3b01      	subs	r3, #1
20004a3e:	9613      	str	r6, [sp, #76]	; 0x4c
20004a40:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
20004a44:	f8cd a080 	str.w	sl, [sp, #128]	; 0x80
20004a48:	9721      	str	r7, [sp, #132]	; 0x84
20004a4a:	46ba      	mov	sl, r7
20004a4c:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
20004a50:	4699      	mov	r9, r3
20004a52:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
20004a56:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
20004a5a:	e006      	b.n	20004a6a <_vfprintf_r+0x144e>
20004a5c:	2200      	movs	r2, #0
20004a5e:	2300      	movs	r3, #0
20004a60:	f003 fd4a 	bl	200084f8 <__aeabi_dcmpeq>
20004a64:	f109 39ff 	add.w	r9, r9, #4294967295
20004a68:	b9e8      	cbnz	r0, 20004aa6 <_vfprintf_r+0x148a>
20004a6a:	2200      	movs	r2, #0
20004a6c:	4b51      	ldr	r3, [pc, #324]	; (20004bb4 <_vfprintf_r+0x1598>)
20004a6e:	4630      	mov	r0, r6
20004a70:	4639      	mov	r1, r7
20004a72:	f7fe fa0b 	bl	20002e8c <__aeabi_dmul>
20004a76:	460d      	mov	r5, r1
20004a78:	4604      	mov	r4, r0
20004a7a:	f003 fd85 	bl	20008588 <__aeabi_d2iz>
20004a7e:	4680      	mov	r8, r0
20004a80:	f7fe f99a 	bl	20002db8 <__aeabi_i2d>
20004a84:	460b      	mov	r3, r1
20004a86:	4602      	mov	r2, r0
20004a88:	4629      	mov	r1, r5
20004a8a:	4620      	mov	r0, r4
20004a8c:	f7fe f846 	bl	20002b1c <__aeabi_dsub>
20004a90:	f81b 3008 	ldrb.w	r3, [fp, r8]
20004a94:	f1b9 3fff 	cmp.w	r9, #4294967295
20004a98:	4655      	mov	r5, sl
20004a9a:	4606      	mov	r6, r0
20004a9c:	460f      	mov	r7, r1
20004a9e:	464c      	mov	r4, r9
20004aa0:	f80a 3b01 	strb.w	r3, [sl], #1
20004aa4:	d1da      	bne.n	20004a5c <_vfprintf_r+0x1440>
20004aa6:	4630      	mov	r0, r6
20004aa8:	4639      	mov	r1, r7
20004aaa:	2200      	movs	r2, #0
20004aac:	4b42      	ldr	r3, [pc, #264]	; (20004bb8 <_vfprintf_r+0x159c>)
20004aae:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
20004ab2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
20004ab4:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
20004ab8:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
20004abc:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
20004ac0:	e9dd 9a1f 	ldrd	r9, sl, [sp, #124]	; 0x7c
20004ac4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
20004ac8:	9f21      	ldr	r7, [sp, #132]	; 0x84
20004aca:	f003 fd3d 	bl	20008548 <__aeabi_dcmpgt>
20004ace:	2800      	cmp	r0, #0
20004ad0:	f040 8250 	bne.w	20004f74 <_vfprintf_r+0x1958>
20004ad4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
20004ad8:	2200      	movs	r2, #0
20004ada:	4b37      	ldr	r3, [pc, #220]	; (20004bb8 <_vfprintf_r+0x159c>)
20004adc:	f003 fd0c 	bl	200084f8 <__aeabi_dcmpeq>
20004ae0:	b118      	cbz	r0, 20004aea <_vfprintf_r+0x14ce>
20004ae2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20004ae4:	07db      	lsls	r3, r3, #31
20004ae6:	f100 8245 	bmi.w	20004f74 <_vfprintf_r+0x1958>
20004aea:	2c00      	cmp	r4, #0
20004aec:	db08      	blt.n	20004b00 <_vfprintf_r+0x14e4>
20004aee:	2230      	movs	r2, #48	; 0x30
20004af0:	990f      	ldr	r1, [sp, #60]	; 0x3c
20004af2:	1c63      	adds	r3, r4, #1
20004af4:	440b      	add	r3, r1
20004af6:	f801 2b01 	strb.w	r2, [r1], #1
20004afa:	428b      	cmp	r3, r1
20004afc:	d1fb      	bne.n	20004af6 <_vfprintf_r+0x14da>
20004afe:	910f      	str	r1, [sp, #60]	; 0x3c
20004b00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20004b02:	9d07      	ldr	r5, [sp, #28]
20004b04:	1bdb      	subs	r3, r3, r7
20004b06:	9313      	str	r3, [sp, #76]	; 0x4c
20004b08:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004b0a:	9307      	str	r3, [sp, #28]
20004b0c:	e51a      	b.n	20004544 <_vfprintf_r+0xf28>
20004b0e:	4651      	mov	r1, sl
20004b10:	4648      	mov	r0, r9
20004b12:	aa2a      	add	r2, sp, #168	; 0xa8
20004b14:	f003 fa2a 	bl	20007f6c <__sprint_r>
20004b18:	2800      	cmp	r0, #0
20004b1a:	f47f a9ec 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004b1e:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
20004b22:	9a24      	ldr	r2, [sp, #144]	; 0x90
20004b24:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004b28:	f7ff bace 	b.w	200040c8 <_vfprintf_r+0xaac>
20004b2c:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
20004b30:	f002 f852 	bl	20006bd8 <__retarget_lock_release_recursive>
20004b34:	f7fe be7a 	b.w	2000382c <_vfprintf_r+0x210>
20004b38:	9b24      	ldr	r3, [sp, #144]	; 0x90
20004b3a:	1cd8      	adds	r0, r3, #3
20004b3c:	9310      	str	r3, [sp, #64]	; 0x40
20004b3e:	db02      	blt.n	20004b46 <_vfprintf_r+0x152a>
20004b40:	9a09      	ldr	r2, [sp, #36]	; 0x24
20004b42:	4293      	cmp	r3, r2
20004b44:	dd04      	ble.n	20004b50 <_vfprintf_r+0x1534>
20004b46:	3e02      	subs	r6, #2
20004b48:	f026 0320 	bic.w	r3, r6, #32
20004b4c:	9308      	str	r3, [sp, #32]
20004b4e:	e503      	b.n	20004558 <_vfprintf_r+0xf3c>
20004b50:	9b10      	ldr	r3, [sp, #64]	; 0x40
20004b52:	9913      	ldr	r1, [sp, #76]	; 0x4c
20004b54:	428b      	cmp	r3, r1
20004b56:	f2c0 81ab 	blt.w	20004eb0 <_vfprintf_r+0x1894>
20004b5a:	07ea      	lsls	r2, r5, #31
20004b5c:	f140 82e4 	bpl.w	20005128 <_vfprintf_r+0x1b0c>
20004b60:	9a17      	ldr	r2, [sp, #92]	; 0x5c
20004b62:	4413      	add	r3, r2
20004b64:	930c      	str	r3, [sp, #48]	; 0x30
20004b66:	056e      	lsls	r6, r5, #21
20004b68:	f140 82e1 	bpl.w	2000512e <_vfprintf_r+0x1b12>
20004b6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
20004b6e:	2b00      	cmp	r3, #0
20004b70:	f300 8294 	bgt.w	2000509c <_vfprintf_r+0x1a80>
20004b74:	2667      	movs	r6, #103	; 0x67
20004b76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20004b78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
20004b7c:	9308      	str	r3, [sp, #32]
20004b7e:	2300      	movs	r3, #0
20004b80:	9312      	str	r3, [sp, #72]	; 0x48
20004b82:	9316      	str	r3, [sp, #88]	; 0x58
20004b84:	e54c      	b.n	20004620 <_vfprintf_r+0x1004>
20004b86:	222d      	movs	r2, #45	; 0x2d
20004b88:	2300      	movs	r3, #0
20004b8a:	f88d 208b 	strb.w	r2, [sp, #139]	; 0x8b
20004b8e:	9309      	str	r3, [sp, #36]	; 0x24
20004b90:	f7fe bf42 	b.w	20003a18 <_vfprintf_r+0x3fc>
20004b94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20004b96:	42a3      	cmp	r3, r4
20004b98:	f4bf acd2 	bcs.w	20004540 <_vfprintf_r+0xf24>
20004b9c:	2130      	movs	r1, #48	; 0x30
20004b9e:	1c5a      	adds	r2, r3, #1
20004ba0:	9228      	str	r2, [sp, #160]	; 0xa0
20004ba2:	7019      	strb	r1, [r3, #0]
20004ba4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20004ba6:	429c      	cmp	r4, r3
20004ba8:	d8f9      	bhi.n	20004b9e <_vfprintf_r+0x1582>
20004baa:	e4c9      	b.n	20004540 <_vfprintf_r+0xf24>
20004bac:	20008fe8 	.word	0x20008fe8
20004bb0:	20008fb8 	.word	0x20008fb8
20004bb4:	40300000 	.word	0x40300000
20004bb8:	3fe00000 	.word	0x3fe00000
20004bbc:	232d      	movs	r3, #45	; 0x2d
20004bbe:	461a      	mov	r2, r3
20004bc0:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
20004bc4:	f7fe bf13 	b.w	200039ee <_vfprintf_r+0x3d2>
20004bc8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
20004bca:	991c      	ldr	r1, [sp, #112]	; 0x70
20004bcc:	1aff      	subs	r7, r7, r3
20004bce:	461a      	mov	r2, r3
20004bd0:	4638      	mov	r0, r7
20004bd2:	f7fe fcef 	bl	200035b4 <strncpy>
20004bd6:	f898 3001 	ldrb.w	r3, [r8, #1]
20004bda:	b10b      	cbz	r3, 20004be0 <_vfprintf_r+0x15c4>
20004bdc:	f108 0801 	add.w	r8, r8, #1
20004be0:	220a      	movs	r2, #10
20004be2:	2300      	movs	r3, #0
20004be4:	4620      	mov	r0, r4
20004be6:	4629      	mov	r1, r5
20004be8:	f003 fcf6 	bl	200085d8 <__aeabi_uldivmod>
20004bec:	f04f 0b00 	mov.w	fp, #0
20004bf0:	e5df      	b.n	200047b2 <_vfprintf_r+0x1196>
20004bf2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20004bf4:	4642      	mov	r2, r8
20004bf6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
20004bfa:	18fb      	adds	r3, r7, r3
20004bfc:	9309      	str	r3, [sp, #36]	; 0x24
20004bfe:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
20004c02:	970f      	str	r7, [sp, #60]	; 0x3c
20004c04:	4620      	mov	r0, r4
20004c06:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
20004c0a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
20004c0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004c0e:	f1b8 0f00 	cmp.w	r8, #0
20004c12:	d02d      	beq.n	20004c70 <_vfprintf_r+0x1654>
20004c14:	2b00      	cmp	r3, #0
20004c16:	d16d      	bne.n	20004cf4 <_vfprintf_r+0x16d8>
20004c18:	3f01      	subs	r7, #1
20004c1a:	f108 38ff 	add.w	r8, r8, #4294967295
20004c1e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004c20:	991c      	ldr	r1, [sp, #112]	; 0x70
20004c22:	3301      	adds	r3, #1
20004c24:	4458      	add	r0, fp
20004c26:	2b07      	cmp	r3, #7
20004c28:	e9c2 1b00 	strd	r1, fp, [r2]
20004c2c:	902c      	str	r0, [sp, #176]	; 0xb0
20004c2e:	932b      	str	r3, [sp, #172]	; 0xac
20004c30:	dc64      	bgt.n	20004cfc <_vfprintf_r+0x16e0>
20004c32:	3208      	adds	r2, #8
20004c34:	9909      	ldr	r1, [sp, #36]	; 0x24
20004c36:	783b      	ldrb	r3, [r7, #0]
20004c38:	1b8d      	subs	r5, r1, r6
20004c3a:	429d      	cmp	r5, r3
20004c3c:	bfa8      	it	ge
20004c3e:	461d      	movge	r5, r3
20004c40:	2d00      	cmp	r5, #0
20004c42:	dd0a      	ble.n	20004c5a <_vfprintf_r+0x163e>
20004c44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004c46:	4428      	add	r0, r5
20004c48:	3301      	adds	r3, #1
20004c4a:	2b07      	cmp	r3, #7
20004c4c:	e9c2 6500 	strd	r6, r5, [r2]
20004c50:	902c      	str	r0, [sp, #176]	; 0xb0
20004c52:	932b      	str	r3, [sp, #172]	; 0xac
20004c54:	dc5d      	bgt.n	20004d12 <_vfprintf_r+0x16f6>
20004c56:	783b      	ldrb	r3, [r7, #0]
20004c58:	3208      	adds	r2, #8
20004c5a:	2d00      	cmp	r5, #0
20004c5c:	bfb4      	ite	lt
20004c5e:	461d      	movlt	r5, r3
20004c60:	1b5d      	subge	r5, r3, r5
20004c62:	2d00      	cmp	r5, #0
20004c64:	dc15      	bgt.n	20004c92 <_vfprintf_r+0x1676>
20004c66:	441e      	add	r6, r3
20004c68:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004c6a:	f1b8 0f00 	cmp.w	r8, #0
20004c6e:	d1d1      	bne.n	20004c14 <_vfprintf_r+0x15f8>
20004c70:	2b00      	cmp	r3, #0
20004c72:	d13f      	bne.n	20004cf4 <_vfprintf_r+0x16d8>
20004c74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20004c76:	971a      	str	r7, [sp, #104]	; 0x68
20004c78:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
20004c7a:	4690      	mov	r8, r2
20004c7c:	18fb      	adds	r3, r7, r3
20004c7e:	429e      	cmp	r6, r3
20004c80:	4632      	mov	r2, r6
20004c82:	bf28      	it	cs
20004c84:	461a      	movcs	r2, r3
20004c86:	4604      	mov	r4, r0
20004c88:	4616      	mov	r6, r2
20004c8a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
20004c8e:	f7ff baaf 	b.w	200041f0 <_vfprintf_r+0xbd4>
20004c92:	2d10      	cmp	r5, #16
20004c94:	f340 826a 	ble.w	2000516c <_vfprintf_r+0x1b50>
20004c98:	992b      	ldr	r1, [sp, #172]	; 0xac
20004c9a:	2410      	movs	r4, #16
20004c9c:	460b      	mov	r3, r1
20004c9e:	e004      	b.n	20004caa <_vfprintf_r+0x168e>
20004ca0:	3d10      	subs	r5, #16
20004ca2:	2d10      	cmp	r5, #16
20004ca4:	f102 0208 	add.w	r2, r2, #8
20004ca8:	dd16      	ble.n	20004cd8 <_vfprintf_r+0x16bc>
20004caa:	3301      	adds	r3, #1
20004cac:	49b0      	ldr	r1, [pc, #704]	; (20004f70 <_vfprintf_r+0x1954>)
20004cae:	3010      	adds	r0, #16
20004cb0:	2b07      	cmp	r3, #7
20004cb2:	e9cd 302b 	strd	r3, r0, [sp, #172]	; 0xac
20004cb6:	e9c2 1400 	strd	r1, r4, [r2]
20004cba:	ddf1      	ble.n	20004ca0 <_vfprintf_r+0x1684>
20004cbc:	4651      	mov	r1, sl
20004cbe:	4648      	mov	r0, r9
20004cc0:	aa2a      	add	r2, sp, #168	; 0xa8
20004cc2:	f003 f953 	bl	20007f6c <__sprint_r>
20004cc6:	2800      	cmp	r0, #0
20004cc8:	f47f a915 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004ccc:	e9dd 302b 	ldrd	r3, r0, [sp, #172]	; 0xac
20004cd0:	3d10      	subs	r5, #16
20004cd2:	2d10      	cmp	r5, #16
20004cd4:	aa2d      	add	r2, sp, #180	; 0xb4
20004cd6:	dce8      	bgt.n	20004caa <_vfprintf_r+0x168e>
20004cd8:	4619      	mov	r1, r3
20004cda:	1c4b      	adds	r3, r1, #1
20004cdc:	49a4      	ldr	r1, [pc, #656]	; (20004f70 <_vfprintf_r+0x1954>)
20004cde:	4428      	add	r0, r5
20004ce0:	2b07      	cmp	r3, #7
20004ce2:	e9cd 302b 	strd	r3, r0, [sp, #172]	; 0xac
20004ce6:	e9c2 1500 	strd	r1, r5, [r2]
20004cea:	dc3e      	bgt.n	20004d6a <_vfprintf_r+0x174e>
20004cec:	783b      	ldrb	r3, [r7, #0]
20004cee:	3208      	adds	r2, #8
20004cf0:	441e      	add	r6, r3
20004cf2:	e7b9      	b.n	20004c68 <_vfprintf_r+0x164c>
20004cf4:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004cf6:	3b01      	subs	r3, #1
20004cf8:	9312      	str	r3, [sp, #72]	; 0x48
20004cfa:	e790      	b.n	20004c1e <_vfprintf_r+0x1602>
20004cfc:	4651      	mov	r1, sl
20004cfe:	4648      	mov	r0, r9
20004d00:	aa2a      	add	r2, sp, #168	; 0xa8
20004d02:	f003 f933 	bl	20007f6c <__sprint_r>
20004d06:	2800      	cmp	r0, #0
20004d08:	f47f a8f5 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004d0c:	982c      	ldr	r0, [sp, #176]	; 0xb0
20004d0e:	aa2d      	add	r2, sp, #180	; 0xb4
20004d10:	e790      	b.n	20004c34 <_vfprintf_r+0x1618>
20004d12:	4651      	mov	r1, sl
20004d14:	4648      	mov	r0, r9
20004d16:	aa2a      	add	r2, sp, #168	; 0xa8
20004d18:	f003 f928 	bl	20007f6c <__sprint_r>
20004d1c:	2800      	cmp	r0, #0
20004d1e:	f47f a8ea 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004d22:	783b      	ldrb	r3, [r7, #0]
20004d24:	982c      	ldr	r0, [sp, #176]	; 0xb0
20004d26:	aa2d      	add	r2, sp, #180	; 0xb4
20004d28:	e797      	b.n	20004c5a <_vfprintf_r+0x163e>
20004d2a:	464a      	mov	r2, r9
20004d2c:	46d1      	mov	r9, sl
20004d2e:	4692      	mov	sl, r2
20004d30:	9f09      	ldr	r7, [sp, #36]	; 0x24
20004d32:	3301      	adds	r3, #1
20004d34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
20004d36:	442c      	add	r4, r5
20004d38:	2b07      	cmp	r3, #7
20004d3a:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20004d3e:	e9c8 2500 	strd	r2, r5, [r8]
20004d42:	f300 8142 	bgt.w	20004fca <_vfprintf_r+0x19ae>
20004d46:	f108 0808 	add.w	r8, r8, #8
20004d4a:	f7ff ba4a 	b.w	200041e2 <_vfprintf_r+0xbc6>
20004d4e:	4651      	mov	r1, sl
20004d50:	4648      	mov	r0, r9
20004d52:	aa2a      	add	r2, sp, #168	; 0xa8
20004d54:	f003 f90a 	bl	20007f6c <__sprint_r>
20004d58:	2800      	cmp	r0, #0
20004d5a:	f47f a8cc 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004d5e:	9a24      	ldr	r2, [sp, #144]	; 0x90
20004d60:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004d62:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004d66:	f7ff bb48 	b.w	200043fa <_vfprintf_r+0xdde>
20004d6a:	4651      	mov	r1, sl
20004d6c:	4648      	mov	r0, r9
20004d6e:	aa2a      	add	r2, sp, #168	; 0xa8
20004d70:	f003 f8fc 	bl	20007f6c <__sprint_r>
20004d74:	2800      	cmp	r0, #0
20004d76:	f47f a8be 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004d7a:	783b      	ldrb	r3, [r7, #0]
20004d7c:	982c      	ldr	r0, [sp, #176]	; 0xb0
20004d7e:	aa2d      	add	r2, sp, #180	; 0xb4
20004d80:	441e      	add	r6, r3
20004d82:	e771      	b.n	20004c68 <_vfprintf_r+0x164c>
20004d84:	4651      	mov	r1, sl
20004d86:	4648      	mov	r0, r9
20004d88:	aa2a      	add	r2, sp, #168	; 0xa8
20004d8a:	f003 f8ef 	bl	20007f6c <__sprint_r>
20004d8e:	2800      	cmp	r0, #0
20004d90:	f47f a8b1 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004d94:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004d96:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004d9a:	f7ff ba1a 	b.w	200041d2 <_vfprintf_r+0xbb6>
20004d9e:	4651      	mov	r1, sl
20004da0:	4648      	mov	r0, r9
20004da2:	aa2a      	add	r2, sp, #168	; 0xa8
20004da4:	f003 f8e2 	bl	20007f6c <__sprint_r>
20004da8:	2800      	cmp	r0, #0
20004daa:	f47f a8a4 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004dae:	9b24      	ldr	r3, [sp, #144]	; 0x90
20004db0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004db2:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004db6:	f7ff ba31 	b.w	2000421c <_vfprintf_r+0xc00>
20004dba:	9c09      	ldr	r4, [sp, #36]	; 0x24
20004dbc:	a928      	add	r1, sp, #160	; 0xa0
20004dbe:	e9cd 0400 	strd	r0, r4, [sp]
20004dc2:	9104      	str	r1, [sp, #16]
20004dc4:	a825      	add	r0, sp, #148	; 0x94
20004dc6:	a924      	add	r1, sp, #144	; 0x90
20004dc8:	e9cd 1002 	strd	r1, r0, [sp, #8]
20004dcc:	4648      	mov	r0, r9
20004dce:	f000 fb7f 	bl	200054d0 <_dtoa_r>
20004dd2:	2d47      	cmp	r5, #71	; 0x47
20004dd4:	4607      	mov	r7, r0
20004dd6:	d11a      	bne.n	20004e0e <_vfprintf_r+0x17f2>
20004dd8:	9d07      	ldr	r5, [sp, #28]
20004dda:	462b      	mov	r3, r5
20004ddc:	07db      	lsls	r3, r3, #31
20004dde:	f100 80a1 	bmi.w	20004f24 <_vfprintf_r+0x1908>
20004de2:	9a12      	ldr	r2, [sp, #72]	; 0x48
20004de4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20004de6:	9207      	str	r2, [sp, #28]
20004de8:	2247      	movs	r2, #71	; 0x47
20004dea:	9208      	str	r2, [sp, #32]
20004dec:	f7ff bba8 	b.w	20004540 <_vfprintf_r+0xf24>
20004df0:	2003      	movs	r0, #3
20004df2:	9c09      	ldr	r4, [sp, #36]	; 0x24
20004df4:	a928      	add	r1, sp, #160	; 0xa0
20004df6:	e9cd 0400 	strd	r0, r4, [sp]
20004dfa:	9104      	str	r1, [sp, #16]
20004dfc:	a825      	add	r0, sp, #148	; 0x94
20004dfe:	a924      	add	r1, sp, #144	; 0x90
20004e00:	e9cd 1002 	strd	r1, r0, [sp, #8]
20004e04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20004e06:	4648      	mov	r0, r9
20004e08:	f000 fb62 	bl	200054d0 <_dtoa_r>
20004e0c:	4607      	mov	r7, r0
20004e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
20004e10:	2d46      	cmp	r5, #70	; 0x46
20004e12:	eb07 0403 	add.w	r4, r7, r3
20004e16:	f47f ab86 	bne.w	20004526 <_vfprintf_r+0xf0a>
20004e1a:	783b      	ldrb	r3, [r7, #0]
20004e1c:	2b30      	cmp	r3, #48	; 0x30
20004e1e:	f000 81b0 	beq.w	20005182 <_vfprintf_r+0x1b66>
20004e22:	9b24      	ldr	r3, [sp, #144]	; 0x90
20004e24:	9a12      	ldr	r2, [sp, #72]	; 0x48
20004e26:	9d07      	ldr	r5, [sp, #28]
20004e28:	441c      	add	r4, r3
20004e2a:	9207      	str	r2, [sp, #28]
20004e2c:	f7ff bb7e 	b.w	2000452c <_vfprintf_r+0xf10>
20004e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
20004e32:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
20004e36:	9308      	str	r3, [sp, #32]
20004e38:	930c      	str	r3, [sp, #48]	; 0x30
20004e3a:	9009      	str	r0, [sp, #36]	; 0x24
20004e3c:	940e      	str	r4, [sp, #56]	; 0x38
20004e3e:	9012      	str	r0, [sp, #72]	; 0x48
20004e40:	9016      	str	r0, [sp, #88]	; 0x58
20004e42:	9010      	str	r0, [sp, #64]	; 0x40
20004e44:	f7fe bde5 	b.w	20003a12 <_vfprintf_r+0x3f6>
20004e48:	9a24      	ldr	r2, [sp, #144]	; 0x90
20004e4a:	2a00      	cmp	r2, #0
20004e4c:	9210      	str	r2, [sp, #64]	; 0x40
20004e4e:	f340 81af 	ble.w	200051b0 <_vfprintf_r+0x1b94>
20004e52:	9909      	ldr	r1, [sp, #36]	; 0x24
20004e54:	f005 0301 	and.w	r3, r5, #1
20004e58:	430b      	orrs	r3, r1
20004e5a:	f040 8147 	bne.w	200050ec <_vfprintf_r+0x1ad0>
20004e5e:	2666      	movs	r6, #102	; 0x66
20004e60:	9b10      	ldr	r3, [sp, #64]	; 0x40
20004e62:	930c      	str	r3, [sp, #48]	; 0x30
20004e64:	056a      	lsls	r2, r5, #21
20004e66:	f100 811a 	bmi.w	2000509e <_vfprintf_r+0x1a82>
20004e6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20004e6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
20004e70:	9308      	str	r3, [sp, #32]
20004e72:	e684      	b.n	20004b7e <_vfprintf_r+0x1562>
20004e74:	e9dd 212b 	ldrd	r2, r1, [sp, #172]	; 0xac
20004e78:	f7ff b8f3 	b.w	20004062 <_vfprintf_r+0xa46>
20004e7c:	4651      	mov	r1, sl
20004e7e:	4648      	mov	r0, r9
20004e80:	aa2a      	add	r2, sp, #168	; 0xa8
20004e82:	f003 f873 	bl	20007f6c <__sprint_r>
20004e86:	2800      	cmp	r0, #0
20004e88:	f47f a835 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
20004e8e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
20004e90:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004e92:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004e96:	1ad3      	subs	r3, r2, r3
20004e98:	f7ff b9d5 	b.w	20004246 <_vfprintf_r+0xc2a>
20004e9c:	9508      	str	r5, [sp, #32]
20004e9e:	232d      	movs	r3, #45	; 0x2d
20004ea0:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
20004ea4:	931e      	str	r3, [sp, #120]	; 0x78
20004ea6:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
20004eaa:	910c      	str	r1, [sp, #48]	; 0x30
20004eac:	930f      	str	r3, [sp, #60]	; 0x3c
20004eae:	e5a5      	b.n	200049fc <_vfprintf_r+0x13e0>
20004eb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
20004eb2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
20004eb4:	189a      	adds	r2, r3, r2
20004eb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
20004eb8:	920c      	str	r2, [sp, #48]	; 0x30
20004eba:	2b00      	cmp	r3, #0
20004ebc:	f340 8158 	ble.w	20005170 <_vfprintf_r+0x1b54>
20004ec0:	2667      	movs	r6, #103	; 0x67
20004ec2:	e7cf      	b.n	20004e64 <_vfprintf_r+0x1848>
20004ec4:	2300      	movs	r3, #0
20004ec6:	9309      	str	r3, [sp, #36]	; 0x24
20004ec8:	f7fe bc1a 	b.w	20003700 <_vfprintf_r+0xe4>
20004ecc:	4255      	negs	r5, r2
20004ece:	3210      	adds	r2, #16
20004ed0:	f280 81a1 	bge.w	20005216 <_vfprintf_r+0x1bfa>
20004ed4:	4651      	mov	r1, sl
20004ed6:	4a26      	ldr	r2, [pc, #152]	; (20004f70 <_vfprintf_r+0x1954>)
20004ed8:	46ca      	mov	sl, r9
20004eda:	9709      	str	r7, [sp, #36]	; 0x24
20004edc:	2610      	movs	r6, #16
20004ede:	4617      	mov	r7, r2
20004ee0:	4689      	mov	r9, r1
20004ee2:	920f      	str	r2, [sp, #60]	; 0x3c
20004ee4:	e004      	b.n	20004ef0 <_vfprintf_r+0x18d4>
20004ee6:	f108 0808 	add.w	r8, r8, #8
20004eea:	3d10      	subs	r5, #16
20004eec:	2d10      	cmp	r5, #16
20004eee:	dd79      	ble.n	20004fe4 <_vfprintf_r+0x19c8>
20004ef0:	3301      	adds	r3, #1
20004ef2:	3410      	adds	r4, #16
20004ef4:	2b07      	cmp	r3, #7
20004ef6:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20004efa:	e9c8 7600 	strd	r7, r6, [r8]
20004efe:	ddf2      	ble.n	20004ee6 <_vfprintf_r+0x18ca>
20004f00:	4649      	mov	r1, r9
20004f02:	4650      	mov	r0, sl
20004f04:	aa2a      	add	r2, sp, #168	; 0xa8
20004f06:	f003 f831 	bl	20007f6c <__sprint_r>
20004f0a:	b938      	cbnz	r0, 20004f1c <_vfprintf_r+0x1900>
20004f0c:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
20004f10:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004f14:	e7e9      	b.n	20004eea <_vfprintf_r+0x18ce>
20004f16:	46d1      	mov	r9, sl
20004f18:	f7fe bfee 	b.w	20003ef8 <_vfprintf_r+0x8dc>
20004f1c:	46cb      	mov	fp, r9
20004f1e:	46d1      	mov	r9, sl
20004f20:	f7fe bfea 	b.w	20003ef8 <_vfprintf_r+0x8dc>
20004f24:	9b09      	ldr	r3, [sp, #36]	; 0x24
20004f26:	9d07      	ldr	r5, [sp, #28]
20004f28:	18fc      	adds	r4, r7, r3
20004f2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
20004f2c:	9307      	str	r3, [sp, #28]
20004f2e:	2347      	movs	r3, #71	; 0x47
20004f30:	9308      	str	r3, [sp, #32]
20004f32:	f7ff bafb 	b.w	2000452c <_vfprintf_r+0xf10>
20004f36:	9b2b      	ldr	r3, [sp, #172]	; 0xac
20004f38:	f7ff b91e 	b.w	20004178 <_vfprintf_r+0xb5c>
20004f3c:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
20004f40:	07db      	lsls	r3, r3, #31
20004f42:	d407      	bmi.n	20004f54 <_vfprintf_r+0x1938>
20004f44:	f8bb 300c 	ldrh.w	r3, [fp, #12]
20004f48:	059f      	lsls	r7, r3, #22
20004f4a:	d403      	bmi.n	20004f54 <_vfprintf_r+0x1938>
20004f4c:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
20004f50:	f001 fe42 	bl	20006bd8 <__retarget_lock_release_recursive>
20004f54:	f04f 33ff 	mov.w	r3, #4294967295
20004f58:	930a      	str	r3, [sp, #40]	; 0x28
20004f5a:	f7fe bfdf 	b.w	20003f1c <_vfprintf_r+0x900>
20004f5e:	4b04      	ldr	r3, [pc, #16]	; (20004f70 <_vfprintf_r+0x1954>)
20004f60:	9a2b      	ldr	r2, [sp, #172]	; 0xac
20004f62:	930f      	str	r3, [sp, #60]	; 0x3c
20004f64:	f7fe bf79 	b.w	20003e5a <_vfprintf_r+0x83e>
20004f68:	9b07      	ldr	r3, [sp, #28]
20004f6a:	9308      	str	r3, [sp, #32]
20004f6c:	f7ff b88e 	b.w	2000408c <_vfprintf_r+0xa70>
20004f70:	20008fe8 	.word	0x20008fe8
20004f74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
20004f76:	990c      	ldr	r1, [sp, #48]	; 0x30
20004f78:	9528      	str	r5, [sp, #160]	; 0xa0
20004f7a:	f813 2c01 	ldrb.w	r2, [r3, #-1]
20004f7e:	7bc9      	ldrb	r1, [r1, #15]
20004f80:	428a      	cmp	r2, r1
20004f82:	f040 8129 	bne.w	200051d8 <_vfprintf_r+0x1bbc>
20004f86:	2030      	movs	r0, #48	; 0x30
20004f88:	f803 0c01 	strb.w	r0, [r3, #-1]
20004f8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20004f8e:	1e5a      	subs	r2, r3, #1
20004f90:	9228      	str	r2, [sp, #160]	; 0xa0
20004f92:	f813 2c01 	ldrb.w	r2, [r3, #-1]
20004f96:	4291      	cmp	r1, r2
20004f98:	d0f6      	beq.n	20004f88 <_vfprintf_r+0x196c>
20004f9a:	2a39      	cmp	r2, #57	; 0x39
20004f9c:	bf0b      	itete	eq
20004f9e:	9a0c      	ldreq	r2, [sp, #48]	; 0x30
20004fa0:	3201      	addne	r2, #1
20004fa2:	7a92      	ldrbeq	r2, [r2, #10]
20004fa4:	b2d2      	uxtbne	r2, r2
20004fa6:	f803 2c01 	strb.w	r2, [r3, #-1]
20004faa:	e5a9      	b.n	20004b00 <_vfprintf_r+0x14e4>
20004fac:	4648      	mov	r0, r9
20004fae:	1c59      	adds	r1, r3, #1
20004fb0:	f001 fe8c 	bl	20006ccc <_malloc_r>
20004fb4:	4607      	mov	r7, r0
20004fb6:	2800      	cmp	r0, #0
20004fb8:	f000 8124 	beq.w	20005204 <_vfprintf_r+0x1be8>
20004fbc:	900d      	str	r0, [sp, #52]	; 0x34
20004fbe:	e50b      	b.n	200049d8 <_vfprintf_r+0x13bc>
20004fc0:	2330      	movs	r3, #48	; 0x30
20004fc2:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
20004fc6:	2378      	movs	r3, #120	; 0x78
20004fc8:	e4fa      	b.n	200049c0 <_vfprintf_r+0x13a4>
20004fca:	4651      	mov	r1, sl
20004fcc:	4648      	mov	r0, r9
20004fce:	aa2a      	add	r2, sp, #168	; 0xa8
20004fd0:	f002 ffcc 	bl	20007f6c <__sprint_r>
20004fd4:	2800      	cmp	r0, #0
20004fd6:	f47e af8e 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20004fda:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
20004fdc:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20004fe0:	f7ff b8ff 	b.w	200041e2 <_vfprintf_r+0xbc6>
20004fe4:	464a      	mov	r2, r9
20004fe6:	46d1      	mov	r9, sl
20004fe8:	4692      	mov	sl, r2
20004fea:	9f09      	ldr	r7, [sp, #36]	; 0x24
20004fec:	3301      	adds	r3, #1
20004fee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
20004ff0:	442c      	add	r4, r5
20004ff2:	2b07      	cmp	r3, #7
20004ff4:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
20004ff8:	e9c8 2500 	strd	r2, r5, [r8]
20004ffc:	f77f aa13 	ble.w	20004426 <_vfprintf_r+0xe0a>
20005000:	4651      	mov	r1, sl
20005002:	4648      	mov	r0, r9
20005004:	aa2a      	add	r2, sp, #168	; 0xa8
20005006:	f002 ffb1 	bl	20007f6c <__sprint_r>
2000500a:	2800      	cmp	r0, #0
2000500c:	f47e af73 	bne.w	20003ef6 <_vfprintf_r+0x8da>
20005010:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
20005014:	f10d 08b4 	add.w	r8, sp, #180	; 0xb4
20005018:	f7ff b859 	b.w	200040ce <_vfprintf_r+0xab2>
2000501c:	2b00      	cmp	r3, #0
2000501e:	bf08      	it	eq
20005020:	2301      	moveq	r3, #1
20005022:	9309      	str	r3, [sp, #36]	; 0x24
20005024:	9b07      	ldr	r3, [sp, #28]
20005026:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2000502a:	9312      	str	r3, [sp, #72]	; 0x48
2000502c:	9b15      	ldr	r3, [sp, #84]	; 0x54
2000502e:	2b00      	cmp	r3, #0
20005030:	930c      	str	r3, [sp, #48]	; 0x30
20005032:	f2c0 80bb 	blt.w	200051ac <_vfprintf_r+0x1b90>
20005036:	2402      	movs	r4, #2
20005038:	9d09      	ldr	r5, [sp, #36]	; 0x24
2000503a:	a828      	add	r0, sp, #160	; 0xa0
2000503c:	aa25      	add	r2, sp, #148	; 0x94
2000503e:	ab24      	add	r3, sp, #144	; 0x90
20005040:	e9cd 2003 	strd	r2, r0, [sp, #12]
20005044:	e9cd 4500 	strd	r4, r5, [sp]
20005048:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
2000504c:	9302      	str	r3, [sp, #8]
2000504e:	4622      	mov	r2, r4
20005050:	462b      	mov	r3, r5
20005052:	4648      	mov	r0, r9
20005054:	910d      	str	r1, [sp, #52]	; 0x34
20005056:	f000 fa3b 	bl	200054d0 <_dtoa_r>
2000505a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2000505c:	4607      	mov	r7, r0
2000505e:	930f      	str	r3, [sp, #60]	; 0x3c
20005060:	9b0d      	ldr	r3, [sp, #52]	; 0x34
20005062:	940c      	str	r4, [sp, #48]	; 0x30
20005064:	931e      	str	r3, [sp, #120]	; 0x78
20005066:	e6b7      	b.n	20004dd8 <_vfprintf_r+0x17bc>
20005068:	2306      	movs	r3, #6
2000506a:	9309      	str	r3, [sp, #36]	; 0x24
2000506c:	f7ff ba33 	b.w	200044d6 <_vfprintf_r+0xeba>
20005070:	9b15      	ldr	r3, [sp, #84]	; 0x54
20005072:	2003      	movs	r0, #3
20005074:	2b00      	cmp	r3, #0
20005076:	bfb8      	it	lt
20005078:	232d      	movlt	r3, #45	; 0x2d
2000507a:	f04f 0100 	mov.w	r1, #0
2000507e:	bfba      	itte	lt
20005080:	461a      	movlt	r2, r3
20005082:	f88d 308b 	strblt.w	r3, [sp, #139]	; 0x8b
20005086:	f89d 208b 	ldrbge.w	r2, [sp, #139]	; 0x8b
2000508a:	4f66      	ldr	r7, [pc, #408]	; (20005224 <_vfprintf_r+0x1c08>)
2000508c:	4b66      	ldr	r3, [pc, #408]	; (20005228 <_vfprintf_r+0x1c0c>)
2000508e:	9008      	str	r0, [sp, #32]
20005090:	910d      	str	r1, [sp, #52]	; 0x34
20005092:	f7fe bcb2 	b.w	200039fa <_vfprintf_r+0x3de>
20005096:	46d3      	mov	fp, sl
20005098:	f7fe bf33 	b.w	20003f02 <_vfprintf_r+0x8e6>
2000509c:	2667      	movs	r6, #103	; 0x67
2000509e:	991a      	ldr	r1, [sp, #104]	; 0x68
200050a0:	780b      	ldrb	r3, [r1, #0]
200050a2:	2bff      	cmp	r3, #255	; 0xff
200050a4:	f000 80aa 	beq.w	200051fc <_vfprintf_r+0x1be0>
200050a8:	2400      	movs	r4, #0
200050aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
200050ac:	4620      	mov	r0, r4
200050ae:	e003      	b.n	200050b8 <_vfprintf_r+0x1a9c>
200050b0:	3001      	adds	r0, #1
200050b2:	3101      	adds	r1, #1
200050b4:	2bff      	cmp	r3, #255	; 0xff
200050b6:	d008      	beq.n	200050ca <_vfprintf_r+0x1aae>
200050b8:	4293      	cmp	r3, r2
200050ba:	da06      	bge.n	200050ca <_vfprintf_r+0x1aae>
200050bc:	1ad2      	subs	r2, r2, r3
200050be:	784b      	ldrb	r3, [r1, #1]
200050c0:	2b00      	cmp	r3, #0
200050c2:	d1f5      	bne.n	200050b0 <_vfprintf_r+0x1a94>
200050c4:	780b      	ldrb	r3, [r1, #0]
200050c6:	3401      	adds	r4, #1
200050c8:	e7f4      	b.n	200050b4 <_vfprintf_r+0x1a98>
200050ca:	911a      	str	r1, [sp, #104]	; 0x68
200050cc:	9210      	str	r2, [sp, #64]	; 0x40
200050ce:	9016      	str	r0, [sp, #88]	; 0x58
200050d0:	9412      	str	r4, [sp, #72]	; 0x48
200050d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
200050d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
200050d6:	990c      	ldr	r1, [sp, #48]	; 0x30
200050d8:	4413      	add	r3, r2
200050da:	9a1d      	ldr	r2, [sp, #116]	; 0x74
200050dc:	fb02 1303 	mla	r3, r2, r3, r1
200050e0:	930c      	str	r3, [sp, #48]	; 0x30
200050e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
200050e6:	9308      	str	r3, [sp, #32]
200050e8:	f7ff ba9a 	b.w	20004620 <_vfprintf_r+0x1004>
200050ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
200050ee:	2666      	movs	r6, #102	; 0x66
200050f0:	18d3      	adds	r3, r2, r3
200050f2:	4419      	add	r1, r3
200050f4:	910c      	str	r1, [sp, #48]	; 0x30
200050f6:	e6b5      	b.n	20004e64 <_vfprintf_r+0x1848>
200050f8:	aa24      	add	r2, sp, #144	; 0x90
200050fa:	980c      	ldr	r0, [sp, #48]	; 0x30
200050fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
200050fe:	f002 fe69 	bl	20007dd4 <frexp>
20005102:	2200      	movs	r2, #0
20005104:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
20005108:	f7fd fec0 	bl	20002e8c <__aeabi_dmul>
2000510c:	4604      	mov	r4, r0
2000510e:	460d      	mov	r5, r1
20005110:	2200      	movs	r2, #0
20005112:	2300      	movs	r3, #0
20005114:	e9cd 4510 	strd	r4, r5, [sp, #64]	; 0x40
20005118:	f003 f9ee 	bl	200084f8 <__aeabi_dcmpeq>
2000511c:	b108      	cbz	r0, 20005122 <_vfprintf_r+0x1b06>
2000511e:	2301      	movs	r3, #1
20005120:	9324      	str	r3, [sp, #144]	; 0x90
20005122:	4b42      	ldr	r3, [pc, #264]	; (2000522c <_vfprintf_r+0x1c10>)
20005124:	930c      	str	r3, [sp, #48]	; 0x30
20005126:	e486      	b.n	20004a36 <_vfprintf_r+0x141a>
20005128:	9b10      	ldr	r3, [sp, #64]	; 0x40
2000512a:	930c      	str	r3, [sp, #48]	; 0x30
2000512c:	e51b      	b.n	20004b66 <_vfprintf_r+0x154a>
2000512e:	2667      	movs	r6, #103	; 0x67
20005130:	e69b      	b.n	20004e6a <_vfprintf_r+0x184e>
20005132:	2900      	cmp	r1, #0
20005134:	d137      	bne.n	200051a6 <_vfprintf_r+0x1b8a>
20005136:	2230      	movs	r2, #48	; 0x30
20005138:	f88d 209a 	strb.w	r2, [sp, #154]	; 0x9a
2000513c:	f10d 029b 	add.w	r2, sp, #155	; 0x9b
20005140:	3330      	adds	r3, #48	; 0x30
20005142:	f802 3b01 	strb.w	r3, [r2], #1
20005146:	ab26      	add	r3, sp, #152	; 0x98
20005148:	1ad3      	subs	r3, r2, r3
2000514a:	931b      	str	r3, [sp, #108]	; 0x6c
2000514c:	f7ff ba50 	b.w	200045f0 <_vfprintf_r+0xfd4>
20005150:	f106 020f 	add.w	r2, r6, #15
20005154:	2101      	movs	r1, #1
20005156:	b2d2      	uxtb	r2, r2
20005158:	f7ff ba07 	b.w	2000456a <_vfprintf_r+0xf4e>
2000515c:	2300      	movs	r3, #0
2000515e:	930d      	str	r3, [sp, #52]	; 0x34
20005160:	e69d      	b.n	20004e9e <_vfprintf_r+0x1882>
20005162:	07e9      	lsls	r1, r5, #31
20005164:	f57f aa4f 	bpl.w	20004606 <_vfprintf_r+0xfea>
20005168:	f7ff ba49 	b.w	200045fe <_vfprintf_r+0xfe2>
2000516c:	992b      	ldr	r1, [sp, #172]	; 0xac
2000516e:	e5b4      	b.n	20004cda <_vfprintf_r+0x16be>
20005170:	f1c3 0301 	rsb	r3, r3, #1
20005174:	441a      	add	r2, r3
20005176:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
2000517a:	2667      	movs	r6, #103	; 0x67
2000517c:	920c      	str	r2, [sp, #48]	; 0x30
2000517e:	9308      	str	r3, [sp, #32]
20005180:	e4fd      	b.n	20004b7e <_vfprintf_r+0x1562>
20005182:	2200      	movs	r2, #0
20005184:	2300      	movs	r3, #0
20005186:	980c      	ldr	r0, [sp, #48]	; 0x30
20005188:	990f      	ldr	r1, [sp, #60]	; 0x3c
2000518a:	f003 f9b5 	bl	200084f8 <__aeabi_dcmpeq>
2000518e:	2800      	cmp	r0, #0
20005190:	f47f ae47 	bne.w	20004e22 <_vfprintf_r+0x1806>
20005194:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005196:	f1c3 0301 	rsb	r3, r3, #1
2000519a:	9324      	str	r3, [sp, #144]	; 0x90
2000519c:	e642      	b.n	20004e24 <_vfprintf_r+0x1808>
2000519e:	4b24      	ldr	r3, [pc, #144]	; (20005230 <_vfprintf_r+0x1c14>)
200051a0:	930f      	str	r3, [sp, #60]	; 0x3c
200051a2:	f7ff ba7f 	b.w	200046a4 <_vfprintf_r+0x1088>
200051a6:	f10d 029a 	add.w	r2, sp, #154	; 0x9a
200051aa:	e7c9      	b.n	20005140 <_vfprintf_r+0x1b24>
200051ac:	900d      	str	r0, [sp, #52]	; 0x34
200051ae:	e676      	b.n	20004e9e <_vfprintf_r+0x1882>
200051b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
200051b2:	f005 0501 	and.w	r5, r5, #1
200051b6:	4613      	mov	r3, r2
200051b8:	432b      	orrs	r3, r5
200051ba:	d104      	bne.n	200051c6 <_vfprintf_r+0x1baa>
200051bc:	2301      	movs	r3, #1
200051be:	2666      	movs	r6, #102	; 0x66
200051c0:	9308      	str	r3, [sp, #32]
200051c2:	930c      	str	r3, [sp, #48]	; 0x30
200051c4:	e4db      	b.n	20004b7e <_vfprintf_r+0x1562>
200051c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
200051c8:	2666      	movs	r6, #102	; 0x66
200051ca:	3301      	adds	r3, #1
200051cc:	441a      	add	r2, r3
200051ce:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
200051d2:	920c      	str	r2, [sp, #48]	; 0x30
200051d4:	9308      	str	r3, [sp, #32]
200051d6:	e4d2      	b.n	20004b7e <_vfprintf_r+0x1562>
200051d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
200051da:	e6de      	b.n	20004f9a <_vfprintf_r+0x197e>
200051dc:	4a14      	ldr	r2, [pc, #80]	; (20005230 <_vfprintf_r+0x1c14>)
200051de:	9b2b      	ldr	r3, [sp, #172]	; 0xac
200051e0:	920f      	str	r2, [sp, #60]	; 0x3c
200051e2:	e5a6      	b.n	20004d32 <_vfprintf_r+0x1716>
200051e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
200051e6:	f89b 6001 	ldrb.w	r6, [fp, #1]
200051ea:	f853 0b04 	ldr.w	r0, [r3], #4
200051ee:	4693      	mov	fp, r2
200051f0:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
200051f4:	9009      	str	r0, [sp, #36]	; 0x24
200051f6:	930e      	str	r3, [sp, #56]	; 0x38
200051f8:	f7fe ba80 	b.w	200036fc <_vfprintf_r+0xe0>
200051fc:	2300      	movs	r3, #0
200051fe:	9312      	str	r3, [sp, #72]	; 0x48
20005200:	9316      	str	r3, [sp, #88]	; 0x58
20005202:	e766      	b.n	200050d2 <_vfprintf_r+0x1ab6>
20005204:	f8ba 300c 	ldrh.w	r3, [sl, #12]
20005208:	46d3      	mov	fp, sl
2000520a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2000520e:	f8aa 300c 	strh.w	r3, [sl, #12]
20005212:	f7fe be76 	b.w	20003f02 <_vfprintf_r+0x8e6>
20005216:	4a06      	ldr	r2, [pc, #24]	; (20005230 <_vfprintf_r+0x1c14>)
20005218:	920f      	str	r2, [sp, #60]	; 0x3c
2000521a:	e6e7      	b.n	20004fec <_vfprintf_r+0x19d0>
2000521c:	2302      	movs	r3, #2
2000521e:	931b      	str	r3, [sp, #108]	; 0x6c
20005220:	f7ff b9e6 	b.w	200045f0 <_vfprintf_r+0xfd4>
20005224:	20008f9c 	.word	0x20008f9c
20005228:	20008fa0 	.word	0x20008fa0
2000522c:	20008fa4 	.word	0x20008fa4
20005230:	20008fe8 	.word	0x20008fe8

20005234 <__sbprintf>:
__sbprintf():
20005234:	b5f0      	push	{r4, r5, r6, r7, lr}
20005236:	460c      	mov	r4, r1
20005238:	f44f 6c80 	mov.w	ip, #1024	; 0x400
2000523c:	f04f 0e00 	mov.w	lr, #0
20005240:	4615      	mov	r5, r2
20005242:	4606      	mov	r6, r0
20005244:	461f      	mov	r7, r3
20005246:	6e63      	ldr	r3, [r4, #100]	; 0x64
20005248:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
2000524c:	89e2      	ldrh	r2, [r4, #14]
2000524e:	8989      	ldrh	r1, [r1, #12]
20005250:	9319      	str	r3, [sp, #100]	; 0x64
20005252:	69e3      	ldr	r3, [r4, #28]
20005254:	f8ad 200e 	strh.w	r2, [sp, #14]
20005258:	6a62      	ldr	r2, [r4, #36]	; 0x24
2000525a:	f021 0102 	bic.w	r1, r1, #2
2000525e:	9307      	str	r3, [sp, #28]
20005260:	a816      	add	r0, sp, #88	; 0x58
20005262:	ab1a      	add	r3, sp, #104	; 0x68
20005264:	f8ad 100c 	strh.w	r1, [sp, #12]
20005268:	f8cd e018 	str.w	lr, [sp, #24]
2000526c:	9209      	str	r2, [sp, #36]	; 0x24
2000526e:	9300      	str	r3, [sp, #0]
20005270:	9304      	str	r3, [sp, #16]
20005272:	f8cd c008 	str.w	ip, [sp, #8]
20005276:	f8cd c014 	str.w	ip, [sp, #20]
2000527a:	f001 fca7 	bl	20006bcc <__retarget_lock_init_recursive>
2000527e:	462a      	mov	r2, r5
20005280:	463b      	mov	r3, r7
20005282:	4669      	mov	r1, sp
20005284:	4630      	mov	r0, r6
20005286:	f7fe f9c9 	bl	2000361c <_vfprintf_r>
2000528a:	1e05      	subs	r5, r0, #0
2000528c:	db07      	blt.n	2000529e <__sbprintf+0x6a>
2000528e:	4630      	mov	r0, r6
20005290:	4669      	mov	r1, sp
20005292:	f001 f8fb 	bl	2000648c <_fflush_r>
20005296:	2800      	cmp	r0, #0
20005298:	bf18      	it	ne
2000529a:	f04f 35ff 	movne.w	r5, #4294967295
2000529e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
200052a2:	065b      	lsls	r3, r3, #25
200052a4:	d503      	bpl.n	200052ae <__sbprintf+0x7a>
200052a6:	89a3      	ldrh	r3, [r4, #12]
200052a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
200052ac:	81a3      	strh	r3, [r4, #12]
200052ae:	9816      	ldr	r0, [sp, #88]	; 0x58
200052b0:	f001 fc8e 	bl	20006bd0 <__retarget_lock_close_recursive>
200052b4:	4628      	mov	r0, r5
200052b6:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
200052ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

200052bc <__swsetup_r>:
__swsetup_r():
200052bc:	b538      	push	{r3, r4, r5, lr}
200052be:	4b32      	ldr	r3, [pc, #200]	; (20005388 <__swsetup_r+0xcc>)
200052c0:	4605      	mov	r5, r0
200052c2:	6818      	ldr	r0, [r3, #0]
200052c4:	460c      	mov	r4, r1
200052c6:	b110      	cbz	r0, 200052ce <__swsetup_r+0x12>
200052c8:	6b83      	ldr	r3, [r0, #56]	; 0x38
200052ca:	2b00      	cmp	r3, #0
200052cc:	d03c      	beq.n	20005348 <__swsetup_r+0x8c>
200052ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200052d2:	0718      	lsls	r0, r3, #28
200052d4:	b29a      	uxth	r2, r3
200052d6:	d50c      	bpl.n	200052f2 <__swsetup_r+0x36>
200052d8:	6921      	ldr	r1, [r4, #16]
200052da:	b1a9      	cbz	r1, 20005308 <__swsetup_r+0x4c>
200052dc:	f012 0001 	ands.w	r0, r2, #1
200052e0:	d022      	beq.n	20005328 <__swsetup_r+0x6c>
200052e2:	2500      	movs	r5, #0
200052e4:	6960      	ldr	r0, [r4, #20]
200052e6:	60a5      	str	r5, [r4, #8]
200052e8:	4240      	negs	r0, r0
200052ea:	61a0      	str	r0, [r4, #24]
200052ec:	b311      	cbz	r1, 20005334 <__swsetup_r+0x78>
200052ee:	2000      	movs	r0, #0
200052f0:	bd38      	pop	{r3, r4, r5, pc}
200052f2:	06d1      	lsls	r1, r2, #27
200052f4:	d53f      	bpl.n	20005376 <__swsetup_r+0xba>
200052f6:	0752      	lsls	r2, r2, #29
200052f8:	d429      	bmi.n	2000534e <__swsetup_r+0x92>
200052fa:	6921      	ldr	r1, [r4, #16]
200052fc:	f043 0308 	orr.w	r3, r3, #8
20005300:	81a3      	strh	r3, [r4, #12]
20005302:	b29a      	uxth	r2, r3
20005304:	2900      	cmp	r1, #0
20005306:	d1e9      	bne.n	200052dc <__swsetup_r+0x20>
20005308:	f402 7020 	and.w	r0, r2, #640	; 0x280
2000530c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
20005310:	d0e4      	beq.n	200052dc <__swsetup_r+0x20>
20005312:	4628      	mov	r0, r5
20005314:	4621      	mov	r1, r4
20005316:	f001 fc8f 	bl	20006c38 <__smakebuf_r>
2000531a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
2000531e:	6921      	ldr	r1, [r4, #16]
20005320:	b29a      	uxth	r2, r3
20005322:	f012 0001 	ands.w	r0, r2, #1
20005326:	d1dc      	bne.n	200052e2 <__swsetup_r+0x26>
20005328:	0795      	lsls	r5, r2, #30
2000532a:	bf58      	it	pl
2000532c:	6960      	ldrpl	r0, [r4, #20]
2000532e:	60a0      	str	r0, [r4, #8]
20005330:	2900      	cmp	r1, #0
20005332:	d1dc      	bne.n	200052ee <__swsetup_r+0x32>
20005334:	0612      	lsls	r2, r2, #24
20005336:	bf58      	it	pl
20005338:	4608      	movpl	r0, r1
2000533a:	d5d9      	bpl.n	200052f0 <__swsetup_r+0x34>
2000533c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20005340:	f04f 30ff 	mov.w	r0, #4294967295
20005344:	81a3      	strh	r3, [r4, #12]
20005346:	bd38      	pop	{r3, r4, r5, pc}
20005348:	f001 f8fc 	bl	20006544 <__sinit>
2000534c:	e7bf      	b.n	200052ce <__swsetup_r+0x12>
2000534e:	6b21      	ldr	r1, [r4, #48]	; 0x30
20005350:	b151      	cbz	r1, 20005368 <__swsetup_r+0xac>
20005352:	f104 0240 	add.w	r2, r4, #64	; 0x40
20005356:	4291      	cmp	r1, r2
20005358:	d004      	beq.n	20005364 <__swsetup_r+0xa8>
2000535a:	4628      	mov	r0, r5
2000535c:	f001 f992 	bl	20006684 <_free_r>
20005360:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20005364:	2200      	movs	r2, #0
20005366:	6322      	str	r2, [r4, #48]	; 0x30
20005368:	2200      	movs	r2, #0
2000536a:	6921      	ldr	r1, [r4, #16]
2000536c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
20005370:	e9c4 1200 	strd	r1, r2, [r4]
20005374:	e7c2      	b.n	200052fc <__swsetup_r+0x40>
20005376:	2209      	movs	r2, #9
20005378:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2000537c:	602a      	str	r2, [r5, #0]
2000537e:	f04f 30ff 	mov.w	r0, #4294967295
20005382:	81a3      	strh	r3, [r4, #12]
20005384:	bd38      	pop	{r3, r4, r5, pc}
20005386:	bf00      	nop
20005388:	20009274 	.word	0x20009274

2000538c <register_fini>:
register_fini():
2000538c:	4b02      	ldr	r3, [pc, #8]	; (20005398 <register_fini+0xc>)
2000538e:	b113      	cbz	r3, 20005396 <register_fini+0xa>
20005390:	4802      	ldr	r0, [pc, #8]	; (2000539c <register_fini+0x10>)
20005392:	f000 b805 	b.w	200053a0 <atexit>
20005396:	4770      	bx	lr
20005398:	00000000 	.word	0x00000000
2000539c:	200065b9 	.word	0x200065b9

200053a0 <atexit>:
atexit():
200053a0:	2300      	movs	r3, #0
200053a2:	4601      	mov	r1, r0
200053a4:	461a      	mov	r2, r3
200053a6:	4618      	mov	r0, r3
200053a8:	f002 bdea 	b.w	20007f80 <__register_exitproc>

200053ac <quorem>:
quorem():
200053ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
200053b0:	6903      	ldr	r3, [r0, #16]
200053b2:	690d      	ldr	r5, [r1, #16]
200053b4:	b083      	sub	sp, #12
200053b6:	42ab      	cmp	r3, r5
200053b8:	f2c0 8084 	blt.w	200054c4 <quorem+0x118>
200053bc:	3d01      	subs	r5, #1
200053be:	f101 0614 	add.w	r6, r1, #20
200053c2:	f100 0914 	add.w	r9, r0, #20
200053c6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
200053ca:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
200053ce:	3301      	adds	r3, #1
200053d0:	468e      	mov	lr, r1
200053d2:	00a9      	lsls	r1, r5, #2
200053d4:	9100      	str	r1, [sp, #0]
200053d6:	429a      	cmp	r2, r3
200053d8:	eb09 0185 	add.w	r1, r9, r5, lsl #2
200053dc:	4682      	mov	sl, r0
200053de:	fbb2 f7f3 	udiv	r7, r2, r3
200053e2:	eb06 0885 	add.w	r8, r6, r5, lsl #2
200053e6:	9101      	str	r1, [sp, #4]
200053e8:	d337      	bcc.n	2000545a <quorem+0xae>
200053ea:	2200      	movs	r2, #0
200053ec:	46b4      	mov	ip, r6
200053ee:	4614      	mov	r4, r2
200053f0:	4648      	mov	r0, r9
200053f2:	f85c 3b04 	ldr.w	r3, [ip], #4
200053f6:	6801      	ldr	r1, [r0, #0]
200053f8:	fa1f fb83 	uxth.w	fp, r3
200053fc:	fb07 220b 	mla	r2, r7, fp, r2
20005400:	0c1b      	lsrs	r3, r3, #16
20005402:	ea4f 4b12 	mov.w	fp, r2, lsr #16
20005406:	fb07 bb03 	mla	fp, r7, r3, fp
2000540a:	b293      	uxth	r3, r2
2000540c:	1ae3      	subs	r3, r4, r3
2000540e:	b28a      	uxth	r2, r1
20005410:	fa1f f48b 	uxth.w	r4, fp
20005414:	4413      	add	r3, r2
20005416:	ebc4 4411 	rsb	r4, r4, r1, lsr #16
2000541a:	eb04 4423 	add.w	r4, r4, r3, asr #16
2000541e:	b29b      	uxth	r3, r3
20005420:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
20005424:	45e0      	cmp	r8, ip
20005426:	f840 3b04 	str.w	r3, [r0], #4
2000542a:	ea4f 4424 	mov.w	r4, r4, asr #16
2000542e:	ea4f 421b 	mov.w	r2, fp, lsr #16
20005432:	d2de      	bcs.n	200053f2 <quorem+0x46>
20005434:	9b00      	ldr	r3, [sp, #0]
20005436:	f859 3003 	ldr.w	r3, [r9, r3]
2000543a:	b973      	cbnz	r3, 2000545a <quorem+0xae>
2000543c:	9b01      	ldr	r3, [sp, #4]
2000543e:	3b04      	subs	r3, #4
20005440:	4599      	cmp	r9, r3
20005442:	d304      	bcc.n	2000544e <quorem+0xa2>
20005444:	e007      	b.n	20005456 <quorem+0xaa>
20005446:	4599      	cmp	r9, r3
20005448:	f105 35ff 	add.w	r5, r5, #4294967295
2000544c:	d203      	bcs.n	20005456 <quorem+0xaa>
2000544e:	f853 2904 	ldr.w	r2, [r3], #-4
20005452:	2a00      	cmp	r2, #0
20005454:	d0f7      	beq.n	20005446 <quorem+0x9a>
20005456:	f8ca 5010 	str.w	r5, [sl, #16]
2000545a:	4671      	mov	r1, lr
2000545c:	4650      	mov	r0, sl
2000545e:	f002 f9bb 	bl	200077d8 <__mcmp>
20005462:	2800      	cmp	r0, #0
20005464:	db2a      	blt.n	200054bc <quorem+0x110>
20005466:	4648      	mov	r0, r9
20005468:	2300      	movs	r3, #0
2000546a:	3701      	adds	r7, #1
2000546c:	f856 1b04 	ldr.w	r1, [r6], #4
20005470:	6804      	ldr	r4, [r0, #0]
20005472:	b28a      	uxth	r2, r1
20005474:	1a9a      	subs	r2, r3, r2
20005476:	0c0b      	lsrs	r3, r1, #16
20005478:	b2a1      	uxth	r1, r4
2000547a:	440a      	add	r2, r1
2000547c:	ebc3 4314 	rsb	r3, r3, r4, lsr #16
20005480:	eb03 4322 	add.w	r3, r3, r2, asr #16
20005484:	b292      	uxth	r2, r2
20005486:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
2000548a:	45b0      	cmp	r8, r6
2000548c:	f840 2b04 	str.w	r2, [r0], #4
20005490:	ea4f 4323 	mov.w	r3, r3, asr #16
20005494:	d2ea      	bcs.n	2000546c <quorem+0xc0>
20005496:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
2000549a:	eb09 0385 	add.w	r3, r9, r5, lsl #2
2000549e:	b96a      	cbnz	r2, 200054bc <quorem+0x110>
200054a0:	3b04      	subs	r3, #4
200054a2:	4599      	cmp	r9, r3
200054a4:	d304      	bcc.n	200054b0 <quorem+0x104>
200054a6:	e007      	b.n	200054b8 <quorem+0x10c>
200054a8:	4599      	cmp	r9, r3
200054aa:	f105 35ff 	add.w	r5, r5, #4294967295
200054ae:	d203      	bcs.n	200054b8 <quorem+0x10c>
200054b0:	f853 2904 	ldr.w	r2, [r3], #-4
200054b4:	2a00      	cmp	r2, #0
200054b6:	d0f7      	beq.n	200054a8 <quorem+0xfc>
200054b8:	f8ca 5010 	str.w	r5, [sl, #16]
200054bc:	4638      	mov	r0, r7
200054be:	b003      	add	sp, #12
200054c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
200054c4:	2000      	movs	r0, #0
200054c6:	b003      	add	sp, #12
200054c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
200054cc:	0000      	movs	r0, r0
	...

200054d0 <_dtoa_r>:
_dtoa_r():
200054d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
200054d4:	4616      	mov	r6, r2
200054d6:	461f      	mov	r7, r3
200054d8:	6c01      	ldr	r1, [r0, #64]	; 0x40
200054da:	b09b      	sub	sp, #108	; 0x6c
200054dc:	4604      	mov	r4, r0
200054de:	e9cd 6704 	strd	r6, r7, [sp, #16]
200054e2:	9d27      	ldr	r5, [sp, #156]	; 0x9c
200054e4:	b141      	cbz	r1, 200054f8 <_dtoa_r+0x28>
200054e6:	2301      	movs	r3, #1
200054e8:	6c42      	ldr	r2, [r0, #68]	; 0x44
200054ea:	4093      	lsls	r3, r2
200054ec:	e9c1 2301 	strd	r2, r3, [r1, #4]
200054f0:	f001 ff76 	bl	200073e0 <_Bfree>
200054f4:	2300      	movs	r3, #0
200054f6:	6423      	str	r3, [r4, #64]	; 0x40
200054f8:	f1b7 0900 	subs.w	r9, r7, #0
200054fc:	bfb4      	ite	lt
200054fe:	2301      	movlt	r3, #1
20005500:	2300      	movge	r3, #0
20005502:	602b      	str	r3, [r5, #0]
20005504:	4b76      	ldr	r3, [pc, #472]	; (200056e0 <_dtoa_r+0x210>)
20005506:	bfbc      	itt	lt
20005508:	f029 4900 	biclt.w	r9, r9, #2147483648	; 0x80000000
2000550c:	f8cd 9014 	strlt.w	r9, [sp, #20]
20005510:	ea33 0309 	bics.w	r3, r3, r9
20005514:	f000 80ab 	beq.w	2000566e <_dtoa_r+0x19e>
20005518:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
2000551c:	4610      	mov	r0, r2
2000551e:	4619      	mov	r1, r3
20005520:	2200      	movs	r2, #0
20005522:	2300      	movs	r3, #0
20005524:	e9cd 0106 	strd	r0, r1, [sp, #24]
20005528:	f002 ffe6 	bl	200084f8 <__aeabi_dcmpeq>
2000552c:	4680      	mov	r8, r0
2000552e:	b170      	cbz	r0, 2000554e <_dtoa_r+0x7e>
20005530:	2301      	movs	r3, #1
20005532:	9a26      	ldr	r2, [sp, #152]	; 0x98
20005534:	6013      	str	r3, [r2, #0]
20005536:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20005538:	2b00      	cmp	r3, #0
2000553a:	f000 82c5 	beq.w	20005ac8 <_dtoa_r+0x5f8>
2000553e:	4869      	ldr	r0, [pc, #420]	; (200056e4 <_dtoa_r+0x214>)
20005540:	6018      	str	r0, [r3, #0]
20005542:	1e43      	subs	r3, r0, #1
20005544:	9303      	str	r3, [sp, #12]
20005546:	9803      	ldr	r0, [sp, #12]
20005548:	b01b      	add	sp, #108	; 0x6c
2000554a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2000554e:	aa18      	add	r2, sp, #96	; 0x60
20005550:	ab19      	add	r3, sp, #100	; 0x64
20005552:	e9cd 3200 	strd	r3, r2, [sp]
20005556:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
2000555a:	4620      	mov	r0, r4
2000555c:	f002 f9f6 	bl	2000794c <__d2b>
20005560:	ea5f 5519 	movs.w	r5, r9, lsr #20
20005564:	4682      	mov	sl, r0
20005566:	f040 8098 	bne.w	2000569a <_dtoa_r+0x1ca>
2000556a:	e9dd 8518 	ldrd	r8, r5, [sp, #96]	; 0x60
2000556e:	4445      	add	r5, r8
20005570:	f205 4032 	addw	r0, r5, #1074	; 0x432
20005574:	2820      	cmp	r0, #32
20005576:	f340 8389 	ble.w	20005c8c <_dtoa_r+0x7bc>
2000557a:	f1c0 0340 	rsb	r3, r0, #64	; 0x40
2000557e:	f205 4012 	addw	r0, r5, #1042	; 0x412
20005582:	fa09 f903 	lsl.w	r9, r9, r3
20005586:	fa26 f000 	lsr.w	r0, r6, r0
2000558a:	ea49 0000 	orr.w	r0, r9, r0
2000558e:	f7fd fc03 	bl	20002d98 <__aeabi_ui2d>
20005592:	2201      	movs	r2, #1
20005594:	3d01      	subs	r5, #1
20005596:	9210      	str	r2, [sp, #64]	; 0x40
20005598:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
2000559c:	2200      	movs	r2, #0
2000559e:	4b52      	ldr	r3, [pc, #328]	; (200056e8 <_dtoa_r+0x218>)
200055a0:	f7fd fabc 	bl	20002b1c <__aeabi_dsub>
200055a4:	a348      	add	r3, pc, #288	; (adr r3, 200056c8 <_dtoa_r+0x1f8>)
200055a6:	e9d3 2300 	ldrd	r2, r3, [r3]
200055aa:	f7fd fc6f 	bl	20002e8c <__aeabi_dmul>
200055ae:	a348      	add	r3, pc, #288	; (adr r3, 200056d0 <_dtoa_r+0x200>)
200055b0:	e9d3 2300 	ldrd	r2, r3, [r3]
200055b4:	f7fd fab4 	bl	20002b20 <__adddf3>
200055b8:	4606      	mov	r6, r0
200055ba:	4628      	mov	r0, r5
200055bc:	460f      	mov	r7, r1
200055be:	f7fd fbfb 	bl	20002db8 <__aeabi_i2d>
200055c2:	a345      	add	r3, pc, #276	; (adr r3, 200056d8 <_dtoa_r+0x208>)
200055c4:	e9d3 2300 	ldrd	r2, r3, [r3]
200055c8:	f7fd fc60 	bl	20002e8c <__aeabi_dmul>
200055cc:	4602      	mov	r2, r0
200055ce:	460b      	mov	r3, r1
200055d0:	4630      	mov	r0, r6
200055d2:	4639      	mov	r1, r7
200055d4:	f7fd faa4 	bl	20002b20 <__adddf3>
200055d8:	4606      	mov	r6, r0
200055da:	460f      	mov	r7, r1
200055dc:	f002 ffd4 	bl	20008588 <__aeabi_d2iz>
200055e0:	2200      	movs	r2, #0
200055e2:	4683      	mov	fp, r0
200055e4:	2300      	movs	r3, #0
200055e6:	4630      	mov	r0, r6
200055e8:	4639      	mov	r1, r7
200055ea:	f002 ff8f 	bl	2000850c <__aeabi_dcmplt>
200055ee:	2800      	cmp	r0, #0
200055f0:	f040 825d 	bne.w	20005aae <_dtoa_r+0x5de>
200055f4:	f1bb 0f16 	cmp.w	fp, #22
200055f8:	f200 824b 	bhi.w	20005a92 <_dtoa_r+0x5c2>
200055fc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
20005600:	4b3a      	ldr	r3, [pc, #232]	; (200056ec <_dtoa_r+0x21c>)
20005602:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
20005606:	e9d3 2300 	ldrd	r2, r3, [r3]
2000560a:	f002 ff7f 	bl	2000850c <__aeabi_dcmplt>
2000560e:	2800      	cmp	r0, #0
20005610:	d072      	beq.n	200056f8 <_dtoa_r+0x228>
20005612:	2300      	movs	r3, #0
20005614:	eba8 0505 	sub.w	r5, r8, r5
20005618:	f1b5 0901 	subs.w	r9, r5, #1
2000561c:	f10b 3bff 	add.w	fp, fp, #4294967295
20005620:	930d      	str	r3, [sp, #52]	; 0x34
20005622:	f100 823e 	bmi.w	20005aa2 <_dtoa_r+0x5d2>
20005626:	2300      	movs	r3, #0
20005628:	9309      	str	r3, [sp, #36]	; 0x24
2000562a:	f1bb 0f00 	cmp.w	fp, #0
2000562e:	da6b      	bge.n	20005708 <_dtoa_r+0x238>
20005630:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005632:	f8cd b020 	str.w	fp, [sp, #32]
20005636:	eba3 030b 	sub.w	r3, r3, fp
2000563a:	9309      	str	r3, [sp, #36]	; 0x24
2000563c:	f1cb 0300 	rsb	r3, fp, #0
20005640:	930c      	str	r3, [sp, #48]	; 0x30
20005642:	9b24      	ldr	r3, [sp, #144]	; 0x90
20005644:	f04f 0b00 	mov.w	fp, #0
20005648:	2b09      	cmp	r3, #9
2000564a:	d865      	bhi.n	20005718 <_dtoa_r+0x248>
2000564c:	2b05      	cmp	r3, #5
2000564e:	f340 831b 	ble.w	20005c88 <_dtoa_r+0x7b8>
20005652:	2500      	movs	r5, #0
20005654:	3b04      	subs	r3, #4
20005656:	9324      	str	r3, [sp, #144]	; 0x90
20005658:	9b24      	ldr	r3, [sp, #144]	; 0x90
2000565a:	3b02      	subs	r3, #2
2000565c:	2b03      	cmp	r3, #3
2000565e:	f200 8662 	bhi.w	20006326 <_dtoa_r+0xe56>
20005662:	e8df f013 	tbh	[pc, r3, lsl #1]
20005666:	043b      	.short	0x043b
20005668:	042f0438 	.word	0x042f0438
2000566c:	040f      	.short	0x040f
2000566e:	f242 730f 	movw	r3, #9999	; 0x270f
20005672:	9a26      	ldr	r2, [sp, #152]	; 0x98
20005674:	f3c9 0913 	ubfx	r9, r9, #0, #20
20005678:	6013      	str	r3, [r2, #0]
2000567a:	ea59 0306 	orrs.w	r3, r9, r6
2000567e:	d11c      	bne.n	200056ba <_dtoa_r+0x1ea>
20005680:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20005682:	2b00      	cmp	r3, #0
20005684:	f000 8646 	beq.w	20006314 <_dtoa_r+0xe44>
20005688:	4b19      	ldr	r3, [pc, #100]	; (200056f0 <_dtoa_r+0x220>)
2000568a:	9303      	str	r3, [sp, #12]
2000568c:	3308      	adds	r3, #8
2000568e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
20005690:	9803      	ldr	r0, [sp, #12]
20005692:	6013      	str	r3, [r2, #0]
20005694:	b01b      	add	sp, #108	; 0x6c
20005696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2000569a:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
2000569e:	f3c2 0313 	ubfx	r3, r2, #0, #20
200056a2:	4608      	mov	r0, r1
200056a4:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
200056a8:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
200056ac:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
200056b0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
200056b4:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
200056b8:	e770      	b.n	2000559c <_dtoa_r+0xcc>
200056ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
200056bc:	2b00      	cmp	r3, #0
200056be:	f040 83d1 	bne.w	20005e64 <_dtoa_r+0x994>
200056c2:	4b0c      	ldr	r3, [pc, #48]	; (200056f4 <_dtoa_r+0x224>)
200056c4:	9303      	str	r3, [sp, #12]
200056c6:	e73e      	b.n	20005546 <_dtoa_r+0x76>
200056c8:	636f4361 	.word	0x636f4361
200056cc:	3fd287a7 	.word	0x3fd287a7
200056d0:	8b60c8b3 	.word	0x8b60c8b3
200056d4:	3fc68a28 	.word	0x3fc68a28
200056d8:	509f79fb 	.word	0x509f79fb
200056dc:	3fd34413 	.word	0x3fd34413
200056e0:	7ff00000 	.word	0x7ff00000
200056e4:	20008fd5 	.word	0x20008fd5
200056e8:	3ff80000 	.word	0x3ff80000
200056ec:	20009030 	.word	0x20009030
200056f0:	20008ffc 	.word	0x20008ffc
200056f4:	20008ff8 	.word	0x20008ff8
200056f8:	eba8 0505 	sub.w	r5, r8, r5
200056fc:	f1b5 0901 	subs.w	r9, r5, #1
20005700:	f100 8496 	bmi.w	20006030 <_dtoa_r+0xb60>
20005704:	900d      	str	r0, [sp, #52]	; 0x34
20005706:	9009      	str	r0, [sp, #36]	; 0x24
20005708:	2300      	movs	r3, #0
2000570a:	930c      	str	r3, [sp, #48]	; 0x30
2000570c:	9b24      	ldr	r3, [sp, #144]	; 0x90
2000570e:	44d9      	add	r9, fp
20005710:	2b09      	cmp	r3, #9
20005712:	f8cd b020 	str.w	fp, [sp, #32]
20005716:	d999      	bls.n	2000564c <_dtoa_r+0x17c>
20005718:	f04f 36ff 	mov.w	r6, #4294967295
2000571c:	2501      	movs	r5, #1
2000571e:	2300      	movs	r3, #0
20005720:	e9cd 650a 	strd	r6, r5, [sp, #40]	; 0x28
20005724:	9324      	str	r3, [sp, #144]	; 0x90
20005726:	9325      	str	r3, [sp, #148]	; 0x94
20005728:	2100      	movs	r1, #0
2000572a:	9611      	str	r6, [sp, #68]	; 0x44
2000572c:	6461      	str	r1, [r4, #68]	; 0x44
2000572e:	4620      	mov	r0, r4
20005730:	f001 fe30 	bl	20007394 <_Balloc>
20005734:	2e0e      	cmp	r6, #14
20005736:	9003      	str	r0, [sp, #12]
20005738:	6420      	str	r0, [r4, #64]	; 0x40
2000573a:	f200 80f2 	bhi.w	20005922 <_dtoa_r+0x452>
2000573e:	2d00      	cmp	r5, #0
20005740:	f000 80ef 	beq.w	20005922 <_dtoa_r+0x452>
20005744:	9908      	ldr	r1, [sp, #32]
20005746:	2900      	cmp	r1, #0
20005748:	f340 8440 	ble.w	20005fcc <_dtoa_r+0xafc>
2000574c:	4bb9      	ldr	r3, [pc, #740]	; (20005a34 <_dtoa_r+0x564>)
2000574e:	f001 020f 	and.w	r2, r1, #15
20005752:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
20005756:	05ca      	lsls	r2, r1, #23
20005758:	ea4f 1521 	mov.w	r5, r1, asr #4
2000575c:	e9d3 6700 	ldrd	r6, r7, [r3]
20005760:	f140 83db 	bpl.w	20005f1a <_dtoa_r+0xa4a>
20005764:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
20005768:	4bb3      	ldr	r3, [pc, #716]	; (20005a38 <_dtoa_r+0x568>)
2000576a:	f005 050f 	and.w	r5, r5, #15
2000576e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
20005772:	f7fd fcb5 	bl	200030e0 <__aeabi_ddiv>
20005776:	2303      	movs	r3, #3
20005778:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
2000577c:	930e      	str	r3, [sp, #56]	; 0x38
2000577e:	b1a5      	cbz	r5, 200057aa <_dtoa_r+0x2da>
20005780:	9414      	str	r4, [sp, #80]	; 0x50
20005782:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 20005a38 <_dtoa_r+0x568>
20005786:	9c0e      	ldr	r4, [sp, #56]	; 0x38
20005788:	07eb      	lsls	r3, r5, #31
2000578a:	d508      	bpl.n	2000579e <_dtoa_r+0x2ce>
2000578c:	e9d8 2300 	ldrd	r2, r3, [r8]
20005790:	4630      	mov	r0, r6
20005792:	4639      	mov	r1, r7
20005794:	f7fd fb7a 	bl	20002e8c <__aeabi_dmul>
20005798:	4606      	mov	r6, r0
2000579a:	460f      	mov	r7, r1
2000579c:	3401      	adds	r4, #1
2000579e:	106d      	asrs	r5, r5, #1
200057a0:	f108 0808 	add.w	r8, r8, #8
200057a4:	d1f0      	bne.n	20005788 <_dtoa_r+0x2b8>
200057a6:	940e      	str	r4, [sp, #56]	; 0x38
200057a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
200057aa:	463b      	mov	r3, r7
200057ac:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
200057b0:	4632      	mov	r2, r6
200057b2:	f7fd fc95 	bl	200030e0 <__aeabi_ddiv>
200057b6:	4607      	mov	r7, r0
200057b8:	4688      	mov	r8, r1
200057ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
200057bc:	b143      	cbz	r3, 200057d0 <_dtoa_r+0x300>
200057be:	2200      	movs	r2, #0
200057c0:	4638      	mov	r0, r7
200057c2:	4641      	mov	r1, r8
200057c4:	4b9d      	ldr	r3, [pc, #628]	; (20005a3c <_dtoa_r+0x56c>)
200057c6:	f002 fea1 	bl	2000850c <__aeabi_dcmplt>
200057ca:	2800      	cmp	r0, #0
200057cc:	f040 852e 	bne.w	2000622c <_dtoa_r+0xd5c>
200057d0:	980e      	ldr	r0, [sp, #56]	; 0x38
200057d2:	f7fd faf1 	bl	20002db8 <__aeabi_i2d>
200057d6:	463a      	mov	r2, r7
200057d8:	4643      	mov	r3, r8
200057da:	f7fd fb57 	bl	20002e8c <__aeabi_dmul>
200057de:	4b98      	ldr	r3, [pc, #608]	; (20005a40 <_dtoa_r+0x570>)
200057e0:	2200      	movs	r2, #0
200057e2:	f7fd f99d 	bl	20002b20 <__adddf3>
200057e6:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
200057ea:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
200057ee:	930f      	str	r3, [sp, #60]	; 0x3c
200057f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
200057f2:	2b00      	cmp	r3, #0
200057f4:	f000 83cc 	beq.w	20005f90 <_dtoa_r+0xac0>
200057f8:	9b08      	ldr	r3, [sp, #32]
200057fa:	9314      	str	r3, [sp, #80]	; 0x50
200057fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
200057fe:	9312      	str	r3, [sp, #72]	; 0x48
20005800:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005802:	2b00      	cmp	r3, #0
20005804:	f000 8496 	beq.w	20006134 <_dtoa_r+0xc64>
20005808:	9a12      	ldr	r2, [sp, #72]	; 0x48
2000580a:	4b8a      	ldr	r3, [pc, #552]	; (20005a34 <_dtoa_r+0x564>)
2000580c:	2000      	movs	r0, #0
2000580e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
20005812:	e953 2302 	ldrd	r2, r3, [r3, #-8]
20005816:	498b      	ldr	r1, [pc, #556]	; (20005a44 <_dtoa_r+0x574>)
20005818:	f7fd fc62 	bl	200030e0 <__aeabi_ddiv>
2000581c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
20005820:	f7fd f97c 	bl	20002b1c <__aeabi_dsub>
20005824:	4602      	mov	r2, r0
20005826:	460b      	mov	r3, r1
20005828:	4638      	mov	r0, r7
2000582a:	4641      	mov	r1, r8
2000582c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
20005830:	f002 feaa 	bl	20008588 <__aeabi_d2iz>
20005834:	9015      	str	r0, [sp, #84]	; 0x54
20005836:	f7fd fabf 	bl	20002db8 <__aeabi_i2d>
2000583a:	4602      	mov	r2, r0
2000583c:	460b      	mov	r3, r1
2000583e:	4638      	mov	r0, r7
20005840:	4641      	mov	r1, r8
20005842:	f7fd f96b 	bl	20002b1c <__aeabi_dsub>
20005846:	9b15      	ldr	r3, [sp, #84]	; 0x54
20005848:	9d03      	ldr	r5, [sp, #12]
2000584a:	3330      	adds	r3, #48	; 0x30
2000584c:	4606      	mov	r6, r0
2000584e:	460f      	mov	r7, r1
20005850:	4602      	mov	r2, r0
20005852:	f805 3b01 	strb.w	r3, [r5], #1
20005856:	460b      	mov	r3, r1
20005858:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
2000585c:	f002 fe74 	bl	20008548 <__aeabi_dcmpgt>
20005860:	2800      	cmp	r0, #0
20005862:	f040 8524 	bne.w	200062ae <_dtoa_r+0xdde>
20005866:	2300      	movs	r3, #0
20005868:	e9cd b916 	strd	fp, r9, [sp, #88]	; 0x58
2000586c:	f8cd a054 	str.w	sl, [sp, #84]	; 0x54
20005870:	4698      	mov	r8, r3
20005872:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
20005876:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
2000587a:	940e      	str	r4, [sp, #56]	; 0x38
2000587c:	e028      	b.n	200058d0 <_dtoa_r+0x400>
2000587e:	45c8      	cmp	r8, r9
20005880:	da4a      	bge.n	20005918 <_dtoa_r+0x448>
20005882:	4650      	mov	r0, sl
20005884:	4659      	mov	r1, fp
20005886:	2200      	movs	r2, #0
20005888:	4b6f      	ldr	r3, [pc, #444]	; (20005a48 <_dtoa_r+0x578>)
2000588a:	f7fd faff 	bl	20002e8c <__aeabi_dmul>
2000588e:	2200      	movs	r2, #0
20005890:	4b6d      	ldr	r3, [pc, #436]	; (20005a48 <_dtoa_r+0x578>)
20005892:	4682      	mov	sl, r0
20005894:	468b      	mov	fp, r1
20005896:	4630      	mov	r0, r6
20005898:	4639      	mov	r1, r7
2000589a:	f7fd faf7 	bl	20002e8c <__aeabi_dmul>
2000589e:	460f      	mov	r7, r1
200058a0:	4606      	mov	r6, r0
200058a2:	f002 fe71 	bl	20008588 <__aeabi_d2iz>
200058a6:	4604      	mov	r4, r0
200058a8:	f7fd fa86 	bl	20002db8 <__aeabi_i2d>
200058ac:	4602      	mov	r2, r0
200058ae:	460b      	mov	r3, r1
200058b0:	4630      	mov	r0, r6
200058b2:	4639      	mov	r1, r7
200058b4:	f7fd f932 	bl	20002b1c <__aeabi_dsub>
200058b8:	3430      	adds	r4, #48	; 0x30
200058ba:	4652      	mov	r2, sl
200058bc:	465b      	mov	r3, fp
200058be:	f805 4b01 	strb.w	r4, [r5], #1
200058c2:	4606      	mov	r6, r0
200058c4:	460f      	mov	r7, r1
200058c6:	f002 fe21 	bl	2000850c <__aeabi_dcmplt>
200058ca:	2800      	cmp	r0, #0
200058cc:	f040 84ec 	bne.w	200062a8 <_dtoa_r+0xdd8>
200058d0:	4632      	mov	r2, r6
200058d2:	463b      	mov	r3, r7
200058d4:	2000      	movs	r0, #0
200058d6:	4959      	ldr	r1, [pc, #356]	; (20005a3c <_dtoa_r+0x56c>)
200058d8:	f7fd f920 	bl	20002b1c <__aeabi_dsub>
200058dc:	4652      	mov	r2, sl
200058de:	465b      	mov	r3, fp
200058e0:	f002 fe14 	bl	2000850c <__aeabi_dcmplt>
200058e4:	f108 0801 	add.w	r8, r8, #1
200058e8:	2800      	cmp	r0, #0
200058ea:	d0c8      	beq.n	2000587e <_dtoa_r+0x3ae>
200058ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
200058ee:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
200058f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
200058f4:	9a03      	ldr	r2, [sp, #12]
200058f6:	9308      	str	r3, [sp, #32]
200058f8:	e002      	b.n	20005900 <_dtoa_r+0x430>
200058fa:	4295      	cmp	r5, r2
200058fc:	f000 84be 	beq.w	2000627c <_dtoa_r+0xdac>
20005900:	46a9      	mov	r9, r5
20005902:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
20005906:	2b39      	cmp	r3, #57	; 0x39
20005908:	d0f7      	beq.n	200058fa <_dtoa_r+0x42a>
2000590a:	3301      	adds	r3, #1
2000590c:	b2db      	uxtb	r3, r3
2000590e:	702b      	strb	r3, [r5, #0]
20005910:	9b08      	ldr	r3, [sp, #32]
20005912:	3301      	adds	r3, #1
20005914:	9308      	str	r3, [sp, #32]
20005916:	e1a0      	b.n	20005c5a <_dtoa_r+0x78a>
20005918:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
2000591c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
2000591e:	e9dd b916 	ldrd	fp, r9, [sp, #88]	; 0x58
20005922:	9b19      	ldr	r3, [sp, #100]	; 0x64
20005924:	2b00      	cmp	r3, #0
20005926:	f2c0 8093 	blt.w	20005a50 <_dtoa_r+0x580>
2000592a:	9a08      	ldr	r2, [sp, #32]
2000592c:	2a0e      	cmp	r2, #14
2000592e:	f300 808f 	bgt.w	20005a50 <_dtoa_r+0x580>
20005932:	4b40      	ldr	r3, [pc, #256]	; (20005a34 <_dtoa_r+0x564>)
20005934:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
20005938:	e9d3 2300 	ldrd	r2, r3, [r3]
2000593c:	e9cd 2304 	strd	r2, r3, [sp, #16]
20005940:	9b25      	ldr	r3, [sp, #148]	; 0x94
20005942:	2b00      	cmp	r3, #0
20005944:	da1a      	bge.n	2000597c <_dtoa_r+0x4ac>
20005946:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20005948:	2b00      	cmp	r3, #0
2000594a:	dc17      	bgt.n	2000597c <_dtoa_r+0x4ac>
2000594c:	f040 84a7 	bne.w	2000629e <_dtoa_r+0xdce>
20005950:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
20005954:	2200      	movs	r2, #0
20005956:	4b3d      	ldr	r3, [pc, #244]	; (20005a4c <_dtoa_r+0x57c>)
20005958:	f7fd fa98 	bl	20002e8c <__aeabi_dmul>
2000595c:	4602      	mov	r2, r0
2000595e:	460b      	mov	r3, r1
20005960:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
20005964:	f002 fddc 	bl	20008520 <__aeabi_dcmple>
20005968:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
2000596c:	4645      	mov	r5, r8
2000596e:	2800      	cmp	r0, #0
20005970:	f000 8241 	beq.w	20005df6 <_dtoa_r+0x926>
20005974:	9b25      	ldr	r3, [sp, #148]	; 0x94
20005976:	9f03      	ldr	r7, [sp, #12]
20005978:	43de      	mvns	r6, r3
2000597a:	e244      	b.n	20005e06 <_dtoa_r+0x936>
2000597c:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
20005980:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
20005984:	4632      	mov	r2, r6
20005986:	463b      	mov	r3, r7
20005988:	f7fd fbaa 	bl	200030e0 <__aeabi_ddiv>
2000598c:	f002 fdfc 	bl	20008588 <__aeabi_d2iz>
20005990:	4680      	mov	r8, r0
20005992:	f7fd fa11 	bl	20002db8 <__aeabi_i2d>
20005996:	4632      	mov	r2, r6
20005998:	463b      	mov	r3, r7
2000599a:	f7fd fa77 	bl	20002e8c <__aeabi_dmul>
2000599e:	460b      	mov	r3, r1
200059a0:	4602      	mov	r2, r0
200059a2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
200059a6:	f7fd f8b9 	bl	20002b1c <__aeabi_dsub>
200059aa:	9d03      	ldr	r5, [sp, #12]
200059ac:	f108 0330 	add.w	r3, r8, #48	; 0x30
200059b0:	f805 3b01 	strb.w	r3, [r5], #1
200059b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
200059b6:	2b01      	cmp	r3, #1
200059b8:	f000 8371 	beq.w	2000609e <_dtoa_r+0xbce>
200059bc:	f8cd a018 	str.w	sl, [sp, #24]
200059c0:	f04f 0901 	mov.w	r9, #1
200059c4:	46aa      	mov	sl, r5
200059c6:	469b      	mov	fp, r3
200059c8:	9409      	str	r4, [sp, #36]	; 0x24
200059ca:	e01b      	b.n	20005a04 <_dtoa_r+0x534>
200059cc:	4632      	mov	r2, r6
200059ce:	463b      	mov	r3, r7
200059d0:	4620      	mov	r0, r4
200059d2:	4629      	mov	r1, r5
200059d4:	f7fd fb84 	bl	200030e0 <__aeabi_ddiv>
200059d8:	f002 fdd6 	bl	20008588 <__aeabi_d2iz>
200059dc:	4680      	mov	r8, r0
200059de:	f7fd f9eb 	bl	20002db8 <__aeabi_i2d>
200059e2:	4632      	mov	r2, r6
200059e4:	463b      	mov	r3, r7
200059e6:	f7fd fa51 	bl	20002e8c <__aeabi_dmul>
200059ea:	460b      	mov	r3, r1
200059ec:	4602      	mov	r2, r0
200059ee:	4629      	mov	r1, r5
200059f0:	4620      	mov	r0, r4
200059f2:	f7fd f893 	bl	20002b1c <__aeabi_dsub>
200059f6:	f108 0330 	add.w	r3, r8, #48	; 0x30
200059fa:	45d9      	cmp	r9, fp
200059fc:	f80a 3b01 	strb.w	r3, [sl], #1
20005a00:	f000 8349 	beq.w	20006096 <_dtoa_r+0xbc6>
20005a04:	2200      	movs	r2, #0
20005a06:	4b10      	ldr	r3, [pc, #64]	; (20005a48 <_dtoa_r+0x578>)
20005a08:	f7fd fa40 	bl	20002e8c <__aeabi_dmul>
20005a0c:	2200      	movs	r2, #0
20005a0e:	2300      	movs	r3, #0
20005a10:	4604      	mov	r4, r0
20005a12:	460d      	mov	r5, r1
20005a14:	f002 fd70 	bl	200084f8 <__aeabi_dcmpeq>
20005a18:	f109 0901 	add.w	r9, r9, #1
20005a1c:	2800      	cmp	r0, #0
20005a1e:	d0d5      	beq.n	200059cc <_dtoa_r+0x4fc>
20005a20:	4655      	mov	r5, sl
20005a22:	9c09      	ldr	r4, [sp, #36]	; 0x24
20005a24:	f8dd a018 	ldr.w	sl, [sp, #24]
20005a28:	9b08      	ldr	r3, [sp, #32]
20005a2a:	46a9      	mov	r9, r5
20005a2c:	3301      	adds	r3, #1
20005a2e:	9308      	str	r3, [sp, #32]
20005a30:	e113      	b.n	20005c5a <_dtoa_r+0x78a>
20005a32:	bf00      	nop
20005a34:	20009030 	.word	0x20009030
20005a38:	20009008 	.word	0x20009008
20005a3c:	3ff00000 	.word	0x3ff00000
20005a40:	401c0000 	.word	0x401c0000
20005a44:	3fe00000 	.word	0x3fe00000
20005a48:	40240000 	.word	0x40240000
20005a4c:	40140000 	.word	0x40140000
20005a50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
20005a52:	2a00      	cmp	r2, #0
20005a54:	d03e      	beq.n	20005ad4 <_dtoa_r+0x604>
20005a56:	9a24      	ldr	r2, [sp, #144]	; 0x90
20005a58:	2a01      	cmp	r2, #1
20005a5a:	f340 827c 	ble.w	20005f56 <_dtoa_r+0xa86>
20005a5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20005a60:	1e5f      	subs	r7, r3, #1
20005a62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20005a64:	42bb      	cmp	r3, r7
20005a66:	f280 8256 	bge.w	20005f16 <_dtoa_r+0xa46>
20005a6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20005a6c:	970c      	str	r7, [sp, #48]	; 0x30
20005a6e:	1afb      	subs	r3, r7, r3
20005a70:	2700      	movs	r7, #0
20005a72:	449b      	add	fp, r3
20005a74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20005a76:	2b00      	cmp	r3, #0
20005a78:	f2c0 833f 	blt.w	200060fa <_dtoa_r+0xc2a>
20005a7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
20005a7e:	4499      	add	r9, r3
20005a80:	4616      	mov	r6, r2
20005a82:	441a      	add	r2, r3
20005a84:	9209      	str	r2, [sp, #36]	; 0x24
20005a86:	2101      	movs	r1, #1
20005a88:	4620      	mov	r0, r4
20005a8a:	f001 fd41 	bl	20007510 <__i2b>
20005a8e:	4605      	mov	r5, r0
20005a90:	e023      	b.n	20005ada <_dtoa_r+0x60a>
20005a92:	2301      	movs	r3, #1
20005a94:	eba8 0505 	sub.w	r5, r8, r5
20005a98:	f1b5 0901 	subs.w	r9, r5, #1
20005a9c:	930d      	str	r3, [sp, #52]	; 0x34
20005a9e:	f57f adc2 	bpl.w	20005626 <_dtoa_r+0x156>
20005aa2:	f1c5 0301 	rsb	r3, r5, #1
20005aa6:	f04f 0900 	mov.w	r9, #0
20005aaa:	9309      	str	r3, [sp, #36]	; 0x24
20005aac:	e5bd      	b.n	2000562a <_dtoa_r+0x15a>
20005aae:	4658      	mov	r0, fp
20005ab0:	f7fd f982 	bl	20002db8 <__aeabi_i2d>
20005ab4:	4632      	mov	r2, r6
20005ab6:	463b      	mov	r3, r7
20005ab8:	f002 fd1e 	bl	200084f8 <__aeabi_dcmpeq>
20005abc:	2800      	cmp	r0, #0
20005abe:	f47f ad99 	bne.w	200055f4 <_dtoa_r+0x124>
20005ac2:	f10b 3bff 	add.w	fp, fp, #4294967295
20005ac6:	e595      	b.n	200055f4 <_dtoa_r+0x124>
20005ac8:	4bbf      	ldr	r3, [pc, #764]	; (20005dc8 <_dtoa_r+0x8f8>)
20005aca:	9303      	str	r3, [sp, #12]
20005acc:	9803      	ldr	r0, [sp, #12]
20005ace:	b01b      	add	sp, #108	; 0x6c
20005ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20005ad4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
20005ad6:	9e09      	ldr	r6, [sp, #36]	; 0x24
20005ad8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
20005ada:	2e00      	cmp	r6, #0
20005adc:	dd0c      	ble.n	20005af8 <_dtoa_r+0x628>
20005ade:	f1b9 0f00 	cmp.w	r9, #0
20005ae2:	dd09      	ble.n	20005af8 <_dtoa_r+0x628>
20005ae4:	454e      	cmp	r6, r9
20005ae6:	4633      	mov	r3, r6
20005ae8:	bfa8      	it	ge
20005aea:	464b      	movge	r3, r9
20005aec:	9a09      	ldr	r2, [sp, #36]	; 0x24
20005aee:	1af6      	subs	r6, r6, r3
20005af0:	1ad2      	subs	r2, r2, r3
20005af2:	9209      	str	r2, [sp, #36]	; 0x24
20005af4:	eba9 0903 	sub.w	r9, r9, r3
20005af8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20005afa:	b1d3      	cbz	r3, 20005b32 <_dtoa_r+0x662>
20005afc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005afe:	2b00      	cmp	r3, #0
20005b00:	f000 81a9 	beq.w	20005e56 <_dtoa_r+0x986>
20005b04:	2f00      	cmp	r7, #0
20005b06:	dd10      	ble.n	20005b2a <_dtoa_r+0x65a>
20005b08:	4629      	mov	r1, r5
20005b0a:	463a      	mov	r2, r7
20005b0c:	4620      	mov	r0, r4
20005b0e:	f001 fdab 	bl	20007668 <__pow5mult>
20005b12:	4652      	mov	r2, sl
20005b14:	4601      	mov	r1, r0
20005b16:	4605      	mov	r5, r0
20005b18:	4620      	mov	r0, r4
20005b1a:	f001 fd03 	bl	20007524 <__multiply>
20005b1e:	4603      	mov	r3, r0
20005b20:	4651      	mov	r1, sl
20005b22:	4620      	mov	r0, r4
20005b24:	469a      	mov	sl, r3
20005b26:	f001 fc5b 	bl	200073e0 <_Bfree>
20005b2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
20005b2c:	1bda      	subs	r2, r3, r7
20005b2e:	f040 8193 	bne.w	20005e58 <_dtoa_r+0x988>
20005b32:	2101      	movs	r1, #1
20005b34:	4620      	mov	r0, r4
20005b36:	f001 fceb 	bl	20007510 <__i2b>
20005b3a:	f1bb 0f00 	cmp.w	fp, #0
20005b3e:	4680      	mov	r8, r0
20005b40:	f300 80a9 	bgt.w	20005c96 <_dtoa_r+0x7c6>
20005b44:	9b24      	ldr	r3, [sp, #144]	; 0x90
20005b46:	2b01      	cmp	r3, #1
20005b48:	f340 8190 	ble.w	20005e6c <_dtoa_r+0x99c>
20005b4c:	2700      	movs	r7, #0
20005b4e:	2001      	movs	r0, #1
20005b50:	f1bb 0f00 	cmp.w	fp, #0
20005b54:	f040 80aa 	bne.w	20005cac <_dtoa_r+0x7dc>
20005b58:	4448      	add	r0, r9
20005b5a:	f010 001f 	ands.w	r0, r0, #31
20005b5e:	f000 8091 	beq.w	20005c84 <_dtoa_r+0x7b4>
20005b62:	f1c0 0320 	rsb	r3, r0, #32
20005b66:	2b04      	cmp	r3, #4
20005b68:	f340 83d8 	ble.w	2000631c <_dtoa_r+0xe4c>
20005b6c:	f1c0 001c 	rsb	r0, r0, #28
20005b70:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005b72:	4406      	add	r6, r0
20005b74:	4403      	add	r3, r0
20005b76:	9309      	str	r3, [sp, #36]	; 0x24
20005b78:	4481      	add	r9, r0
20005b7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005b7c:	2b00      	cmp	r3, #0
20005b7e:	dd05      	ble.n	20005b8c <_dtoa_r+0x6bc>
20005b80:	4651      	mov	r1, sl
20005b82:	461a      	mov	r2, r3
20005b84:	4620      	mov	r0, r4
20005b86:	f001 fdbf 	bl	20007708 <__lshift>
20005b8a:	4682      	mov	sl, r0
20005b8c:	f1b9 0f00 	cmp.w	r9, #0
20005b90:	dd05      	ble.n	20005b9e <_dtoa_r+0x6ce>
20005b92:	4641      	mov	r1, r8
20005b94:	464a      	mov	r2, r9
20005b96:	4620      	mov	r0, r4
20005b98:	f001 fdb6 	bl	20007708 <__lshift>
20005b9c:	4680      	mov	r8, r0
20005b9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
20005ba0:	2b00      	cmp	r3, #0
20005ba2:	f040 813d 	bne.w	20005e20 <_dtoa_r+0x950>
20005ba6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20005ba8:	2b00      	cmp	r3, #0
20005baa:	f340 810f 	ble.w	20005dcc <_dtoa_r+0x8fc>
20005bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005bb0:	2b00      	cmp	r3, #0
20005bb2:	f040 808d 	bne.w	20005cd0 <_dtoa_r+0x800>
20005bb6:	9b08      	ldr	r3, [sp, #32]
20005bb8:	3301      	adds	r3, #1
20005bba:	9308      	str	r3, [sp, #32]
20005bbc:	2601      	movs	r6, #1
20005bbe:	9f03      	ldr	r7, [sp, #12]
20005bc0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
20005bc4:	e007      	b.n	20005bd6 <_dtoa_r+0x706>
20005bc6:	4651      	mov	r1, sl
20005bc8:	2300      	movs	r3, #0
20005bca:	220a      	movs	r2, #10
20005bcc:	4620      	mov	r0, r4
20005bce:	f001 fc11 	bl	200073f4 <__multadd>
20005bd2:	4682      	mov	sl, r0
20005bd4:	3601      	adds	r6, #1
20005bd6:	4641      	mov	r1, r8
20005bd8:	4650      	mov	r0, sl
20005bda:	f7ff fbe7 	bl	200053ac <quorem>
20005bde:	454e      	cmp	r6, r9
20005be0:	f100 0330 	add.w	r3, r0, #48	; 0x30
20005be4:	f807 3b01 	strb.w	r3, [r7], #1
20005be8:	dbed      	blt.n	20005bc6 <_dtoa_r+0x6f6>
20005bea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
20005bec:	2600      	movs	r6, #0
20005bee:	2a00      	cmp	r2, #0
20005bf0:	bfcc      	ite	gt
20005bf2:	4693      	movgt	fp, r2
20005bf4:	f04f 0b01 	movle.w	fp, #1
20005bf8:	9a03      	ldr	r2, [sp, #12]
20005bfa:	4493      	add	fp, r2
20005bfc:	4651      	mov	r1, sl
20005bfe:	2201      	movs	r2, #1
20005c00:	4620      	mov	r0, r4
20005c02:	9304      	str	r3, [sp, #16]
20005c04:	f001 fd80 	bl	20007708 <__lshift>
20005c08:	4641      	mov	r1, r8
20005c0a:	4682      	mov	sl, r0
20005c0c:	f001 fde4 	bl	200077d8 <__mcmp>
20005c10:	2800      	cmp	r0, #0
20005c12:	f340 818e 	ble.w	20005f32 <_dtoa_r+0xa62>
20005c16:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
20005c1a:	9a03      	ldr	r2, [sp, #12]
20005c1c:	f10b 3bff 	add.w	fp, fp, #4294967295
20005c20:	e004      	b.n	20005c2c <_dtoa_r+0x75c>
20005c22:	455a      	cmp	r2, fp
20005c24:	f000 8190 	beq.w	20005f48 <_dtoa_r+0xa78>
20005c28:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
20005c2c:	2b39      	cmp	r3, #57	; 0x39
20005c2e:	f10b 0901 	add.w	r9, fp, #1
20005c32:	d0f6      	beq.n	20005c22 <_dtoa_r+0x752>
20005c34:	3301      	adds	r3, #1
20005c36:	f88b 3000 	strb.w	r3, [fp]
20005c3a:	4641      	mov	r1, r8
20005c3c:	4620      	mov	r0, r4
20005c3e:	f001 fbcf 	bl	200073e0 <_Bfree>
20005c42:	b155      	cbz	r5, 20005c5a <_dtoa_r+0x78a>
20005c44:	b12e      	cbz	r6, 20005c52 <_dtoa_r+0x782>
20005c46:	42ae      	cmp	r6, r5
20005c48:	d003      	beq.n	20005c52 <_dtoa_r+0x782>
20005c4a:	4631      	mov	r1, r6
20005c4c:	4620      	mov	r0, r4
20005c4e:	f001 fbc7 	bl	200073e0 <_Bfree>
20005c52:	4629      	mov	r1, r5
20005c54:	4620      	mov	r0, r4
20005c56:	f001 fbc3 	bl	200073e0 <_Bfree>
20005c5a:	4651      	mov	r1, sl
20005c5c:	4620      	mov	r0, r4
20005c5e:	f001 fbbf 	bl	200073e0 <_Bfree>
20005c62:	2300      	movs	r3, #0
20005c64:	f889 3000 	strb.w	r3, [r9]
20005c68:	9b26      	ldr	r3, [sp, #152]	; 0x98
20005c6a:	461a      	mov	r2, r3
20005c6c:	9b08      	ldr	r3, [sp, #32]
20005c6e:	6013      	str	r3, [r2, #0]
20005c70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
20005c72:	2b00      	cmp	r3, #0
20005c74:	f43f ac67 	beq.w	20005546 <_dtoa_r+0x76>
20005c78:	9803      	ldr	r0, [sp, #12]
20005c7a:	f8c3 9000 	str.w	r9, [r3]
20005c7e:	b01b      	add	sp, #108	; 0x6c
20005c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20005c84:	201c      	movs	r0, #28
20005c86:	e773      	b.n	20005b70 <_dtoa_r+0x6a0>
20005c88:	2501      	movs	r5, #1
20005c8a:	e4e5      	b.n	20005658 <_dtoa_r+0x188>
20005c8c:	f1c0 0020 	rsb	r0, r0, #32
20005c90:	fa06 f000 	lsl.w	r0, r6, r0
20005c94:	e47b      	b.n	2000558e <_dtoa_r+0xbe>
20005c96:	4601      	mov	r1, r0
20005c98:	465a      	mov	r2, fp
20005c9a:	4620      	mov	r0, r4
20005c9c:	f001 fce4 	bl	20007668 <__pow5mult>
20005ca0:	9b24      	ldr	r3, [sp, #144]	; 0x90
20005ca2:	4680      	mov	r8, r0
20005ca4:	2b01      	cmp	r3, #1
20005ca6:	f340 81c5 	ble.w	20006034 <_dtoa_r+0xb64>
20005caa:	2700      	movs	r7, #0
20005cac:	f8d8 3010 	ldr.w	r3, [r8, #16]
20005cb0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
20005cb4:	6918      	ldr	r0, [r3, #16]
20005cb6:	f001 fbdb 	bl	20007470 <__hi0bits>
20005cba:	f1c0 0020 	rsb	r0, r0, #32
20005cbe:	e74b      	b.n	20005b58 <_dtoa_r+0x688>
20005cc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
20005cc2:	2b02      	cmp	r3, #2
20005cc4:	f300 831d 	bgt.w	20006302 <_dtoa_r+0xe32>
20005cc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
20005cca:	f8cd 9020 	str.w	r9, [sp, #32]
20005cce:	930a      	str	r3, [sp, #40]	; 0x28
20005cd0:	9b08      	ldr	r3, [sp, #32]
20005cd2:	3301      	adds	r3, #1
20005cd4:	9308      	str	r3, [sp, #32]
20005cd6:	2e00      	cmp	r6, #0
20005cd8:	f300 8116 	bgt.w	20005f08 <_dtoa_r+0xa38>
20005cdc:	2f00      	cmp	r7, #0
20005cde:	f040 81f8 	bne.w	200060d2 <_dtoa_r+0xc02>
20005ce2:	462f      	mov	r7, r5
20005ce4:	9903      	ldr	r1, [sp, #12]
20005ce6:	9b04      	ldr	r3, [sp, #16]
20005ce8:	460e      	mov	r6, r1
20005cea:	f003 0201 	and.w	r2, r3, #1
20005cee:	1e4b      	subs	r3, r1, #1
20005cf0:	9924      	ldr	r1, [sp, #144]	; 0x90
20005cf2:	920c      	str	r2, [sp, #48]	; 0x30
20005cf4:	430a      	orrs	r2, r1
20005cf6:	920b      	str	r2, [sp, #44]	; 0x2c
20005cf8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
20005cfa:	441a      	add	r2, r3
20005cfc:	920a      	str	r2, [sp, #40]	; 0x28
20005cfe:	4641      	mov	r1, r8
20005d00:	4650      	mov	r0, sl
20005d02:	f7ff fb53 	bl	200053ac <quorem>
20005d06:	4629      	mov	r1, r5
20005d08:	4683      	mov	fp, r0
20005d0a:	4650      	mov	r0, sl
20005d0c:	f001 fd64 	bl	200077d8 <__mcmp>
20005d10:	463a      	mov	r2, r7
20005d12:	4641      	mov	r1, r8
20005d14:	4681      	mov	r9, r0
20005d16:	4620      	mov	r0, r4
20005d18:	f001 fd7c 	bl	20007814 <__mdiff>
20005d1c:	68c2      	ldr	r2, [r0, #12]
20005d1e:	4601      	mov	r1, r0
20005d20:	f10b 0330 	add.w	r3, fp, #48	; 0x30
20005d24:	2a00      	cmp	r2, #0
20005d26:	d142      	bne.n	20005dae <_dtoa_r+0x8de>
20005d28:	9006      	str	r0, [sp, #24]
20005d2a:	4650      	mov	r0, sl
20005d2c:	9309      	str	r3, [sp, #36]	; 0x24
20005d2e:	f001 fd53 	bl	200077d8 <__mcmp>
20005d32:	9906      	ldr	r1, [sp, #24]
20005d34:	9004      	str	r0, [sp, #16]
20005d36:	4620      	mov	r0, r4
20005d38:	f001 fb52 	bl	200073e0 <_Bfree>
20005d3c:	9a04      	ldr	r2, [sp, #16]
20005d3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005d40:	b91a      	cbnz	r2, 20005d4a <_dtoa_r+0x87a>
20005d42:	990b      	ldr	r1, [sp, #44]	; 0x2c
20005d44:	2900      	cmp	r1, #0
20005d46:	f000 82c2 	beq.w	200062ce <_dtoa_r+0xdfe>
20005d4a:	f1b9 0f00 	cmp.w	r9, #0
20005d4e:	f2c0 8187 	blt.w	20006060 <_dtoa_r+0xb90>
20005d52:	9924      	ldr	r1, [sp, #144]	; 0x90
20005d54:	ea41 0909 	orr.w	r9, r1, r9
20005d58:	990c      	ldr	r1, [sp, #48]	; 0x30
20005d5a:	ea51 0109 	orrs.w	r1, r1, r9
20005d5e:	f000 817f 	beq.w	20006060 <_dtoa_r+0xb90>
20005d62:	2a00      	cmp	r2, #0
20005d64:	f300 81cd 	bgt.w	20006102 <_dtoa_r+0xc32>
20005d68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
20005d6a:	f106 0901 	add.w	r9, r6, #1
20005d6e:	42b2      	cmp	r2, r6
20005d70:	46cb      	mov	fp, r9
20005d72:	7033      	strb	r3, [r6, #0]
20005d74:	f000 81cf 	beq.w	20006116 <_dtoa_r+0xc46>
20005d78:	4651      	mov	r1, sl
20005d7a:	2300      	movs	r3, #0
20005d7c:	220a      	movs	r2, #10
20005d7e:	4620      	mov	r0, r4
20005d80:	f001 fb38 	bl	200073f4 <__multadd>
20005d84:	42bd      	cmp	r5, r7
20005d86:	4682      	mov	sl, r0
20005d88:	4629      	mov	r1, r5
20005d8a:	f04f 0300 	mov.w	r3, #0
20005d8e:	f04f 020a 	mov.w	r2, #10
20005d92:	4620      	mov	r0, r4
20005d94:	d012      	beq.n	20005dbc <_dtoa_r+0x8ec>
20005d96:	f001 fb2d 	bl	200073f4 <__multadd>
20005d9a:	4639      	mov	r1, r7
20005d9c:	4605      	mov	r5, r0
20005d9e:	2300      	movs	r3, #0
20005da0:	220a      	movs	r2, #10
20005da2:	4620      	mov	r0, r4
20005da4:	f001 fb26 	bl	200073f4 <__multadd>
20005da8:	464e      	mov	r6, r9
20005daa:	4607      	mov	r7, r0
20005dac:	e7a7      	b.n	20005cfe <_dtoa_r+0x82e>
20005dae:	4620      	mov	r0, r4
20005db0:	9304      	str	r3, [sp, #16]
20005db2:	f001 fb15 	bl	200073e0 <_Bfree>
20005db6:	2201      	movs	r2, #1
20005db8:	9b04      	ldr	r3, [sp, #16]
20005dba:	e7c6      	b.n	20005d4a <_dtoa_r+0x87a>
20005dbc:	f001 fb1a 	bl	200073f4 <__multadd>
20005dc0:	464e      	mov	r6, r9
20005dc2:	4605      	mov	r5, r0
20005dc4:	4607      	mov	r7, r0
20005dc6:	e79a      	b.n	20005cfe <_dtoa_r+0x82e>
20005dc8:	20008fd4 	.word	0x20008fd4
20005dcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
20005dce:	2b02      	cmp	r3, #2
20005dd0:	f340 8087 	ble.w	20005ee2 <_dtoa_r+0xa12>
20005dd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20005dd6:	2b00      	cmp	r3, #0
20005dd8:	f47f adcc 	bne.w	20005974 <_dtoa_r+0x4a4>
20005ddc:	4641      	mov	r1, r8
20005dde:	2205      	movs	r2, #5
20005de0:	4620      	mov	r0, r4
20005de2:	f001 fb07 	bl	200073f4 <__multadd>
20005de6:	4680      	mov	r8, r0
20005de8:	4650      	mov	r0, sl
20005dea:	4641      	mov	r1, r8
20005dec:	f001 fcf4 	bl	200077d8 <__mcmp>
20005df0:	2800      	cmp	r0, #0
20005df2:	f77f adbf 	ble.w	20005974 <_dtoa_r+0x4a4>
20005df6:	9f03      	ldr	r7, [sp, #12]
20005df8:	2231      	movs	r2, #49	; 0x31
20005dfa:	463b      	mov	r3, r7
20005dfc:	9e08      	ldr	r6, [sp, #32]
20005dfe:	f803 2b01 	strb.w	r2, [r3], #1
20005e02:	3601      	adds	r6, #1
20005e04:	9303      	str	r3, [sp, #12]
20005e06:	4641      	mov	r1, r8
20005e08:	4620      	mov	r0, r4
20005e0a:	f001 fae9 	bl	200073e0 <_Bfree>
20005e0e:	1c73      	adds	r3, r6, #1
20005e10:	f8dd 900c 	ldr.w	r9, [sp, #12]
20005e14:	9308      	str	r3, [sp, #32]
20005e16:	9703      	str	r7, [sp, #12]
20005e18:	2d00      	cmp	r5, #0
20005e1a:	f47f af1a 	bne.w	20005c52 <_dtoa_r+0x782>
20005e1e:	e71c      	b.n	20005c5a <_dtoa_r+0x78a>
20005e20:	4641      	mov	r1, r8
20005e22:	4650      	mov	r0, sl
20005e24:	f001 fcd8 	bl	200077d8 <__mcmp>
20005e28:	2800      	cmp	r0, #0
20005e2a:	f6bf aebc 	bge.w	20005ba6 <_dtoa_r+0x6d6>
20005e2e:	4651      	mov	r1, sl
20005e30:	2300      	movs	r3, #0
20005e32:	220a      	movs	r2, #10
20005e34:	4620      	mov	r0, r4
20005e36:	f001 fadd 	bl	200073f4 <__multadd>
20005e3a:	9b08      	ldr	r3, [sp, #32]
20005e3c:	4682      	mov	sl, r0
20005e3e:	f103 39ff 	add.w	r9, r3, #4294967295
20005e42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005e44:	2b00      	cmp	r3, #0
20005e46:	f040 8249 	bne.w	200062dc <_dtoa_r+0xe0c>
20005e4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
20005e4c:	2b00      	cmp	r3, #0
20005e4e:	f340 8252 	ble.w	200062f6 <_dtoa_r+0xe26>
20005e52:	930a      	str	r3, [sp, #40]	; 0x28
20005e54:	e6b2      	b.n	20005bbc <_dtoa_r+0x6ec>
20005e56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
20005e58:	4651      	mov	r1, sl
20005e5a:	4620      	mov	r0, r4
20005e5c:	f001 fc04 	bl	20007668 <__pow5mult>
20005e60:	4682      	mov	sl, r0
20005e62:	e666      	b.n	20005b32 <_dtoa_r+0x662>
20005e64:	4bad      	ldr	r3, [pc, #692]	; (2000611c <_dtoa_r+0xc4c>)
20005e66:	9303      	str	r3, [sp, #12]
20005e68:	3303      	adds	r3, #3
20005e6a:	e410      	b.n	2000568e <_dtoa_r+0x1be>
20005e6c:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
20005e70:	2900      	cmp	r1, #0
20005e72:	f47f ae6b 	bne.w	20005b4c <_dtoa_r+0x67c>
20005e76:	f3c2 0313 	ubfx	r3, r2, #0, #20
20005e7a:	2b00      	cmp	r3, #0
20005e7c:	f000 80e4 	beq.w	20006048 <_dtoa_r+0xb78>
20005e80:	9f04      	ldr	r7, [sp, #16]
20005e82:	e664      	b.n	20005b4e <_dtoa_r+0x67e>
20005e84:	2301      	movs	r3, #1
20005e86:	930b      	str	r3, [sp, #44]	; 0x2c
20005e88:	9b25      	ldr	r3, [sp, #148]	; 0x94
20005e8a:	9a08      	ldr	r2, [sp, #32]
20005e8c:	4413      	add	r3, r2
20005e8e:	9311      	str	r3, [sp, #68]	; 0x44
20005e90:	3301      	adds	r3, #1
20005e92:	2b01      	cmp	r3, #1
20005e94:	461e      	mov	r6, r3
20005e96:	bfb8      	it	lt
20005e98:	2601      	movlt	r6, #1
20005e9a:	930a      	str	r3, [sp, #40]	; 0x28
20005e9c:	2100      	movs	r1, #0
20005e9e:	2e17      	cmp	r6, #23
20005ea0:	bfd8      	it	le
20005ea2:	9e0a      	ldrle	r6, [sp, #40]	; 0x28
20005ea4:	6461      	str	r1, [r4, #68]	; 0x44
20005ea6:	f77f ac42 	ble.w	2000572e <_dtoa_r+0x25e>
20005eaa:	2201      	movs	r2, #1
20005eac:	2304      	movs	r3, #4
20005eae:	005b      	lsls	r3, r3, #1
20005eb0:	f103 0014 	add.w	r0, r3, #20
20005eb4:	42b0      	cmp	r0, r6
20005eb6:	4611      	mov	r1, r2
20005eb8:	f102 0201 	add.w	r2, r2, #1
20005ebc:	d9f7      	bls.n	20005eae <_dtoa_r+0x9de>
20005ebe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
20005ec0:	6461      	str	r1, [r4, #68]	; 0x44
20005ec2:	e434      	b.n	2000572e <_dtoa_r+0x25e>
20005ec4:	2301      	movs	r3, #1
20005ec6:	930b      	str	r3, [sp, #44]	; 0x2c
20005ec8:	9b25      	ldr	r3, [sp, #148]	; 0x94
20005eca:	2b00      	cmp	r3, #0
20005ecc:	dd2c      	ble.n	20005f28 <_dtoa_r+0xa58>
20005ece:	461e      	mov	r6, r3
20005ed0:	9311      	str	r3, [sp, #68]	; 0x44
20005ed2:	930a      	str	r3, [sp, #40]	; 0x28
20005ed4:	e7e2      	b.n	20005e9c <_dtoa_r+0x9cc>
20005ed6:	2300      	movs	r3, #0
20005ed8:	930b      	str	r3, [sp, #44]	; 0x2c
20005eda:	e7d5      	b.n	20005e88 <_dtoa_r+0x9b8>
20005edc:	2300      	movs	r3, #0
20005ede:	930b      	str	r3, [sp, #44]	; 0x2c
20005ee0:	e7f2      	b.n	20005ec8 <_dtoa_r+0x9f8>
20005ee2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005ee4:	2b00      	cmp	r3, #0
20005ee6:	f47f aef3 	bne.w	20005cd0 <_dtoa_r+0x800>
20005eea:	4641      	mov	r1, r8
20005eec:	4650      	mov	r0, sl
20005eee:	f7ff fa5d 	bl	200053ac <quorem>
20005ef2:	9a08      	ldr	r2, [sp, #32]
20005ef4:	f8dd b00c 	ldr.w	fp, [sp, #12]
20005ef8:	f100 0330 	add.w	r3, r0, #48	; 0x30
20005efc:	3201      	adds	r2, #1
20005efe:	2600      	movs	r6, #0
20005f00:	9208      	str	r2, [sp, #32]
20005f02:	f80b 3b01 	strb.w	r3, [fp], #1
20005f06:	e679      	b.n	20005bfc <_dtoa_r+0x72c>
20005f08:	4629      	mov	r1, r5
20005f0a:	4632      	mov	r2, r6
20005f0c:	4620      	mov	r0, r4
20005f0e:	f001 fbfb 	bl	20007708 <__lshift>
20005f12:	4605      	mov	r5, r0
20005f14:	e6e2      	b.n	20005cdc <_dtoa_r+0x80c>
20005f16:	1bdf      	subs	r7, r3, r7
20005f18:	e5ac      	b.n	20005a74 <_dtoa_r+0x5a4>
20005f1a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
20005f1e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
20005f22:	2302      	movs	r3, #2
20005f24:	930e      	str	r3, [sp, #56]	; 0x38
20005f26:	e42a      	b.n	2000577e <_dtoa_r+0x2ae>
20005f28:	2601      	movs	r6, #1
20005f2a:	9625      	str	r6, [sp, #148]	; 0x94
20005f2c:	960a      	str	r6, [sp, #40]	; 0x28
20005f2e:	f7ff bbfb 	b.w	20005728 <_dtoa_r+0x258>
20005f32:	d103      	bne.n	20005f3c <_dtoa_r+0xa6c>
20005f34:	9b04      	ldr	r3, [sp, #16]
20005f36:	07db      	lsls	r3, r3, #31
20005f38:	f53f ae6d 	bmi.w	20005c16 <_dtoa_r+0x746>
20005f3c:	46d9      	mov	r9, fp
20005f3e:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
20005f42:	2b30      	cmp	r3, #48	; 0x30
20005f44:	d0fa      	beq.n	20005f3c <_dtoa_r+0xa6c>
20005f46:	e678      	b.n	20005c3a <_dtoa_r+0x76a>
20005f48:	2331      	movs	r3, #49	; 0x31
20005f4a:	9a08      	ldr	r2, [sp, #32]
20005f4c:	3201      	adds	r2, #1
20005f4e:	9208      	str	r2, [sp, #32]
20005f50:	9a03      	ldr	r2, [sp, #12]
20005f52:	7013      	strb	r3, [r2, #0]
20005f54:	e671      	b.n	20005c3a <_dtoa_r+0x76a>
20005f56:	9a10      	ldr	r2, [sp, #64]	; 0x40
20005f58:	2a00      	cmp	r2, #0
20005f5a:	f000 8157 	beq.w	2000620c <_dtoa_r+0xd3c>
20005f5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
20005f60:	f203 4333 	addw	r3, r3, #1075	; 0x433
20005f64:	4616      	mov	r6, r2
20005f66:	441a      	add	r2, r3
20005f68:	9f0c      	ldr	r7, [sp, #48]	; 0x30
20005f6a:	4499      	add	r9, r3
20005f6c:	9209      	str	r2, [sp, #36]	; 0x24
20005f6e:	e58a      	b.n	20005a86 <_dtoa_r+0x5b6>
20005f70:	980e      	ldr	r0, [sp, #56]	; 0x38
20005f72:	f7fc ff21 	bl	20002db8 <__aeabi_i2d>
20005f76:	463a      	mov	r2, r7
20005f78:	4643      	mov	r3, r8
20005f7a:	f7fc ff87 	bl	20002e8c <__aeabi_dmul>
20005f7e:	4b68      	ldr	r3, [pc, #416]	; (20006120 <_dtoa_r+0xc50>)
20005f80:	2200      	movs	r2, #0
20005f82:	f7fc fdcd 	bl	20002b20 <__adddf3>
20005f86:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
20005f8a:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
20005f8e:	930f      	str	r3, [sp, #60]	; 0x3c
20005f90:	4638      	mov	r0, r7
20005f92:	4641      	mov	r1, r8
20005f94:	2200      	movs	r2, #0
20005f96:	4b63      	ldr	r3, [pc, #396]	; (20006124 <_dtoa_r+0xc54>)
20005f98:	f7fc fdc0 	bl	20002b1c <__aeabi_dsub>
20005f9c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
20005fa0:	4606      	mov	r6, r0
20005fa2:	460f      	mov	r7, r1
20005fa4:	f002 fad0 	bl	20008548 <__aeabi_dcmpgt>
20005fa8:	4680      	mov	r8, r0
20005faa:	2800      	cmp	r0, #0
20005fac:	f040 8173 	bne.w	20006296 <_dtoa_r+0xdc6>
20005fb0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
20005fb4:	4602      	mov	r2, r0
20005fb6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
20005fba:	4630      	mov	r0, r6
20005fbc:	4639      	mov	r1, r7
20005fbe:	f002 faa5 	bl	2000850c <__aeabi_dcmplt>
20005fc2:	2800      	cmp	r0, #0
20005fc4:	f43f acad 	beq.w	20005922 <_dtoa_r+0x452>
20005fc8:	4645      	mov	r5, r8
20005fca:	e4d3      	b.n	20005974 <_dtoa_r+0x4a4>
20005fcc:	f000 8128 	beq.w	20006220 <_dtoa_r+0xd50>
20005fd0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
20005fd4:	9b08      	ldr	r3, [sp, #32]
20005fd6:	425d      	negs	r5, r3
20005fd8:	4b53      	ldr	r3, [pc, #332]	; (20006128 <_dtoa_r+0xc58>)
20005fda:	f005 020f 	and.w	r2, r5, #15
20005fde:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
20005fe2:	e9d3 2300 	ldrd	r2, r3, [r3]
20005fe6:	f7fc ff51 	bl	20002e8c <__aeabi_dmul>
20005fea:	112d      	asrs	r5, r5, #4
20005fec:	4607      	mov	r7, r0
20005fee:	4688      	mov	r8, r1
20005ff0:	f000 818c 	beq.w	2000630c <_dtoa_r+0xe3c>
20005ff4:	2202      	movs	r2, #2
20005ff6:	e9cd 7812 	strd	r7, r8, [sp, #72]	; 0x48
20005ffa:	2300      	movs	r3, #0
20005ffc:	46a0      	mov	r8, r4
20005ffe:	4614      	mov	r4, r2
20006000:	4e4a      	ldr	r6, [pc, #296]	; (2000612c <_dtoa_r+0xc5c>)
20006002:	07ef      	lsls	r7, r5, #31
20006004:	d505      	bpl.n	20006012 <_dtoa_r+0xb42>
20006006:	e9d6 2300 	ldrd	r2, r3, [r6]
2000600a:	f7fc ff3f 	bl	20002e8c <__aeabi_dmul>
2000600e:	2301      	movs	r3, #1
20006010:	441c      	add	r4, r3
20006012:	106d      	asrs	r5, r5, #1
20006014:	f106 0608 	add.w	r6, r6, #8
20006018:	d1f3      	bne.n	20006002 <_dtoa_r+0xb32>
2000601a:	940e      	str	r4, [sp, #56]	; 0x38
2000601c:	4644      	mov	r4, r8
2000601e:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	; 0x48
20006022:	2b00      	cmp	r3, #0
20006024:	f43f abc9 	beq.w	200057ba <_dtoa_r+0x2ea>
20006028:	4607      	mov	r7, r0
2000602a:	4688      	mov	r8, r1
2000602c:	f7ff bbc5 	b.w	200057ba <_dtoa_r+0x2ea>
20006030:	900d      	str	r0, [sp, #52]	; 0x34
20006032:	e536      	b.n	20005aa2 <_dtoa_r+0x5d2>
20006034:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
20006038:	2900      	cmp	r1, #0
2000603a:	f47f ae36 	bne.w	20005caa <_dtoa_r+0x7da>
2000603e:	f3c2 0313 	ubfx	r3, r2, #0, #20
20006042:	2b00      	cmp	r3, #0
20006044:	f47f ae31 	bne.w	20005caa <_dtoa_r+0x7da>
20006048:	4f39      	ldr	r7, [pc, #228]	; (20006130 <_dtoa_r+0xc60>)
2000604a:	4017      	ands	r7, r2
2000604c:	2f00      	cmp	r7, #0
2000604e:	f43f ad7e 	beq.w	20005b4e <_dtoa_r+0x67e>
20006052:	9b09      	ldr	r3, [sp, #36]	; 0x24
20006054:	2701      	movs	r7, #1
20006056:	3301      	adds	r3, #1
20006058:	9309      	str	r3, [sp, #36]	; 0x24
2000605a:	f109 0901 	add.w	r9, r9, #1
2000605e:	e576      	b.n	20005b4e <_dtoa_r+0x67e>
20006060:	2a00      	cmp	r2, #0
20006062:	dd12      	ble.n	2000608a <_dtoa_r+0xbba>
20006064:	4651      	mov	r1, sl
20006066:	2201      	movs	r2, #1
20006068:	4620      	mov	r0, r4
2000606a:	9304      	str	r3, [sp, #16]
2000606c:	f001 fb4c 	bl	20007708 <__lshift>
20006070:	4641      	mov	r1, r8
20006072:	4682      	mov	sl, r0
20006074:	f001 fbb0 	bl	200077d8 <__mcmp>
20006078:	2800      	cmp	r0, #0
2000607a:	9b04      	ldr	r3, [sp, #16]
2000607c:	f340 8121 	ble.w	200062c2 <_dtoa_r+0xdf2>
20006080:	2b39      	cmp	r3, #57	; 0x39
20006082:	f000 8101 	beq.w	20006288 <_dtoa_r+0xdb8>
20006086:	f10b 0331 	add.w	r3, fp, #49	; 0x31
2000608a:	46b1      	mov	r9, r6
2000608c:	462e      	mov	r6, r5
2000608e:	f809 3b01 	strb.w	r3, [r9], #1
20006092:	463d      	mov	r5, r7
20006094:	e5d1      	b.n	20005c3a <_dtoa_r+0x76a>
20006096:	4655      	mov	r5, sl
20006098:	9c09      	ldr	r4, [sp, #36]	; 0x24
2000609a:	f8dd a018 	ldr.w	sl, [sp, #24]
2000609e:	4602      	mov	r2, r0
200060a0:	460b      	mov	r3, r1
200060a2:	f7fc fd3d 	bl	20002b20 <__adddf3>
200060a6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
200060aa:	4606      	mov	r6, r0
200060ac:	460f      	mov	r7, r1
200060ae:	f002 fa4b 	bl	20008548 <__aeabi_dcmpgt>
200060b2:	b960      	cbnz	r0, 200060ce <_dtoa_r+0xbfe>
200060b4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
200060b8:	4630      	mov	r0, r6
200060ba:	4639      	mov	r1, r7
200060bc:	f002 fa1c 	bl	200084f8 <__aeabi_dcmpeq>
200060c0:	2800      	cmp	r0, #0
200060c2:	f43f acb1 	beq.w	20005a28 <_dtoa_r+0x558>
200060c6:	f018 0f01 	tst.w	r8, #1
200060ca:	f43f acad 	beq.w	20005a28 <_dtoa_r+0x558>
200060ce:	9a03      	ldr	r2, [sp, #12]
200060d0:	e416      	b.n	20005900 <_dtoa_r+0x430>
200060d2:	6869      	ldr	r1, [r5, #4]
200060d4:	4620      	mov	r0, r4
200060d6:	f001 f95d 	bl	20007394 <_Balloc>
200060da:	4606      	mov	r6, r0
200060dc:	692b      	ldr	r3, [r5, #16]
200060de:	f105 010c 	add.w	r1, r5, #12
200060e2:	3302      	adds	r3, #2
200060e4:	009a      	lsls	r2, r3, #2
200060e6:	300c      	adds	r0, #12
200060e8:	f7fd f906 	bl	200032f8 <memcpy>
200060ec:	4631      	mov	r1, r6
200060ee:	2201      	movs	r2, #1
200060f0:	4620      	mov	r0, r4
200060f2:	f001 fb09 	bl	20007708 <__lshift>
200060f6:	4607      	mov	r7, r0
200060f8:	e5f4      	b.n	20005ce4 <_dtoa_r+0x814>
200060fa:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
200060fe:	1a9e      	subs	r6, r3, r2
20006100:	e4c1      	b.n	20005a86 <_dtoa_r+0x5b6>
20006102:	2b39      	cmp	r3, #57	; 0x39
20006104:	f000 80c0 	beq.w	20006288 <_dtoa_r+0xdb8>
20006108:	46b1      	mov	r9, r6
2000610a:	3301      	adds	r3, #1
2000610c:	462e      	mov	r6, r5
2000610e:	f809 3b01 	strb.w	r3, [r9], #1
20006112:	463d      	mov	r5, r7
20006114:	e591      	b.n	20005c3a <_dtoa_r+0x76a>
20006116:	462e      	mov	r6, r5
20006118:	463d      	mov	r5, r7
2000611a:	e56f      	b.n	20005bfc <_dtoa_r+0x72c>
2000611c:	20008ff8 	.word	0x20008ff8
20006120:	401c0000 	.word	0x401c0000
20006124:	40140000 	.word	0x40140000
20006128:	20009030 	.word	0x20009030
2000612c:	20009008 	.word	0x20009008
20006130:	7ff00000 	.word	0x7ff00000
20006134:	9812      	ldr	r0, [sp, #72]	; 0x48
20006136:	4984      	ldr	r1, [pc, #528]	; (20006348 <_dtoa_r+0xe78>)
20006138:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
2000613c:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
20006140:	e951 0102 	ldrd	r0, r1, [r1, #-8]
20006144:	f7fc fea2 	bl	20002e8c <__aeabi_dmul>
20006148:	4602      	mov	r2, r0
2000614a:	460b      	mov	r3, r1
2000614c:	4638      	mov	r0, r7
2000614e:	4641      	mov	r1, r8
20006150:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
20006154:	f002 fa18 	bl	20008588 <__aeabi_d2iz>
20006158:	4606      	mov	r6, r0
2000615a:	f7fc fe2d 	bl	20002db8 <__aeabi_i2d>
2000615e:	460b      	mov	r3, r1
20006160:	4602      	mov	r2, r0
20006162:	4641      	mov	r1, r8
20006164:	4638      	mov	r0, r7
20006166:	f7fc fcd9 	bl	20002b1c <__aeabi_dsub>
2000616a:	f106 0330 	add.w	r3, r6, #48	; 0x30
2000616e:	4606      	mov	r6, r0
20006170:	9812      	ldr	r0, [sp, #72]	; 0x48
20006172:	9d03      	ldr	r5, [sp, #12]
20006174:	2801      	cmp	r0, #1
20006176:	460f      	mov	r7, r1
20006178:	f805 3b01 	strb.w	r3, [r5], #1
2000617c:	d022      	beq.n	200061c4 <_dtoa_r+0xcf4>
2000617e:	9b12      	ldr	r3, [sp, #72]	; 0x48
20006180:	9a03      	ldr	r2, [sp, #12]
20006182:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
20006186:	4413      	add	r3, r2
20006188:	4698      	mov	r8, r3
2000618a:	2200      	movs	r2, #0
2000618c:	4b6f      	ldr	r3, [pc, #444]	; (2000634c <_dtoa_r+0xe7c>)
2000618e:	4630      	mov	r0, r6
20006190:	4639      	mov	r1, r7
20006192:	f7fc fe7b 	bl	20002e8c <__aeabi_dmul>
20006196:	460f      	mov	r7, r1
20006198:	4606      	mov	r6, r0
2000619a:	f002 f9f5 	bl	20008588 <__aeabi_d2iz>
2000619e:	4683      	mov	fp, r0
200061a0:	f7fc fe0a 	bl	20002db8 <__aeabi_i2d>
200061a4:	4602      	mov	r2, r0
200061a6:	460b      	mov	r3, r1
200061a8:	4630      	mov	r0, r6
200061aa:	4639      	mov	r1, r7
200061ac:	f7fc fcb6 	bl	20002b1c <__aeabi_dsub>
200061b0:	f10b 0b30 	add.w	fp, fp, #48	; 0x30
200061b4:	f805 bb01 	strb.w	fp, [r5], #1
200061b8:	4545      	cmp	r5, r8
200061ba:	4606      	mov	r6, r0
200061bc:	460f      	mov	r7, r1
200061be:	d1e4      	bne.n	2000618a <_dtoa_r+0xcba>
200061c0:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
200061c4:	2200      	movs	r2, #0
200061c6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
200061ca:	4b61      	ldr	r3, [pc, #388]	; (20006350 <_dtoa_r+0xe80>)
200061cc:	f7fc fca8 	bl	20002b20 <__adddf3>
200061d0:	4632      	mov	r2, r6
200061d2:	463b      	mov	r3, r7
200061d4:	f002 f99a 	bl	2000850c <__aeabi_dcmplt>
200061d8:	2800      	cmp	r0, #0
200061da:	d16d      	bne.n	200062b8 <_dtoa_r+0xde8>
200061dc:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
200061e0:	2000      	movs	r0, #0
200061e2:	495b      	ldr	r1, [pc, #364]	; (20006350 <_dtoa_r+0xe80>)
200061e4:	f7fc fc9a 	bl	20002b1c <__aeabi_dsub>
200061e8:	4632      	mov	r2, r6
200061ea:	463b      	mov	r3, r7
200061ec:	f002 f9ac 	bl	20008548 <__aeabi_dcmpgt>
200061f0:	2800      	cmp	r0, #0
200061f2:	f43f ab96 	beq.w	20005922 <_dtoa_r+0x452>
200061f6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
200061fa:	46a9      	mov	r9, r5
200061fc:	2b30      	cmp	r3, #48	; 0x30
200061fe:	f105 35ff 	add.w	r5, r5, #4294967295
20006202:	d0f8      	beq.n	200061f6 <_dtoa_r+0xd26>
20006204:	9b14      	ldr	r3, [sp, #80]	; 0x50
20006206:	3301      	adds	r3, #1
20006208:	9308      	str	r3, [sp, #32]
2000620a:	e526      	b.n	20005c5a <_dtoa_r+0x78a>
2000620c:	9b18      	ldr	r3, [sp, #96]	; 0x60
2000620e:	9a09      	ldr	r2, [sp, #36]	; 0x24
20006210:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
20006214:	4616      	mov	r6, r2
20006216:	441a      	add	r2, r3
20006218:	9f0c      	ldr	r7, [sp, #48]	; 0x30
2000621a:	4499      	add	r9, r3
2000621c:	9209      	str	r2, [sp, #36]	; 0x24
2000621e:	e432      	b.n	20005a86 <_dtoa_r+0x5b6>
20006220:	2302      	movs	r3, #2
20006222:	e9dd 7806 	ldrd	r7, r8, [sp, #24]
20006226:	930e      	str	r3, [sp, #56]	; 0x38
20006228:	f7ff bac7 	b.w	200057ba <_dtoa_r+0x2ea>
2000622c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2000622e:	2b00      	cmp	r3, #0
20006230:	f43f ae9e 	beq.w	20005f70 <_dtoa_r+0xaa0>
20006234:	9d11      	ldr	r5, [sp, #68]	; 0x44
20006236:	2d00      	cmp	r5, #0
20006238:	f77f ab73 	ble.w	20005922 <_dtoa_r+0x452>
2000623c:	4b43      	ldr	r3, [pc, #268]	; (2000634c <_dtoa_r+0xe7c>)
2000623e:	4638      	mov	r0, r7
20006240:	4641      	mov	r1, r8
20006242:	2200      	movs	r2, #0
20006244:	f7fc fe22 	bl	20002e8c <__aeabi_dmul>
20006248:	4602      	mov	r2, r0
2000624a:	4688      	mov	r8, r1
2000624c:	4617      	mov	r7, r2
2000624e:	980e      	ldr	r0, [sp, #56]	; 0x38
20006250:	3001      	adds	r0, #1
20006252:	f7fc fdb1 	bl	20002db8 <__aeabi_i2d>
20006256:	463a      	mov	r2, r7
20006258:	4643      	mov	r3, r8
2000625a:	f7fc fe17 	bl	20002e8c <__aeabi_dmul>
2000625e:	2200      	movs	r2, #0
20006260:	4b3c      	ldr	r3, [pc, #240]	; (20006354 <_dtoa_r+0xe84>)
20006262:	f7fc fc5d 	bl	20002b20 <__adddf3>
20006266:	9a08      	ldr	r2, [sp, #32]
20006268:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
2000626c:	3a01      	subs	r2, #1
2000626e:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
20006272:	9214      	str	r2, [sp, #80]	; 0x50
20006274:	930f      	str	r3, [sp, #60]	; 0x3c
20006276:	9512      	str	r5, [sp, #72]	; 0x48
20006278:	f7ff bac2 	b.w	20005800 <_dtoa_r+0x330>
2000627c:	9b08      	ldr	r3, [sp, #32]
2000627e:	3301      	adds	r3, #1
20006280:	9308      	str	r3, [sp, #32]
20006282:	2331      	movs	r3, #49	; 0x31
20006284:	f7ff bb43 	b.w	2000590e <_dtoa_r+0x43e>
20006288:	46b3      	mov	fp, r6
2000628a:	2339      	movs	r3, #57	; 0x39
2000628c:	462e      	mov	r6, r5
2000628e:	f80b 3b01 	strb.w	r3, [fp], #1
20006292:	463d      	mov	r5, r7
20006294:	e4c1      	b.n	20005c1a <_dtoa_r+0x74a>
20006296:	f04f 0800 	mov.w	r8, #0
2000629a:	4645      	mov	r5, r8
2000629c:	e5ab      	b.n	20005df6 <_dtoa_r+0x926>
2000629e:	f04f 0800 	mov.w	r8, #0
200062a2:	4645      	mov	r5, r8
200062a4:	f7ff bb66 	b.w	20005974 <_dtoa_r+0x4a4>
200062a8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
200062ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
200062ae:	9b14      	ldr	r3, [sp, #80]	; 0x50
200062b0:	46a9      	mov	r9, r5
200062b2:	3301      	adds	r3, #1
200062b4:	9308      	str	r3, [sp, #32]
200062b6:	e4d0      	b.n	20005c5a <_dtoa_r+0x78a>
200062b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
200062ba:	9a03      	ldr	r2, [sp, #12]
200062bc:	9308      	str	r3, [sp, #32]
200062be:	f7ff bb1f 	b.w	20005900 <_dtoa_r+0x430>
200062c2:	f47f aee2 	bne.w	2000608a <_dtoa_r+0xbba>
200062c6:	07da      	lsls	r2, r3, #31
200062c8:	f57f aedf 	bpl.w	2000608a <_dtoa_r+0xbba>
200062cc:	e6d8      	b.n	20006080 <_dtoa_r+0xbb0>
200062ce:	2b39      	cmp	r3, #57	; 0x39
200062d0:	d0da      	beq.n	20006288 <_dtoa_r+0xdb8>
200062d2:	f1b9 0f00 	cmp.w	r9, #0
200062d6:	f73f aed6 	bgt.w	20006086 <_dtoa_r+0xbb6>
200062da:	e6d6      	b.n	2000608a <_dtoa_r+0xbba>
200062dc:	4629      	mov	r1, r5
200062de:	2300      	movs	r3, #0
200062e0:	220a      	movs	r2, #10
200062e2:	4620      	mov	r0, r4
200062e4:	f001 f886 	bl	200073f4 <__multadd>
200062e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
200062ea:	4605      	mov	r5, r0
200062ec:	2b00      	cmp	r3, #0
200062ee:	f77f ace7 	ble.w	20005cc0 <_dtoa_r+0x7f0>
200062f2:	930a      	str	r3, [sp, #40]	; 0x28
200062f4:	e4ef      	b.n	20005cd6 <_dtoa_r+0x806>
200062f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
200062f8:	2b02      	cmp	r3, #2
200062fa:	dc02      	bgt.n	20006302 <_dtoa_r+0xe32>
200062fc:	f8cd 9020 	str.w	r9, [sp, #32]
20006300:	e5f3      	b.n	20005eea <_dtoa_r+0xa1a>
20006302:	9b11      	ldr	r3, [sp, #68]	; 0x44
20006304:	f8cd 9020 	str.w	r9, [sp, #32]
20006308:	930a      	str	r3, [sp, #40]	; 0x28
2000630a:	e563      	b.n	20005dd4 <_dtoa_r+0x904>
2000630c:	2302      	movs	r3, #2
2000630e:	930e      	str	r3, [sp, #56]	; 0x38
20006310:	f7ff ba53 	b.w	200057ba <_dtoa_r+0x2ea>
20006314:	4b10      	ldr	r3, [pc, #64]	; (20006358 <_dtoa_r+0xe88>)
20006316:	9303      	str	r3, [sp, #12]
20006318:	f7ff b915 	b.w	20005546 <_dtoa_r+0x76>
2000631c:	f43f ac2d 	beq.w	20005b7a <_dtoa_r+0x6aa>
20006320:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
20006324:	e424      	b.n	20005b70 <_dtoa_r+0x6a0>
20006326:	2500      	movs	r5, #0
20006328:	4620      	mov	r0, r4
2000632a:	4629      	mov	r1, r5
2000632c:	6465      	str	r5, [r4, #68]	; 0x44
2000632e:	f001 f831 	bl	20007394 <_Balloc>
20006332:	f04f 33ff 	mov.w	r3, #4294967295
20006336:	9311      	str	r3, [sp, #68]	; 0x44
20006338:	930a      	str	r3, [sp, #40]	; 0x28
2000633a:	2301      	movs	r3, #1
2000633c:	9003      	str	r0, [sp, #12]
2000633e:	9525      	str	r5, [sp, #148]	; 0x94
20006340:	6420      	str	r0, [r4, #64]	; 0x40
20006342:	930b      	str	r3, [sp, #44]	; 0x2c
20006344:	f7ff baed 	b.w	20005922 <_dtoa_r+0x452>
20006348:	20009030 	.word	0x20009030
2000634c:	40240000 	.word	0x40240000
20006350:	3fe00000 	.word	0x3fe00000
20006354:	401c0000 	.word	0x401c0000
20006358:	20008ffc 	.word	0x20008ffc

2000635c <__sflush_r>:
__sflush_r():
2000635c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
20006360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
20006364:	460d      	mov	r5, r1
20006366:	0711      	lsls	r1, r2, #28
20006368:	4680      	mov	r8, r0
2000636a:	d447      	bmi.n	200063fc <__sflush_r+0xa0>
2000636c:	686b      	ldr	r3, [r5, #4]
2000636e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
20006372:	2b00      	cmp	r3, #0
20006374:	81aa      	strh	r2, [r5, #12]
20006376:	dd5e      	ble.n	20006436 <__sflush_r+0xda>
20006378:	6aac      	ldr	r4, [r5, #40]	; 0x28
2000637a:	2c00      	cmp	r4, #0
2000637c:	d058      	beq.n	20006430 <__sflush_r+0xd4>
2000637e:	2300      	movs	r3, #0
20006380:	f8d8 6000 	ldr.w	r6, [r8]
20006384:	f8c8 3000 	str.w	r3, [r8]
20006388:	b293      	uxth	r3, r2
2000638a:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
2000638e:	d156      	bne.n	2000643e <__sflush_r+0xe2>
20006390:	2301      	movs	r3, #1
20006392:	4640      	mov	r0, r8
20006394:	69e9      	ldr	r1, [r5, #28]
20006396:	47a0      	blx	r4
20006398:	1c43      	adds	r3, r0, #1
2000639a:	d067      	beq.n	2000646c <__sflush_r+0x110>
2000639c:	89ab      	ldrh	r3, [r5, #12]
2000639e:	6aac      	ldr	r4, [r5, #40]	; 0x28
200063a0:	075f      	lsls	r7, r3, #29
200063a2:	d505      	bpl.n	200063b0 <__sflush_r+0x54>
200063a4:	686a      	ldr	r2, [r5, #4]
200063a6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
200063a8:	1a80      	subs	r0, r0, r2
200063aa:	b10b      	cbz	r3, 200063b0 <__sflush_r+0x54>
200063ac:	6beb      	ldr	r3, [r5, #60]	; 0x3c
200063ae:	1ac0      	subs	r0, r0, r3
200063b0:	4602      	mov	r2, r0
200063b2:	69e9      	ldr	r1, [r5, #28]
200063b4:	2300      	movs	r3, #0
200063b6:	4640      	mov	r0, r8
200063b8:	47a0      	blx	r4
200063ba:	1c41      	adds	r1, r0, #1
200063bc:	d141      	bne.n	20006442 <__sflush_r+0xe6>
200063be:	f8d8 3000 	ldr.w	r3, [r8]
200063c2:	2b00      	cmp	r3, #0
200063c4:	d03d      	beq.n	20006442 <__sflush_r+0xe6>
200063c6:	2b1d      	cmp	r3, #29
200063c8:	d001      	beq.n	200063ce <__sflush_r+0x72>
200063ca:	2b16      	cmp	r3, #22
200063cc:	d156      	bne.n	2000647c <__sflush_r+0x120>
200063ce:	2100      	movs	r1, #0
200063d0:	692a      	ldr	r2, [r5, #16]
200063d2:	89ab      	ldrh	r3, [r5, #12]
200063d4:	e9c5 2100 	strd	r2, r1, [r5]
200063d8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
200063dc:	81ab      	strh	r3, [r5, #12]
200063de:	6b29      	ldr	r1, [r5, #48]	; 0x30
200063e0:	f8c8 6000 	str.w	r6, [r8]
200063e4:	b321      	cbz	r1, 20006430 <__sflush_r+0xd4>
200063e6:	f105 0340 	add.w	r3, r5, #64	; 0x40
200063ea:	4299      	cmp	r1, r3
200063ec:	d002      	beq.n	200063f4 <__sflush_r+0x98>
200063ee:	4640      	mov	r0, r8
200063f0:	f000 f948 	bl	20006684 <_free_r>
200063f4:	2000      	movs	r0, #0
200063f6:	6328      	str	r0, [r5, #48]	; 0x30
200063f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
200063fc:	692f      	ldr	r7, [r5, #16]
200063fe:	b1bf      	cbz	r7, 20006430 <__sflush_r+0xd4>
20006400:	b293      	uxth	r3, r2
20006402:	079a      	lsls	r2, r3, #30
20006404:	bf18      	it	ne
20006406:	2300      	movne	r3, #0
20006408:	682e      	ldr	r6, [r5, #0]
2000640a:	bf08      	it	eq
2000640c:	696b      	ldreq	r3, [r5, #20]
2000640e:	602f      	str	r7, [r5, #0]
20006410:	1bf6      	subs	r6, r6, r7
20006412:	60ab      	str	r3, [r5, #8]
20006414:	e00a      	b.n	2000642c <__sflush_r+0xd0>
20006416:	4633      	mov	r3, r6
20006418:	463a      	mov	r2, r7
2000641a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
2000641c:	4640      	mov	r0, r8
2000641e:	69e9      	ldr	r1, [r5, #28]
20006420:	47a0      	blx	r4
20006422:	1e04      	subs	r4, r0, #0
20006424:	eba6 0604 	sub.w	r6, r6, r4
20006428:	4427      	add	r7, r4
2000642a:	dd17      	ble.n	2000645c <__sflush_r+0x100>
2000642c:	2e00      	cmp	r6, #0
2000642e:	dcf2      	bgt.n	20006416 <__sflush_r+0xba>
20006430:	2000      	movs	r0, #0
20006432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
20006436:	6beb      	ldr	r3, [r5, #60]	; 0x3c
20006438:	2b00      	cmp	r3, #0
2000643a:	dc9d      	bgt.n	20006378 <__sflush_r+0x1c>
2000643c:	e7f8      	b.n	20006430 <__sflush_r+0xd4>
2000643e:	6d28      	ldr	r0, [r5, #80]	; 0x50
20006440:	e7ae      	b.n	200063a0 <__sflush_r+0x44>
20006442:	2100      	movs	r1, #0
20006444:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
20006448:	692a      	ldr	r2, [r5, #16]
2000644a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
2000644e:	81ab      	strh	r3, [r5, #12]
20006450:	04db      	lsls	r3, r3, #19
20006452:	e9c5 2100 	strd	r2, r1, [r5]
20006456:	d5c2      	bpl.n	200063de <__sflush_r+0x82>
20006458:	6528      	str	r0, [r5, #80]	; 0x50
2000645a:	e7c0      	b.n	200063de <__sflush_r+0x82>
2000645c:	89ab      	ldrh	r3, [r5, #12]
2000645e:	f04f 30ff 	mov.w	r0, #4294967295
20006462:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20006466:	81ab      	strh	r3, [r5, #12]
20006468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2000646c:	f8d8 3000 	ldr.w	r3, [r8]
20006470:	2b00      	cmp	r3, #0
20006472:	d093      	beq.n	2000639c <__sflush_r+0x40>
20006474:	2b1d      	cmp	r3, #29
20006476:	d006      	beq.n	20006486 <__sflush_r+0x12a>
20006478:	2b16      	cmp	r3, #22
2000647a:	d004      	beq.n	20006486 <__sflush_r+0x12a>
2000647c:	89ab      	ldrh	r3, [r5, #12]
2000647e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20006482:	81ab      	strh	r3, [r5, #12]
20006484:	e7d5      	b.n	20006432 <__sflush_r+0xd6>
20006486:	f8c8 6000 	str.w	r6, [r8]
2000648a:	e7d1      	b.n	20006430 <__sflush_r+0xd4>

2000648c <_fflush_r>:
_fflush_r():
2000648c:	b538      	push	{r3, r4, r5, lr}
2000648e:	460c      	mov	r4, r1
20006490:	4605      	mov	r5, r0
20006492:	b108      	cbz	r0, 20006498 <_fflush_r+0xc>
20006494:	6b83      	ldr	r3, [r0, #56]	; 0x38
20006496:	b1a3      	cbz	r3, 200064c2 <_fflush_r+0x36>
20006498:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
2000649c:	b1b8      	cbz	r0, 200064ce <_fflush_r+0x42>
2000649e:	6e63      	ldr	r3, [r4, #100]	; 0x64
200064a0:	07db      	lsls	r3, r3, #31
200064a2:	d401      	bmi.n	200064a8 <_fflush_r+0x1c>
200064a4:	0581      	lsls	r1, r0, #22
200064a6:	d515      	bpl.n	200064d4 <_fflush_r+0x48>
200064a8:	4628      	mov	r0, r5
200064aa:	4621      	mov	r1, r4
200064ac:	f7ff ff56 	bl	2000635c <__sflush_r>
200064b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
200064b2:	4605      	mov	r5, r0
200064b4:	07da      	lsls	r2, r3, #31
200064b6:	d402      	bmi.n	200064be <_fflush_r+0x32>
200064b8:	89a3      	ldrh	r3, [r4, #12]
200064ba:	059b      	lsls	r3, r3, #22
200064bc:	d50e      	bpl.n	200064dc <_fflush_r+0x50>
200064be:	4628      	mov	r0, r5
200064c0:	bd38      	pop	{r3, r4, r5, pc}
200064c2:	f000 f83f 	bl	20006544 <__sinit>
200064c6:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
200064ca:	2800      	cmp	r0, #0
200064cc:	d1e7      	bne.n	2000649e <_fflush_r+0x12>
200064ce:	4605      	mov	r5, r0
200064d0:	4628      	mov	r0, r5
200064d2:	bd38      	pop	{r3, r4, r5, pc}
200064d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
200064d6:	f000 fb7d 	bl	20006bd4 <__retarget_lock_acquire_recursive>
200064da:	e7e5      	b.n	200064a8 <_fflush_r+0x1c>
200064dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
200064de:	f000 fb7b 	bl	20006bd8 <__retarget_lock_release_recursive>
200064e2:	4628      	mov	r0, r5
200064e4:	bd38      	pop	{r3, r4, r5, pc}
200064e6:	bf00      	nop

200064e8 <std>:
std():
200064e8:	2300      	movs	r3, #0
200064ea:	b510      	push	{r4, lr}
200064ec:	4604      	mov	r4, r0
200064ee:	e9c0 3300 	strd	r3, r3, [r0]
200064f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
200064f6:	8181      	strh	r1, [r0, #12]
200064f8:	81c2      	strh	r2, [r0, #14]
200064fa:	4619      	mov	r1, r3
200064fc:	6083      	str	r3, [r0, #8]
200064fe:	6643      	str	r3, [r0, #100]	; 0x64
20006500:	6183      	str	r3, [r0, #24]
20006502:	2208      	movs	r2, #8
20006504:	305c      	adds	r0, #92	; 0x5c
20006506:	f7fc ff6d 	bl	200033e4 <memset>
2000650a:	4807      	ldr	r0, [pc, #28]	; (20006528 <std+0x40>)
2000650c:	4907      	ldr	r1, [pc, #28]	; (2000652c <std+0x44>)
2000650e:	4a08      	ldr	r2, [pc, #32]	; (20006530 <std+0x48>)
20006510:	4b08      	ldr	r3, [pc, #32]	; (20006534 <std+0x4c>)
20006512:	e9c4 4007 	strd	r4, r0, [r4, #28]
20006516:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
2000651a:	62e3      	str	r3, [r4, #44]	; 0x2c
2000651c:	f104 0058 	add.w	r0, r4, #88	; 0x58
20006520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20006524:	f000 bb52 	b.w	20006bcc <__retarget_lock_init_recursive>
20006528:	20007e69 	.word	0x20007e69
2000652c:	20007e8d 	.word	0x20007e8d
20006530:	20007ecd 	.word	0x20007ecd
20006534:	20007eed 	.word	0x20007eed

20006538 <_cleanup_r>:
_cleanup_r():
20006538:	4901      	ldr	r1, [pc, #4]	; (20006540 <_cleanup_r+0x8>)
2000653a:	f000 bb1f 	b.w	20006b7c <_fwalk_reent>
2000653e:	bf00      	nop
20006540:	20008091 	.word	0x20008091

20006544 <__sinit>:
__sinit():
20006544:	b510      	push	{r4, lr}
20006546:	4604      	mov	r4, r0
20006548:	4813      	ldr	r0, [pc, #76]	; (20006598 <__sinit+0x54>)
2000654a:	f000 fb43 	bl	20006bd4 <__retarget_lock_acquire_recursive>
2000654e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
20006550:	b9ea      	cbnz	r2, 2000658e <__sinit+0x4a>
20006552:	2003      	movs	r0, #3
20006554:	4911      	ldr	r1, [pc, #68]	; (2000659c <__sinit+0x58>)
20006556:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
2000655a:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
2000655e:	e9c4 20b8 	strd	r2, r0, [r4, #736]	; 0x2e0
20006562:	63e1      	str	r1, [r4, #60]	; 0x3c
20006564:	6860      	ldr	r0, [r4, #4]
20006566:	2104      	movs	r1, #4
20006568:	f7ff ffbe 	bl	200064e8 <std>
2000656c:	68a0      	ldr	r0, [r4, #8]
2000656e:	2201      	movs	r2, #1
20006570:	2109      	movs	r1, #9
20006572:	f7ff ffb9 	bl	200064e8 <std>
20006576:	68e0      	ldr	r0, [r4, #12]
20006578:	2202      	movs	r2, #2
2000657a:	2112      	movs	r1, #18
2000657c:	f7ff ffb4 	bl	200064e8 <std>
20006580:	2301      	movs	r3, #1
20006582:	4805      	ldr	r0, [pc, #20]	; (20006598 <__sinit+0x54>)
20006584:	63a3      	str	r3, [r4, #56]	; 0x38
20006586:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2000658a:	f000 bb25 	b.w	20006bd8 <__retarget_lock_release_recursive>
2000658e:	4802      	ldr	r0, [pc, #8]	; (20006598 <__sinit+0x54>)
20006590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20006594:	f000 bb20 	b.w	20006bd8 <__retarget_lock_release_recursive>
20006598:	2000a864 	.word	0x2000a864
2000659c:	20006539 	.word	0x20006539

200065a0 <__sfp_lock_acquire>:
__sfp_lock_acquire():
200065a0:	4801      	ldr	r0, [pc, #4]	; (200065a8 <__sfp_lock_acquire+0x8>)
200065a2:	f000 bb17 	b.w	20006bd4 <__retarget_lock_acquire_recursive>
200065a6:	bf00      	nop
200065a8:	2000a878 	.word	0x2000a878

200065ac <__sfp_lock_release>:
__sfp_lock_release():
200065ac:	4801      	ldr	r0, [pc, #4]	; (200065b4 <__sfp_lock_release+0x8>)
200065ae:	f000 bb13 	b.w	20006bd8 <__retarget_lock_release_recursive>
200065b2:	bf00      	nop
200065b4:	2000a878 	.word	0x2000a878

200065b8 <__libc_fini_array>:
__libc_fini_array():
200065b8:	b538      	push	{r3, r4, r5, lr}
200065ba:	4b08      	ldr	r3, [pc, #32]	; (200065dc <__libc_fini_array+0x24>)
200065bc:	4d08      	ldr	r5, [pc, #32]	; (200065e0 <__libc_fini_array+0x28>)
200065be:	1b5b      	subs	r3, r3, r5
200065c0:	109c      	asrs	r4, r3, #2
200065c2:	d007      	beq.n	200065d4 <__libc_fini_array+0x1c>
200065c4:	3b04      	subs	r3, #4
200065c6:	441d      	add	r5, r3
200065c8:	3c01      	subs	r4, #1
200065ca:	f855 3904 	ldr.w	r3, [r5], #-4
200065ce:	4798      	blx	r3
200065d0:	2c00      	cmp	r4, #0
200065d2:	d1f9      	bne.n	200065c8 <__libc_fini_array+0x10>
200065d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
200065d8:	f002 be24 	b.w	20009224 <_fini>
200065dc:	2000923c 	.word	0x2000923c
200065e0:	20009238 	.word	0x20009238

200065e4 <_malloc_trim_r>:
_malloc_trim_r():
200065e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
200065e6:	460c      	mov	r4, r1
200065e8:	4f23      	ldr	r7, [pc, #140]	; (20006678 <_malloc_trim_r+0x94>)
200065ea:	4606      	mov	r6, r0
200065ec:	f000 fec6 	bl	2000737c <__malloc_lock>
200065f0:	68bb      	ldr	r3, [r7, #8]
200065f2:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
200065f6:	685d      	ldr	r5, [r3, #4]
200065f8:	310f      	adds	r1, #15
200065fa:	f025 0503 	bic.w	r5, r5, #3
200065fe:	194b      	adds	r3, r1, r5
20006600:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
20006604:	f023 030f 	bic.w	r3, r3, #15
20006608:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
2000660c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
20006610:	db07      	blt.n	20006622 <_malloc_trim_r+0x3e>
20006612:	2100      	movs	r1, #0
20006614:	4630      	mov	r0, r6
20006616:	f001 fc15 	bl	20007e44 <_sbrk_r>
2000661a:	68bb      	ldr	r3, [r7, #8]
2000661c:	442b      	add	r3, r5
2000661e:	4298      	cmp	r0, r3
20006620:	d004      	beq.n	2000662c <_malloc_trim_r+0x48>
20006622:	4630      	mov	r0, r6
20006624:	f000 feb0 	bl	20007388 <__malloc_unlock>
20006628:	2000      	movs	r0, #0
2000662a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2000662c:	4630      	mov	r0, r6
2000662e:	4261      	negs	r1, r4
20006630:	f001 fc08 	bl	20007e44 <_sbrk_r>
20006634:	3001      	adds	r0, #1
20006636:	d00d      	beq.n	20006654 <_malloc_trim_r+0x70>
20006638:	4a10      	ldr	r2, [pc, #64]	; (2000667c <_malloc_trim_r+0x98>)
2000663a:	68b9      	ldr	r1, [r7, #8]
2000663c:	6813      	ldr	r3, [r2, #0]
2000663e:	1b2d      	subs	r5, r5, r4
20006640:	f045 0501 	orr.w	r5, r5, #1
20006644:	4630      	mov	r0, r6
20006646:	1b1b      	subs	r3, r3, r4
20006648:	604d      	str	r5, [r1, #4]
2000664a:	6013      	str	r3, [r2, #0]
2000664c:	f000 fe9c 	bl	20007388 <__malloc_unlock>
20006650:	2001      	movs	r0, #1
20006652:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
20006654:	2100      	movs	r1, #0
20006656:	4630      	mov	r0, r6
20006658:	f001 fbf4 	bl	20007e44 <_sbrk_r>
2000665c:	68ba      	ldr	r2, [r7, #8]
2000665e:	1a83      	subs	r3, r0, r2
20006660:	2b0f      	cmp	r3, #15
20006662:	ddde      	ble.n	20006622 <_malloc_trim_r+0x3e>
20006664:	4906      	ldr	r1, [pc, #24]	; (20006680 <_malloc_trim_r+0x9c>)
20006666:	f043 0301 	orr.w	r3, r3, #1
2000666a:	680c      	ldr	r4, [r1, #0]
2000666c:	4903      	ldr	r1, [pc, #12]	; (2000667c <_malloc_trim_r+0x98>)
2000666e:	1b00      	subs	r0, r0, r4
20006670:	6053      	str	r3, [r2, #4]
20006672:	6008      	str	r0, [r1, #0]
20006674:	e7d5      	b.n	20006622 <_malloc_trim_r+0x3e>
20006676:	bf00      	nop
20006678:	200096a4 	.word	0x200096a4
2000667c:	2000a054 	.word	0x2000a054
20006680:	20009aac 	.word	0x20009aac

20006684 <_free_r>:
_free_r():
20006684:	2900      	cmp	r1, #0
20006686:	d05f      	beq.n	20006748 <_free_r+0xc4>
20006688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2000668a:	460c      	mov	r4, r1
2000668c:	4606      	mov	r6, r0
2000668e:	f000 fe75 	bl	2000737c <__malloc_lock>
20006692:	f854 3c04 	ldr.w	r3, [r4, #-4]
20006696:	f8df c1f4 	ldr.w	ip, [pc, #500]	; 2000688c <_free_r+0x208>
2000669a:	f1a4 0008 	sub.w	r0, r4, #8
2000669e:	f023 0101 	bic.w	r1, r3, #1
200066a2:	1842      	adds	r2, r0, r1
200066a4:	f8dc 7008 	ldr.w	r7, [ip, #8]
200066a8:	6855      	ldr	r5, [r2, #4]
200066aa:	4297      	cmp	r7, r2
200066ac:	f025 0503 	bic.w	r5, r5, #3
200066b0:	f000 8089 	beq.w	200067c6 <_free_r+0x142>
200066b4:	07df      	lsls	r7, r3, #31
200066b6:	6055      	str	r5, [r2, #4]
200066b8:	d434      	bmi.n	20006724 <_free_r+0xa0>
200066ba:	f854 7c08 	ldr.w	r7, [r4, #-8]
200066be:	f10c 0408 	add.w	r4, ip, #8
200066c2:	1bc0      	subs	r0, r0, r7
200066c4:	6883      	ldr	r3, [r0, #8]
200066c6:	4439      	add	r1, r7
200066c8:	42a3      	cmp	r3, r4
200066ca:	d06a      	beq.n	200067a2 <_free_r+0x11e>
200066cc:	1957      	adds	r7, r2, r5
200066ce:	687f      	ldr	r7, [r7, #4]
200066d0:	f8d0 e00c 	ldr.w	lr, [r0, #12]
200066d4:	f8c3 e00c 	str.w	lr, [r3, #12]
200066d8:	f8ce 3008 	str.w	r3, [lr, #8]
200066dc:	07fb      	lsls	r3, r7, #31
200066de:	f140 8097 	bpl.w	20006810 <_free_r+0x18c>
200066e2:	f041 0301 	orr.w	r3, r1, #1
200066e6:	6043      	str	r3, [r0, #4]
200066e8:	6011      	str	r1, [r2, #0]
200066ea:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
200066ee:	d234      	bcs.n	2000675a <_free_r+0xd6>
200066f0:	2201      	movs	r2, #1
200066f2:	f8dc 4004 	ldr.w	r4, [ip, #4]
200066f6:	08cb      	lsrs	r3, r1, #3
200066f8:	0949      	lsrs	r1, r1, #5
200066fa:	4413      	add	r3, r2
200066fc:	fa02 f101 	lsl.w	r1, r2, r1
20006700:	4321      	orrs	r1, r4
20006702:	eb0c 02c3 	add.w	r2, ip, r3, lsl #3
20006706:	f85c 4033 	ldr.w	r4, [ip, r3, lsl #3]
2000670a:	3a08      	subs	r2, #8
2000670c:	e9c0 4202 	strd	r4, r2, [r0, #8]
20006710:	f8cc 1004 	str.w	r1, [ip, #4]
20006714:	f84c 0033 	str.w	r0, [ip, r3, lsl #3]
20006718:	60e0      	str	r0, [r4, #12]
2000671a:	4630      	mov	r0, r6
2000671c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
20006720:	f000 be32 	b.w	20007388 <__malloc_unlock>
20006724:	1953      	adds	r3, r2, r5
20006726:	685b      	ldr	r3, [r3, #4]
20006728:	07df      	lsls	r7, r3, #31
2000672a:	d40e      	bmi.n	2000674a <_free_r+0xc6>
2000672c:	4429      	add	r1, r5
2000672e:	f10c 0408 	add.w	r4, ip, #8
20006732:	6893      	ldr	r3, [r2, #8]
20006734:	42a3      	cmp	r3, r4
20006736:	d073      	beq.n	20006820 <_free_r+0x19c>
20006738:	68d4      	ldr	r4, [r2, #12]
2000673a:	f041 0201 	orr.w	r2, r1, #1
2000673e:	60dc      	str	r4, [r3, #12]
20006740:	60a3      	str	r3, [r4, #8]
20006742:	6042      	str	r2, [r0, #4]
20006744:	5041      	str	r1, [r0, r1]
20006746:	e7d0      	b.n	200066ea <_free_r+0x66>
20006748:	4770      	bx	lr
2000674a:	f041 0301 	orr.w	r3, r1, #1
2000674e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
20006752:	f844 3c04 	str.w	r3, [r4, #-4]
20006756:	6011      	str	r1, [r2, #0]
20006758:	d3ca      	bcc.n	200066f0 <_free_r+0x6c>
2000675a:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
2000675e:	ea4f 2351 	mov.w	r3, r1, lsr #9
20006762:	d24a      	bcs.n	200067fa <_free_r+0x176>
20006764:	098b      	lsrs	r3, r1, #6
20006766:	f103 0539 	add.w	r5, r3, #57	; 0x39
2000676a:	00ed      	lsls	r5, r5, #3
2000676c:	f103 0238 	add.w	r2, r3, #56	; 0x38
20006770:	f85c 3005 	ldr.w	r3, [ip, r5]
20006774:	eb0c 0405 	add.w	r4, ip, r5
20006778:	3c08      	subs	r4, #8
2000677a:	429c      	cmp	r4, r3
2000677c:	d059      	beq.n	20006832 <_free_r+0x1ae>
2000677e:	685a      	ldr	r2, [r3, #4]
20006780:	f022 0203 	bic.w	r2, r2, #3
20006784:	428a      	cmp	r2, r1
20006786:	d902      	bls.n	2000678e <_free_r+0x10a>
20006788:	689b      	ldr	r3, [r3, #8]
2000678a:	429c      	cmp	r4, r3
2000678c:	d1f7      	bne.n	2000677e <_free_r+0xfa>
2000678e:	68dc      	ldr	r4, [r3, #12]
20006790:	e9c0 3402 	strd	r3, r4, [r0, #8]
20006794:	60a0      	str	r0, [r4, #8]
20006796:	60d8      	str	r0, [r3, #12]
20006798:	4630      	mov	r0, r6
2000679a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2000679e:	f000 bdf3 	b.w	20007388 <__malloc_unlock>
200067a2:	1953      	adds	r3, r2, r5
200067a4:	685b      	ldr	r3, [r3, #4]
200067a6:	07db      	lsls	r3, r3, #31
200067a8:	d466      	bmi.n	20006878 <_free_r+0x1f4>
200067aa:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
200067ae:	4429      	add	r1, r5
200067b0:	f041 0401 	orr.w	r4, r1, #1
200067b4:	60d3      	str	r3, [r2, #12]
200067b6:	609a      	str	r2, [r3, #8]
200067b8:	6044      	str	r4, [r0, #4]
200067ba:	5041      	str	r1, [r0, r1]
200067bc:	4630      	mov	r0, r6
200067be:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
200067c2:	f000 bde1 	b.w	20007388 <__malloc_unlock>
200067c6:	07db      	lsls	r3, r3, #31
200067c8:	4429      	add	r1, r5
200067ca:	d407      	bmi.n	200067dc <_free_r+0x158>
200067cc:	f854 4c08 	ldr.w	r4, [r4, #-8]
200067d0:	1b00      	subs	r0, r0, r4
200067d2:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
200067d6:	4421      	add	r1, r4
200067d8:	60d3      	str	r3, [r2, #12]
200067da:	609a      	str	r2, [r3, #8]
200067dc:	4b29      	ldr	r3, [pc, #164]	; (20006884 <_free_r+0x200>)
200067de:	f041 0201 	orr.w	r2, r1, #1
200067e2:	681b      	ldr	r3, [r3, #0]
200067e4:	6042      	str	r2, [r0, #4]
200067e6:	428b      	cmp	r3, r1
200067e8:	f8cc 0008 	str.w	r0, [ip, #8]
200067ec:	d895      	bhi.n	2000671a <_free_r+0x96>
200067ee:	4b26      	ldr	r3, [pc, #152]	; (20006888 <_free_r+0x204>)
200067f0:	4630      	mov	r0, r6
200067f2:	6819      	ldr	r1, [r3, #0]
200067f4:	f7ff fef6 	bl	200065e4 <_malloc_trim_r>
200067f8:	e78f      	b.n	2000671a <_free_r+0x96>
200067fa:	2b14      	cmp	r3, #20
200067fc:	d90a      	bls.n	20006814 <_free_r+0x190>
200067fe:	2b54      	cmp	r3, #84	; 0x54
20006800:	d821      	bhi.n	20006846 <_free_r+0x1c2>
20006802:	0b0b      	lsrs	r3, r1, #12
20006804:	f103 056f 	add.w	r5, r3, #111	; 0x6f
20006808:	00ed      	lsls	r5, r5, #3
2000680a:	f103 026e 	add.w	r2, r3, #110	; 0x6e
2000680e:	e7af      	b.n	20006770 <_free_r+0xec>
20006810:	4429      	add	r1, r5
20006812:	e78e      	b.n	20006732 <_free_r+0xae>
20006814:	f103 055c 	add.w	r5, r3, #92	; 0x5c
20006818:	00ed      	lsls	r5, r5, #3
2000681a:	f103 025b 	add.w	r2, r3, #91	; 0x5b
2000681e:	e7a7      	b.n	20006770 <_free_r+0xec>
20006820:	f041 0301 	orr.w	r3, r1, #1
20006824:	e9cc 0004 	strd	r0, r0, [ip, #16]
20006828:	e9c0 4402 	strd	r4, r4, [r0, #8]
2000682c:	6043      	str	r3, [r0, #4]
2000682e:	5041      	str	r1, [r0, r1]
20006830:	e773      	b.n	2000671a <_free_r+0x96>
20006832:	2501      	movs	r5, #1
20006834:	f8dc 1004 	ldr.w	r1, [ip, #4]
20006838:	1092      	asrs	r2, r2, #2
2000683a:	fa05 f202 	lsl.w	r2, r5, r2
2000683e:	430a      	orrs	r2, r1
20006840:	f8cc 2004 	str.w	r2, [ip, #4]
20006844:	e7a4      	b.n	20006790 <_free_r+0x10c>
20006846:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
2000684a:	d806      	bhi.n	2000685a <_free_r+0x1d6>
2000684c:	0bcb      	lsrs	r3, r1, #15
2000684e:	f103 0578 	add.w	r5, r3, #120	; 0x78
20006852:	00ed      	lsls	r5, r5, #3
20006854:	f103 0277 	add.w	r2, r3, #119	; 0x77
20006858:	e78a      	b.n	20006770 <_free_r+0xec>
2000685a:	f240 5254 	movw	r2, #1364	; 0x554
2000685e:	4293      	cmp	r3, r2
20006860:	d806      	bhi.n	20006870 <_free_r+0x1ec>
20006862:	0c8b      	lsrs	r3, r1, #18
20006864:	f103 057d 	add.w	r5, r3, #125	; 0x7d
20006868:	00ed      	lsls	r5, r5, #3
2000686a:	f103 027c 	add.w	r2, r3, #124	; 0x7c
2000686e:	e77f      	b.n	20006770 <_free_r+0xec>
20006870:	f44f 757e 	mov.w	r5, #1016	; 0x3f8
20006874:	227e      	movs	r2, #126	; 0x7e
20006876:	e77b      	b.n	20006770 <_free_r+0xec>
20006878:	f041 0301 	orr.w	r3, r1, #1
2000687c:	6043      	str	r3, [r0, #4]
2000687e:	6011      	str	r1, [r2, #0]
20006880:	e74b      	b.n	2000671a <_free_r+0x96>
20006882:	bf00      	nop
20006884:	20009ab0 	.word	0x20009ab0
20006888:	2000a084 	.word	0x2000a084
2000688c:	200096a4 	.word	0x200096a4

20006890 <__sfvwrite_r>:
__sfvwrite_r():
20006890:	6893      	ldr	r3, [r2, #8]
20006892:	2b00      	cmp	r3, #0
20006894:	f000 80bd 	beq.w	20006a12 <__sfvwrite_r+0x182>
20006898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2000689c:	4690      	mov	r8, r2
2000689e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
200068a2:	460c      	mov	r4, r1
200068a4:	0711      	lsls	r1, r2, #28
200068a6:	4681      	mov	r9, r0
200068a8:	b083      	sub	sp, #12
200068aa:	b293      	uxth	r3, r2
200068ac:	d527      	bpl.n	200068fe <__sfvwrite_r+0x6e>
200068ae:	6922      	ldr	r2, [r4, #16]
200068b0:	b32a      	cbz	r2, 200068fe <__sfvwrite_r+0x6e>
200068b2:	f013 0702 	ands.w	r7, r3, #2
200068b6:	f8d8 5000 	ldr.w	r5, [r8]
200068ba:	d02f      	beq.n	2000691c <__sfvwrite_r+0x8c>
200068bc:	f04f 0b00 	mov.w	fp, #0
200068c0:	465f      	mov	r7, fp
200068c2:	f8df a2b4 	ldr.w	sl, [pc, #692]	; 20006b78 <__sfvwrite_r+0x2e8>
200068c6:	2f00      	cmp	r7, #0
200068c8:	f000 8089 	beq.w	200069de <__sfvwrite_r+0x14e>
200068cc:	4557      	cmp	r7, sl
200068ce:	463b      	mov	r3, r7
200068d0:	465a      	mov	r2, fp
200068d2:	bf28      	it	cs
200068d4:	4653      	movcs	r3, sl
200068d6:	4648      	mov	r0, r9
200068d8:	69e1      	ldr	r1, [r4, #28]
200068da:	6a66      	ldr	r6, [r4, #36]	; 0x24
200068dc:	47b0      	blx	r6
200068de:	2800      	cmp	r0, #0
200068e0:	f340 808d 	ble.w	200069fe <__sfvwrite_r+0x16e>
200068e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
200068e8:	4483      	add	fp, r0
200068ea:	1a1b      	subs	r3, r3, r0
200068ec:	1a3f      	subs	r7, r7, r0
200068ee:	f8c8 3008 	str.w	r3, [r8, #8]
200068f2:	2b00      	cmp	r3, #0
200068f4:	d1e7      	bne.n	200068c6 <__sfvwrite_r+0x36>
200068f6:	2000      	movs	r0, #0
200068f8:	b003      	add	sp, #12
200068fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
200068fe:	4621      	mov	r1, r4
20006900:	4648      	mov	r0, r9
20006902:	f7fe fcdb 	bl	200052bc <__swsetup_r>
20006906:	2800      	cmp	r0, #0
20006908:	f040 8132 	bne.w	20006b70 <__sfvwrite_r+0x2e0>
2000690c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
20006910:	f8d8 5000 	ldr.w	r5, [r8]
20006914:	b293      	uxth	r3, r2
20006916:	f013 0702 	ands.w	r7, r3, #2
2000691a:	d1cf      	bne.n	200068bc <__sfvwrite_r+0x2c>
2000691c:	f013 0a01 	ands.w	sl, r3, #1
20006920:	d179      	bne.n	20006a16 <__sfvwrite_r+0x186>
20006922:	4656      	mov	r6, sl
20006924:	2e00      	cmp	r6, #0
20006926:	d056      	beq.n	200069d6 <__sfvwrite_r+0x146>
20006928:	059a      	lsls	r2, r3, #22
2000692a:	68a7      	ldr	r7, [r4, #8]
2000692c:	f140 80bd 	bpl.w	20006aaa <__sfvwrite_r+0x21a>
20006930:	42b7      	cmp	r7, r6
20006932:	46bb      	mov	fp, r7
20006934:	f200 80d2 	bhi.w	20006adc <__sfvwrite_r+0x24c>
20006938:	f413 6f90 	tst.w	r3, #1152	; 0x480
2000693c:	f000 80d0 	beq.w	20006ae0 <__sfvwrite_r+0x250>
20006940:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
20006944:	6822      	ldr	r2, [r4, #0]
20006946:	eb07 0747 	add.w	r7, r7, r7, lsl #1
2000694a:	eba2 0b01 	sub.w	fp, r2, r1
2000694e:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
20006952:	f10b 0001 	add.w	r0, fp, #1
20006956:	107f      	asrs	r7, r7, #1
20006958:	4430      	add	r0, r6
2000695a:	42b8      	cmp	r0, r7
2000695c:	463a      	mov	r2, r7
2000695e:	bf84      	itt	hi
20006960:	4607      	movhi	r7, r0
20006962:	463a      	movhi	r2, r7
20006964:	055b      	lsls	r3, r3, #21
20006966:	f140 80e7 	bpl.w	20006b38 <__sfvwrite_r+0x2a8>
2000696a:	4611      	mov	r1, r2
2000696c:	4648      	mov	r0, r9
2000696e:	f000 f9ad 	bl	20006ccc <_malloc_r>
20006972:	2800      	cmp	r0, #0
20006974:	f000 80f6 	beq.w	20006b64 <__sfvwrite_r+0x2d4>
20006978:	465a      	mov	r2, fp
2000697a:	6921      	ldr	r1, [r4, #16]
2000697c:	9000      	str	r0, [sp, #0]
2000697e:	f7fc fcbb 	bl	200032f8 <memcpy>
20006982:	89a2      	ldrh	r2, [r4, #12]
20006984:	9b00      	ldr	r3, [sp, #0]
20006986:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
2000698a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
2000698e:	81a2      	strh	r2, [r4, #12]
20006990:	eba7 020b 	sub.w	r2, r7, fp
20006994:	eb03 000b 	add.w	r0, r3, fp
20006998:	6167      	str	r7, [r4, #20]
2000699a:	46b3      	mov	fp, r6
2000699c:	4637      	mov	r7, r6
2000699e:	6123      	str	r3, [r4, #16]
200069a0:	6020      	str	r0, [r4, #0]
200069a2:	60a2      	str	r2, [r4, #8]
200069a4:	465a      	mov	r2, fp
200069a6:	4651      	mov	r1, sl
200069a8:	f000 fc7e 	bl	200072a8 <memmove>
200069ac:	68a2      	ldr	r2, [r4, #8]
200069ae:	6823      	ldr	r3, [r4, #0]
200069b0:	1bd2      	subs	r2, r2, r7
200069b2:	4637      	mov	r7, r6
200069b4:	2600      	movs	r6, #0
200069b6:	445b      	add	r3, fp
200069b8:	60a2      	str	r2, [r4, #8]
200069ba:	6023      	str	r3, [r4, #0]
200069bc:	f8d8 2008 	ldr.w	r2, [r8, #8]
200069c0:	44ba      	add	sl, r7
200069c2:	1bd7      	subs	r7, r2, r7
200069c4:	f8c8 7008 	str.w	r7, [r8, #8]
200069c8:	2f00      	cmp	r7, #0
200069ca:	d094      	beq.n	200068f6 <__sfvwrite_r+0x66>
200069cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200069d0:	b29b      	uxth	r3, r3
200069d2:	2e00      	cmp	r6, #0
200069d4:	d1a8      	bne.n	20006928 <__sfvwrite_r+0x98>
200069d6:	e9d5 a600 	ldrd	sl, r6, [r5]
200069da:	3508      	adds	r5, #8
200069dc:	e7a2      	b.n	20006924 <__sfvwrite_r+0x94>
200069de:	e9d5 b700 	ldrd	fp, r7, [r5]
200069e2:	3508      	adds	r5, #8
200069e4:	e76f      	b.n	200068c6 <__sfvwrite_r+0x36>
200069e6:	4629      	mov	r1, r5
200069e8:	465a      	mov	r2, fp
200069ea:	f000 fc5d 	bl	200072a8 <memmove>
200069ee:	6823      	ldr	r3, [r4, #0]
200069f0:	4621      	mov	r1, r4
200069f2:	445b      	add	r3, fp
200069f4:	4648      	mov	r0, r9
200069f6:	6023      	str	r3, [r4, #0]
200069f8:	f7ff fd48 	bl	2000648c <_fflush_r>
200069fc:	b358      	cbz	r0, 20006a56 <__sfvwrite_r+0x1c6>
200069fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20006a02:	f04f 30ff 	mov.w	r0, #4294967295
20006a06:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20006a0a:	81a3      	strh	r3, [r4, #12]
20006a0c:	b003      	add	sp, #12
20006a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20006a12:	2000      	movs	r0, #0
20006a14:	4770      	bx	lr
20006a16:	463e      	mov	r6, r7
20006a18:	46aa      	mov	sl, r5
20006a1a:	4638      	mov	r0, r7
20006a1c:	463d      	mov	r5, r7
20006a1e:	9700      	str	r7, [sp, #0]
20006a20:	b36e      	cbz	r6, 20006a7e <__sfvwrite_r+0x1ee>
20006a22:	2800      	cmp	r0, #0
20006a24:	d035      	beq.n	20006a92 <__sfvwrite_r+0x202>
20006a26:	9a00      	ldr	r2, [sp, #0]
20006a28:	6820      	ldr	r0, [r4, #0]
20006a2a:	6921      	ldr	r1, [r4, #16]
20006a2c:	42b2      	cmp	r2, r6
20006a2e:	bf28      	it	cs
20006a30:	4632      	movcs	r2, r6
20006a32:	4288      	cmp	r0, r1
20006a34:	6963      	ldr	r3, [r4, #20]
20006a36:	d904      	bls.n	20006a42 <__sfvwrite_r+0x1b2>
20006a38:	68a1      	ldr	r1, [r4, #8]
20006a3a:	eb03 0b01 	add.w	fp, r3, r1
20006a3e:	455a      	cmp	r2, fp
20006a40:	dcd1      	bgt.n	200069e6 <__sfvwrite_r+0x156>
20006a42:	4293      	cmp	r3, r2
20006a44:	dc6b      	bgt.n	20006b1e <__sfvwrite_r+0x28e>
20006a46:	462a      	mov	r2, r5
20006a48:	4648      	mov	r0, r9
20006a4a:	69e1      	ldr	r1, [r4, #28]
20006a4c:	6a67      	ldr	r7, [r4, #36]	; 0x24
20006a4e:	47b8      	blx	r7
20006a50:	f1b0 0b00 	subs.w	fp, r0, #0
20006a54:	ddd3      	ble.n	200069fe <__sfvwrite_r+0x16e>
20006a56:	9b00      	ldr	r3, [sp, #0]
20006a58:	ebb3 030b 	subs.w	r3, r3, fp
20006a5c:	9300      	str	r3, [sp, #0]
20006a5e:	d057      	beq.n	20006b10 <__sfvwrite_r+0x280>
20006a60:	2001      	movs	r0, #1
20006a62:	f8d8 3008 	ldr.w	r3, [r8, #8]
20006a66:	445d      	add	r5, fp
20006a68:	eba3 030b 	sub.w	r3, r3, fp
20006a6c:	eba6 060b 	sub.w	r6, r6, fp
20006a70:	f8c8 3008 	str.w	r3, [r8, #8]
20006a74:	2b00      	cmp	r3, #0
20006a76:	f43f af3e 	beq.w	200068f6 <__sfvwrite_r+0x66>
20006a7a:	2e00      	cmp	r6, #0
20006a7c:	d1d1      	bne.n	20006a22 <__sfvwrite_r+0x192>
20006a7e:	f10a 0308 	add.w	r3, sl, #8
20006a82:	f853 6c04 	ldr.w	r6, [r3, #-4]
20006a86:	469a      	mov	sl, r3
20006a88:	f853 5c08 	ldr.w	r5, [r3, #-8]
20006a8c:	3308      	adds	r3, #8
20006a8e:	2e00      	cmp	r6, #0
20006a90:	d0f7      	beq.n	20006a82 <__sfvwrite_r+0x1f2>
20006a92:	4632      	mov	r2, r6
20006a94:	210a      	movs	r1, #10
20006a96:	4628      	mov	r0, r5
20006a98:	f000 fbc6 	bl	20007228 <memchr>
20006a9c:	2800      	cmp	r0, #0
20006a9e:	d05e      	beq.n	20006b5e <__sfvwrite_r+0x2ce>
20006aa0:	3001      	adds	r0, #1
20006aa2:	1b43      	subs	r3, r0, r5
20006aa4:	461a      	mov	r2, r3
20006aa6:	9300      	str	r3, [sp, #0]
20006aa8:	e7be      	b.n	20006a28 <__sfvwrite_r+0x198>
20006aaa:	6820      	ldr	r0, [r4, #0]
20006aac:	6923      	ldr	r3, [r4, #16]
20006aae:	4298      	cmp	r0, r3
20006ab0:	d818      	bhi.n	20006ae4 <__sfvwrite_r+0x254>
20006ab2:	6962      	ldr	r2, [r4, #20]
20006ab4:	42b2      	cmp	r2, r6
20006ab6:	d815      	bhi.n	20006ae4 <__sfvwrite_r+0x254>
20006ab8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
20006abc:	42b3      	cmp	r3, r6
20006abe:	bf28      	it	cs
20006ac0:	4633      	movcs	r3, r6
20006ac2:	fb93 f3f2 	sdiv	r3, r3, r2
20006ac6:	6a67      	ldr	r7, [r4, #36]	; 0x24
20006ac8:	fb02 f303 	mul.w	r3, r2, r3
20006acc:	4648      	mov	r0, r9
20006ace:	4652      	mov	r2, sl
20006ad0:	69e1      	ldr	r1, [r4, #28]
20006ad2:	47b8      	blx	r7
20006ad4:	1e07      	subs	r7, r0, #0
20006ad6:	dd92      	ble.n	200069fe <__sfvwrite_r+0x16e>
20006ad8:	1bf6      	subs	r6, r6, r7
20006ada:	e76f      	b.n	200069bc <__sfvwrite_r+0x12c>
20006adc:	4637      	mov	r7, r6
20006ade:	46b3      	mov	fp, r6
20006ae0:	6820      	ldr	r0, [r4, #0]
20006ae2:	e75f      	b.n	200069a4 <__sfvwrite_r+0x114>
20006ae4:	42b7      	cmp	r7, r6
20006ae6:	bf28      	it	cs
20006ae8:	4637      	movcs	r7, r6
20006aea:	4651      	mov	r1, sl
20006aec:	463a      	mov	r2, r7
20006aee:	f000 fbdb 	bl	200072a8 <memmove>
20006af2:	68a3      	ldr	r3, [r4, #8]
20006af4:	6822      	ldr	r2, [r4, #0]
20006af6:	1bdb      	subs	r3, r3, r7
20006af8:	443a      	add	r2, r7
20006afa:	60a3      	str	r3, [r4, #8]
20006afc:	6022      	str	r2, [r4, #0]
20006afe:	2b00      	cmp	r3, #0
20006b00:	d1ea      	bne.n	20006ad8 <__sfvwrite_r+0x248>
20006b02:	4621      	mov	r1, r4
20006b04:	4648      	mov	r0, r9
20006b06:	f7ff fcc1 	bl	2000648c <_fflush_r>
20006b0a:	2800      	cmp	r0, #0
20006b0c:	d0e4      	beq.n	20006ad8 <__sfvwrite_r+0x248>
20006b0e:	e776      	b.n	200069fe <__sfvwrite_r+0x16e>
20006b10:	4621      	mov	r1, r4
20006b12:	4648      	mov	r0, r9
20006b14:	f7ff fcba 	bl	2000648c <_fflush_r>
20006b18:	2800      	cmp	r0, #0
20006b1a:	d0a2      	beq.n	20006a62 <__sfvwrite_r+0x1d2>
20006b1c:	e76f      	b.n	200069fe <__sfvwrite_r+0x16e>
20006b1e:	4629      	mov	r1, r5
20006b20:	4693      	mov	fp, r2
20006b22:	9201      	str	r2, [sp, #4]
20006b24:	f000 fbc0 	bl	200072a8 <memmove>
20006b28:	68a1      	ldr	r1, [r4, #8]
20006b2a:	6823      	ldr	r3, [r4, #0]
20006b2c:	9a01      	ldr	r2, [sp, #4]
20006b2e:	1a89      	subs	r1, r1, r2
20006b30:	441a      	add	r2, r3
20006b32:	60a1      	str	r1, [r4, #8]
20006b34:	6022      	str	r2, [r4, #0]
20006b36:	e78e      	b.n	20006a56 <__sfvwrite_r+0x1c6>
20006b38:	4648      	mov	r0, r9
20006b3a:	f000 ff5b 	bl	200079f4 <_realloc_r>
20006b3e:	4603      	mov	r3, r0
20006b40:	2800      	cmp	r0, #0
20006b42:	f47f af25 	bne.w	20006990 <__sfvwrite_r+0x100>
20006b46:	4648      	mov	r0, r9
20006b48:	6921      	ldr	r1, [r4, #16]
20006b4a:	f7ff fd9b 	bl	20006684 <_free_r>
20006b4e:	220c      	movs	r2, #12
20006b50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20006b54:	f8c9 2000 	str.w	r2, [r9]
20006b58:	f023 0380 	bic.w	r3, r3, #128	; 0x80
20006b5c:	e751      	b.n	20006a02 <__sfvwrite_r+0x172>
20006b5e:	1c72      	adds	r2, r6, #1
20006b60:	9200      	str	r2, [sp, #0]
20006b62:	e761      	b.n	20006a28 <__sfvwrite_r+0x198>
20006b64:	220c      	movs	r2, #12
20006b66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20006b6a:	f8c9 2000 	str.w	r2, [r9]
20006b6e:	e748      	b.n	20006a02 <__sfvwrite_r+0x172>
20006b70:	f04f 30ff 	mov.w	r0, #4294967295
20006b74:	e6c0      	b.n	200068f8 <__sfvwrite_r+0x68>
20006b76:	bf00      	nop
20006b78:	7ffffc00 	.word	0x7ffffc00

20006b7c <_fwalk_reent>:
_fwalk_reent():
20006b7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
20006b80:	4607      	mov	r7, r0
20006b82:	4688      	mov	r8, r1
20006b84:	f04f 0900 	mov.w	r9, #0
20006b88:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
20006b8c:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
20006b90:	3d01      	subs	r5, #1
20006b92:	d410      	bmi.n	20006bb6 <_fwalk_reent+0x3a>
20006b94:	89a3      	ldrh	r3, [r4, #12]
20006b96:	3d01      	subs	r5, #1
20006b98:	2b01      	cmp	r3, #1
20006b9a:	d908      	bls.n	20006bae <_fwalk_reent+0x32>
20006b9c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
20006ba0:	3301      	adds	r3, #1
20006ba2:	d004      	beq.n	20006bae <_fwalk_reent+0x32>
20006ba4:	4621      	mov	r1, r4
20006ba6:	4638      	mov	r0, r7
20006ba8:	47c0      	blx	r8
20006baa:	ea49 0900 	orr.w	r9, r9, r0
20006bae:	1c6b      	adds	r3, r5, #1
20006bb0:	f104 0468 	add.w	r4, r4, #104	; 0x68
20006bb4:	d1ee      	bne.n	20006b94 <_fwalk_reent+0x18>
20006bb6:	6836      	ldr	r6, [r6, #0]
20006bb8:	2e00      	cmp	r6, #0
20006bba:	d1e7      	bne.n	20006b8c <_fwalk_reent+0x10>
20006bbc:	4648      	mov	r0, r9
20006bbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
20006bc2:	bf00      	nop

20006bc4 <_localeconv_r>:
_localeconv_r():
20006bc4:	4800      	ldr	r0, [pc, #0]	; (20006bc8 <_localeconv_r+0x4>)
20006bc6:	4770      	bx	lr
20006bc8:	20009ba4 	.word	0x20009ba4

20006bcc <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
20006bcc:	4770      	bx	lr
20006bce:	bf00      	nop

20006bd0 <__retarget_lock_close_recursive>:
__retarget_lock_close_recursive():
20006bd0:	4770      	bx	lr
20006bd2:	bf00      	nop

20006bd4 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
20006bd4:	4770      	bx	lr
20006bd6:	bf00      	nop

20006bd8 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
20006bd8:	4770      	bx	lr
20006bda:	bf00      	nop

20006bdc <__swhatbuf_r>:
__swhatbuf_r():
20006bdc:	b570      	push	{r4, r5, r6, lr}
20006bde:	460c      	mov	r4, r1
20006be0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20006be4:	4615      	mov	r5, r2
20006be6:	2900      	cmp	r1, #0
20006be8:	461e      	mov	r6, r3
20006bea:	b096      	sub	sp, #88	; 0x58
20006bec:	db14      	blt.n	20006c18 <__swhatbuf_r+0x3c>
20006bee:	466a      	mov	r2, sp
20006bf0:	f001 fb38 	bl	20008264 <_fstat_r>
20006bf4:	2800      	cmp	r0, #0
20006bf6:	db0f      	blt.n	20006c18 <__swhatbuf_r+0x3c>
20006bf8:	9a01      	ldr	r2, [sp, #4]
20006bfa:	f44f 6380 	mov.w	r3, #1024	; 0x400
20006bfe:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
20006c02:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
20006c06:	fab2 f282 	clz	r2, r2
20006c0a:	f44f 6000 	mov.w	r0, #2048	; 0x800
20006c0e:	0952      	lsrs	r2, r2, #5
20006c10:	6032      	str	r2, [r6, #0]
20006c12:	602b      	str	r3, [r5, #0]
20006c14:	b016      	add	sp, #88	; 0x58
20006c16:	bd70      	pop	{r4, r5, r6, pc}
20006c18:	2300      	movs	r3, #0
20006c1a:	89a1      	ldrh	r1, [r4, #12]
20006c1c:	6033      	str	r3, [r6, #0]
20006c1e:	f011 0080 	ands.w	r0, r1, #128	; 0x80
20006c22:	d004      	beq.n	20006c2e <__swhatbuf_r+0x52>
20006c24:	2240      	movs	r2, #64	; 0x40
20006c26:	4618      	mov	r0, r3
20006c28:	602a      	str	r2, [r5, #0]
20006c2a:	b016      	add	sp, #88	; 0x58
20006c2c:	bd70      	pop	{r4, r5, r6, pc}
20006c2e:	f44f 6380 	mov.w	r3, #1024	; 0x400
20006c32:	602b      	str	r3, [r5, #0]
20006c34:	b016      	add	sp, #88	; 0x58
20006c36:	bd70      	pop	{r4, r5, r6, pc}

20006c38 <__smakebuf_r>:
__smakebuf_r():
20006c38:	b570      	push	{r4, r5, r6, lr}
20006c3a:	898b      	ldrh	r3, [r1, #12]
20006c3c:	460c      	mov	r4, r1
20006c3e:	079d      	lsls	r5, r3, #30
20006c40:	b082      	sub	sp, #8
20006c42:	d507      	bpl.n	20006c54 <__smakebuf_r+0x1c>
20006c44:	2201      	movs	r2, #1
20006c46:	f101 0343 	add.w	r3, r1, #67	; 0x43
20006c4a:	614a      	str	r2, [r1, #20]
20006c4c:	600b      	str	r3, [r1, #0]
20006c4e:	610b      	str	r3, [r1, #16]
20006c50:	b002      	add	sp, #8
20006c52:	bd70      	pop	{r4, r5, r6, pc}
20006c54:	ab01      	add	r3, sp, #4
20006c56:	466a      	mov	r2, sp
20006c58:	4606      	mov	r6, r0
20006c5a:	f7ff ffbf 	bl	20006bdc <__swhatbuf_r>
20006c5e:	9900      	ldr	r1, [sp, #0]
20006c60:	4605      	mov	r5, r0
20006c62:	4630      	mov	r0, r6
20006c64:	f000 f832 	bl	20006ccc <_malloc_r>
20006c68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20006c6c:	b170      	cbz	r0, 20006c8c <__smakebuf_r+0x54>
20006c6e:	4916      	ldr	r1, [pc, #88]	; (20006cc8 <__smakebuf_r+0x90>)
20006c70:	9a00      	ldr	r2, [sp, #0]
20006c72:	63f1      	str	r1, [r6, #60]	; 0x3c
20006c74:	9901      	ldr	r1, [sp, #4]
20006c76:	f043 0380 	orr.w	r3, r3, #128	; 0x80
20006c7a:	e9c4 0204 	strd	r0, r2, [r4, #16]
20006c7e:	81a3      	strh	r3, [r4, #12]
20006c80:	6020      	str	r0, [r4, #0]
20006c82:	b989      	cbnz	r1, 20006ca8 <__smakebuf_r+0x70>
20006c84:	432b      	orrs	r3, r5
20006c86:	81a3      	strh	r3, [r4, #12]
20006c88:	b002      	add	sp, #8
20006c8a:	bd70      	pop	{r4, r5, r6, pc}
20006c8c:	059a      	lsls	r2, r3, #22
20006c8e:	d4df      	bmi.n	20006c50 <__smakebuf_r+0x18>
20006c90:	2101      	movs	r1, #1
20006c92:	f023 0303 	bic.w	r3, r3, #3
20006c96:	f104 0243 	add.w	r2, r4, #67	; 0x43
20006c9a:	f043 0302 	orr.w	r3, r3, #2
20006c9e:	81a3      	strh	r3, [r4, #12]
20006ca0:	6161      	str	r1, [r4, #20]
20006ca2:	6022      	str	r2, [r4, #0]
20006ca4:	6122      	str	r2, [r4, #16]
20006ca6:	e7d3      	b.n	20006c50 <__smakebuf_r+0x18>
20006ca8:	4630      	mov	r0, r6
20006caa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
20006cae:	f001 faef 	bl	20008290 <_isatty_r>
20006cb2:	b910      	cbnz	r0, 20006cba <__smakebuf_r+0x82>
20006cb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20006cb8:	e7e4      	b.n	20006c84 <__smakebuf_r+0x4c>
20006cba:	89a2      	ldrh	r2, [r4, #12]
20006cbc:	f022 0203 	bic.w	r2, r2, #3
20006cc0:	f042 0201 	orr.w	r2, r2, #1
20006cc4:	b213      	sxth	r3, r2
20006cc6:	e7dd      	b.n	20006c84 <__smakebuf_r+0x4c>
20006cc8:	20006539 	.word	0x20006539

20006ccc <_malloc_r>:
_malloc_r():
20006ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
20006cd0:	f101 050b 	add.w	r5, r1, #11
20006cd4:	2d16      	cmp	r5, #22
20006cd6:	4606      	mov	r6, r0
20006cd8:	b083      	sub	sp, #12
20006cda:	d824      	bhi.n	20006d26 <_malloc_r+0x5a>
20006cdc:	2910      	cmp	r1, #16
20006cde:	f200 80b6 	bhi.w	20006e4e <_malloc_r+0x182>
20006ce2:	f000 fb4b 	bl	2000737c <__malloc_lock>
20006ce6:	2510      	movs	r5, #16
20006ce8:	2002      	movs	r0, #2
20006cea:	2318      	movs	r3, #24
20006cec:	f8df 84e8 	ldr.w	r8, [pc, #1256]	; 200071d8 <_malloc_r+0x50c>
20006cf0:	4443      	add	r3, r8
20006cf2:	685c      	ldr	r4, [r3, #4]
20006cf4:	f1a3 0208 	sub.w	r2, r3, #8
20006cf8:	4294      	cmp	r4, r2
20006cfa:	f000 80b4 	beq.w	20006e66 <_malloc_r+0x19a>
20006cfe:	6863      	ldr	r3, [r4, #4]
20006d00:	68e1      	ldr	r1, [r4, #12]
20006d02:	f023 0303 	bic.w	r3, r3, #3
20006d06:	4423      	add	r3, r4
20006d08:	685a      	ldr	r2, [r3, #4]
20006d0a:	68a5      	ldr	r5, [r4, #8]
20006d0c:	f042 0201 	orr.w	r2, r2, #1
20006d10:	60e9      	str	r1, [r5, #12]
20006d12:	4630      	mov	r0, r6
20006d14:	608d      	str	r5, [r1, #8]
20006d16:	3408      	adds	r4, #8
20006d18:	605a      	str	r2, [r3, #4]
20006d1a:	f000 fb35 	bl	20007388 <__malloc_unlock>
20006d1e:	4620      	mov	r0, r4
20006d20:	b003      	add	sp, #12
20006d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20006d26:	f035 0507 	bics.w	r5, r5, #7
20006d2a:	f100 8090 	bmi.w	20006e4e <_malloc_r+0x182>
20006d2e:	42a9      	cmp	r1, r5
20006d30:	f200 808d 	bhi.w	20006e4e <_malloc_r+0x182>
20006d34:	f000 fb22 	bl	2000737c <__malloc_lock>
20006d38:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
20006d3c:	f0c0 8185 	bcc.w	2000704a <_malloc_r+0x37e>
20006d40:	0a6b      	lsrs	r3, r5, #9
20006d42:	f000 808b 	beq.w	20006e5c <_malloc_r+0x190>
20006d46:	2b04      	cmp	r3, #4
20006d48:	f200 815b 	bhi.w	20007002 <_malloc_r+0x336>
20006d4c:	09ab      	lsrs	r3, r5, #6
20006d4e:	f103 0039 	add.w	r0, r3, #57	; 0x39
20006d52:	f103 0738 	add.w	r7, r3, #56	; 0x38
20006d56:	00c1      	lsls	r1, r0, #3
20006d58:	f8df 847c 	ldr.w	r8, [pc, #1148]	; 200071d8 <_malloc_r+0x50c>
20006d5c:	4441      	add	r1, r8
20006d5e:	684c      	ldr	r4, [r1, #4]
20006d60:	3908      	subs	r1, #8
20006d62:	42a1      	cmp	r1, r4
20006d64:	d106      	bne.n	20006d74 <_malloc_r+0xa8>
20006d66:	e00c      	b.n	20006d82 <_malloc_r+0xb6>
20006d68:	2a00      	cmp	r2, #0
20006d6a:	f280 8122 	bge.w	20006fb2 <_malloc_r+0x2e6>
20006d6e:	68e4      	ldr	r4, [r4, #12]
20006d70:	42a1      	cmp	r1, r4
20006d72:	d006      	beq.n	20006d82 <_malloc_r+0xb6>
20006d74:	6863      	ldr	r3, [r4, #4]
20006d76:	f023 0303 	bic.w	r3, r3, #3
20006d7a:	1b5a      	subs	r2, r3, r5
20006d7c:	2a0f      	cmp	r2, #15
20006d7e:	ddf3      	ble.n	20006d68 <_malloc_r+0x9c>
20006d80:	4638      	mov	r0, r7
20006d82:	f8d8 4010 	ldr.w	r4, [r8, #16]
20006d86:	f8df c454 	ldr.w	ip, [pc, #1108]	; 200071dc <_malloc_r+0x510>
20006d8a:	4564      	cmp	r4, ip
20006d8c:	d077      	beq.n	20006e7e <_malloc_r+0x1b2>
20006d8e:	6862      	ldr	r2, [r4, #4]
20006d90:	f022 0203 	bic.w	r2, r2, #3
20006d94:	1b53      	subs	r3, r2, r5
20006d96:	2b0f      	cmp	r3, #15
20006d98:	f300 8165 	bgt.w	20007066 <_malloc_r+0x39a>
20006d9c:	2b00      	cmp	r3, #0
20006d9e:	e9c8 cc04 	strd	ip, ip, [r8, #16]
20006da2:	f280 8156 	bge.w	20007052 <_malloc_r+0x386>
20006da6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
20006daa:	f080 8106 	bcs.w	20006fba <_malloc_r+0x2ee>
20006dae:	2101      	movs	r1, #1
20006db0:	08d3      	lsrs	r3, r2, #3
20006db2:	0952      	lsrs	r2, r2, #5
20006db4:	440b      	add	r3, r1
20006db6:	fa01 f202 	lsl.w	r2, r1, r2
20006dba:	f8d8 1004 	ldr.w	r1, [r8, #4]
20006dbe:	f858 7033 	ldr.w	r7, [r8, r3, lsl #3]
20006dc2:	eb08 0ec3 	add.w	lr, r8, r3, lsl #3
20006dc6:	430a      	orrs	r2, r1
20006dc8:	f1ae 0108 	sub.w	r1, lr, #8
20006dcc:	e9c4 7102 	strd	r7, r1, [r4, #8]
20006dd0:	f8c8 2004 	str.w	r2, [r8, #4]
20006dd4:	f848 4033 	str.w	r4, [r8, r3, lsl #3]
20006dd8:	60fc      	str	r4, [r7, #12]
20006dda:	2101      	movs	r1, #1
20006ddc:	1083      	asrs	r3, r0, #2
20006dde:	4099      	lsls	r1, r3
20006de0:	4291      	cmp	r1, r2
20006de2:	d853      	bhi.n	20006e8c <_malloc_r+0x1c0>
20006de4:	4211      	tst	r1, r2
20006de6:	d106      	bne.n	20006df6 <_malloc_r+0x12a>
20006de8:	f020 0003 	bic.w	r0, r0, #3
20006dec:	0049      	lsls	r1, r1, #1
20006dee:	4211      	tst	r1, r2
20006df0:	f100 0004 	add.w	r0, r0, #4
20006df4:	d0fa      	beq.n	20006dec <_malloc_r+0x120>
20006df6:	eb08 09c0 	add.w	r9, r8, r0, lsl #3
20006dfa:	464c      	mov	r4, r9
20006dfc:	4686      	mov	lr, r0
20006dfe:	68e7      	ldr	r7, [r4, #12]
20006e00:	42bc      	cmp	r4, r7
20006e02:	d107      	bne.n	20006e14 <_malloc_r+0x148>
20006e04:	e109      	b.n	2000701a <_malloc_r+0x34e>
20006e06:	2b00      	cmp	r3, #0
20006e08:	f280 8110 	bge.w	2000702c <_malloc_r+0x360>
20006e0c:	68ff      	ldr	r7, [r7, #12]
20006e0e:	42bc      	cmp	r4, r7
20006e10:	f000 8103 	beq.w	2000701a <_malloc_r+0x34e>
20006e14:	687a      	ldr	r2, [r7, #4]
20006e16:	f022 0203 	bic.w	r2, r2, #3
20006e1a:	1b53      	subs	r3, r2, r5
20006e1c:	2b0f      	cmp	r3, #15
20006e1e:	ddf2      	ble.n	20006e06 <_malloc_r+0x13a>
20006e20:	f045 0e01 	orr.w	lr, r5, #1
20006e24:	4630      	mov	r0, r6
20006e26:	e9d7 4102 	ldrd	r4, r1, [r7, #8]
20006e2a:	443d      	add	r5, r7
20006e2c:	f043 0601 	orr.w	r6, r3, #1
20006e30:	f8c7 e004 	str.w	lr, [r7, #4]
20006e34:	60e1      	str	r1, [r4, #12]
20006e36:	608c      	str	r4, [r1, #8]
20006e38:	e9c8 5504 	strd	r5, r5, [r8, #16]
20006e3c:	e9c5 cc02 	strd	ip, ip, [r5, #8]
20006e40:	606e      	str	r6, [r5, #4]
20006e42:	50bb      	str	r3, [r7, r2]
20006e44:	f000 faa0 	bl	20007388 <__malloc_unlock>
20006e48:	f107 0408 	add.w	r4, r7, #8
20006e4c:	e002      	b.n	20006e54 <_malloc_r+0x188>
20006e4e:	230c      	movs	r3, #12
20006e50:	2400      	movs	r4, #0
20006e52:	6033      	str	r3, [r6, #0]
20006e54:	4620      	mov	r0, r4
20006e56:	b003      	add	sp, #12
20006e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20006e5c:	f44f 7100 	mov.w	r1, #512	; 0x200
20006e60:	2040      	movs	r0, #64	; 0x40
20006e62:	273f      	movs	r7, #63	; 0x3f
20006e64:	e778      	b.n	20006d58 <_malloc_r+0x8c>
20006e66:	68dc      	ldr	r4, [r3, #12]
20006e68:	42a3      	cmp	r3, r4
20006e6a:	bf08      	it	eq
20006e6c:	3002      	addeq	r0, #2
20006e6e:	f47f af46 	bne.w	20006cfe <_malloc_r+0x32>
20006e72:	f8d8 4010 	ldr.w	r4, [r8, #16]
20006e76:	f8df c364 	ldr.w	ip, [pc, #868]	; 200071dc <_malloc_r+0x510>
20006e7a:	4564      	cmp	r4, ip
20006e7c:	d187      	bne.n	20006d8e <_malloc_r+0xc2>
20006e7e:	2101      	movs	r1, #1
20006e80:	f8d8 2004 	ldr.w	r2, [r8, #4]
20006e84:	1083      	asrs	r3, r0, #2
20006e86:	4099      	lsls	r1, r3
20006e88:	4291      	cmp	r1, r2
20006e8a:	d9ab      	bls.n	20006de4 <_malloc_r+0x118>
20006e8c:	f8d8 4008 	ldr.w	r4, [r8, #8]
20006e90:	6867      	ldr	r7, [r4, #4]
20006e92:	f027 0703 	bic.w	r7, r7, #3
20006e96:	42bd      	cmp	r5, r7
20006e98:	d802      	bhi.n	20006ea0 <_malloc_r+0x1d4>
20006e9a:	1b7b      	subs	r3, r7, r5
20006e9c:	2b0f      	cmp	r3, #15
20006e9e:	dc77      	bgt.n	20006f90 <_malloc_r+0x2c4>
20006ea0:	f8df 933c 	ldr.w	r9, [pc, #828]	; 200071e0 <_malloc_r+0x514>
20006ea4:	4bc8      	ldr	r3, [pc, #800]	; (200071c8 <_malloc_r+0x4fc>)
20006ea6:	f8d9 2000 	ldr.w	r2, [r9]
20006eaa:	681b      	ldr	r3, [r3, #0]
20006eac:	3201      	adds	r2, #1
20006eae:	442b      	add	r3, r5
20006eb0:	eb04 0a07 	add.w	sl, r4, r7
20006eb4:	f000 8124 	beq.w	20007100 <_malloc_r+0x434>
20006eb8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
20006ebc:	330f      	adds	r3, #15
20006ebe:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
20006ec2:	f02b 0b0f 	bic.w	fp, fp, #15
20006ec6:	4659      	mov	r1, fp
20006ec8:	4630      	mov	r0, r6
20006eca:	f000 ffbb 	bl	20007e44 <_sbrk_r>
20006ece:	1c41      	adds	r1, r0, #1
20006ed0:	4602      	mov	r2, r0
20006ed2:	f000 80e1 	beq.w	20007098 <_malloc_r+0x3cc>
20006ed6:	4582      	cmp	sl, r0
20006ed8:	f200 80dc 	bhi.w	20007094 <_malloc_r+0x3c8>
20006edc:	4bbb      	ldr	r3, [pc, #748]	; (200071cc <_malloc_r+0x500>)
20006ede:	6819      	ldr	r1, [r3, #0]
20006ee0:	4459      	add	r1, fp
20006ee2:	4608      	mov	r0, r1
20006ee4:	6019      	str	r1, [r3, #0]
20006ee6:	f000 8141 	beq.w	2000716c <_malloc_r+0x4a0>
20006eea:	f8d9 1000 	ldr.w	r1, [r9]
20006eee:	9301      	str	r3, [sp, #4]
20006ef0:	3101      	adds	r1, #1
20006ef2:	bf1b      	ittet	ne
20006ef4:	eba2 0a0a 	subne.w	sl, r2, sl
20006ef8:	4450      	addne	r0, sl
20006efa:	f8c9 2000 	streq.w	r2, [r9]
20006efe:	6018      	strne	r0, [r3, #0]
20006f00:	f012 0a07 	ands.w	sl, r2, #7
20006f04:	f000 810a 	beq.w	2000711c <_malloc_r+0x450>
20006f08:	f1ca 0108 	rsb	r1, sl, #8
20006f0c:	440a      	add	r2, r1
20006f0e:	f5ca 5180 	rsb	r1, sl, #4096	; 0x1000
20006f12:	4493      	add	fp, r2
20006f14:	3108      	adds	r1, #8
20006f16:	eba1 010b 	sub.w	r1, r1, fp
20006f1a:	f3c1 090b 	ubfx	r9, r1, #0, #12
20006f1e:	4649      	mov	r1, r9
20006f20:	4630      	mov	r0, r6
20006f22:	9200      	str	r2, [sp, #0]
20006f24:	f000 ff8e 	bl	20007e44 <_sbrk_r>
20006f28:	1c42      	adds	r2, r0, #1
20006f2a:	e9dd 2300 	ldrd	r2, r3, [sp]
20006f2e:	f000 8143 	beq.w	200071b8 <_malloc_r+0x4ec>
20006f32:	1a80      	subs	r0, r0, r2
20006f34:	eb00 0b09 	add.w	fp, r0, r9
20006f38:	6819      	ldr	r1, [r3, #0]
20006f3a:	f04b 0001 	orr.w	r0, fp, #1
20006f3e:	4449      	add	r1, r9
20006f40:	4544      	cmp	r4, r8
20006f42:	f8c8 2008 	str.w	r2, [r8, #8]
20006f46:	6019      	str	r1, [r3, #0]
20006f48:	6050      	str	r0, [r2, #4]
20006f4a:	f000 811c 	beq.w	20007186 <_malloc_r+0x4ba>
20006f4e:	2f0f      	cmp	r7, #15
20006f50:	f240 811b 	bls.w	2000718a <_malloc_r+0x4be>
20006f54:	f04f 0c05 	mov.w	ip, #5
20006f58:	6860      	ldr	r0, [r4, #4]
20006f5a:	3f0c      	subs	r7, #12
20006f5c:	f027 0707 	bic.w	r7, r7, #7
20006f60:	f000 0001 	and.w	r0, r0, #1
20006f64:	4338      	orrs	r0, r7
20006f66:	eb04 0e07 	add.w	lr, r4, r7
20006f6a:	2f0f      	cmp	r7, #15
20006f6c:	6060      	str	r0, [r4, #4]
20006f6e:	e9ce cc01 	strd	ip, ip, [lr, #4]
20006f72:	f200 8137 	bhi.w	200071e4 <_malloc_r+0x518>
20006f76:	4614      	mov	r4, r2
20006f78:	6850      	ldr	r0, [r2, #4]
20006f7a:	4b95      	ldr	r3, [pc, #596]	; (200071d0 <_malloc_r+0x504>)
20006f7c:	681a      	ldr	r2, [r3, #0]
20006f7e:	428a      	cmp	r2, r1
20006f80:	bf38      	it	cc
20006f82:	6019      	strcc	r1, [r3, #0]
20006f84:	4b93      	ldr	r3, [pc, #588]	; (200071d4 <_malloc_r+0x508>)
20006f86:	681a      	ldr	r2, [r3, #0]
20006f88:	428a      	cmp	r2, r1
20006f8a:	bf38      	it	cc
20006f8c:	6019      	strcc	r1, [r3, #0]
20006f8e:	e086      	b.n	2000709e <_malloc_r+0x3d2>
20006f90:	f045 0201 	orr.w	r2, r5, #1
20006f94:	f043 0301 	orr.w	r3, r3, #1
20006f98:	4425      	add	r5, r4
20006f9a:	6062      	str	r2, [r4, #4]
20006f9c:	4630      	mov	r0, r6
20006f9e:	f8c8 5008 	str.w	r5, [r8, #8]
20006fa2:	3408      	adds	r4, #8
20006fa4:	606b      	str	r3, [r5, #4]
20006fa6:	f000 f9ef 	bl	20007388 <__malloc_unlock>
20006faa:	4620      	mov	r0, r4
20006fac:	b003      	add	sp, #12
20006fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20006fb2:	4423      	add	r3, r4
20006fb4:	685a      	ldr	r2, [r3, #4]
20006fb6:	68e1      	ldr	r1, [r4, #12]
20006fb8:	e6a7      	b.n	20006d0a <_malloc_r+0x3e>
20006fba:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
20006fbe:	ea4f 2352 	mov.w	r3, r2, lsr #9
20006fc2:	d361      	bcc.n	20007088 <_malloc_r+0x3bc>
20006fc4:	2b14      	cmp	r3, #20
20006fc6:	f200 80ba 	bhi.w	2000713e <_malloc_r+0x472>
20006fca:	f103 015c 	add.w	r1, r3, #92	; 0x5c
20006fce:	00c9      	lsls	r1, r1, #3
20006fd0:	335b      	adds	r3, #91	; 0x5b
20006fd2:	eb08 0701 	add.w	r7, r8, r1
20006fd6:	f858 1001 	ldr.w	r1, [r8, r1]
20006fda:	3f08      	subs	r7, #8
20006fdc:	428f      	cmp	r7, r1
20006fde:	f000 8092 	beq.w	20007106 <_malloc_r+0x43a>
20006fe2:	684b      	ldr	r3, [r1, #4]
20006fe4:	f023 0303 	bic.w	r3, r3, #3
20006fe8:	4293      	cmp	r3, r2
20006fea:	d902      	bls.n	20006ff2 <_malloc_r+0x326>
20006fec:	6889      	ldr	r1, [r1, #8]
20006fee:	428f      	cmp	r7, r1
20006ff0:	d1f7      	bne.n	20006fe2 <_malloc_r+0x316>
20006ff2:	68cf      	ldr	r7, [r1, #12]
20006ff4:	f8d8 2004 	ldr.w	r2, [r8, #4]
20006ff8:	e9c4 1702 	strd	r1, r7, [r4, #8]
20006ffc:	60bc      	str	r4, [r7, #8]
20006ffe:	60cc      	str	r4, [r1, #12]
20007000:	e6eb      	b.n	20006dda <_malloc_r+0x10e>
20007002:	2b14      	cmp	r3, #20
20007004:	d959      	bls.n	200070ba <_malloc_r+0x3ee>
20007006:	2b54      	cmp	r3, #84	; 0x54
20007008:	f200 80a1 	bhi.w	2000714e <_malloc_r+0x482>
2000700c:	0b2b      	lsrs	r3, r5, #12
2000700e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
20007012:	f103 076e 	add.w	r7, r3, #110	; 0x6e
20007016:	00c1      	lsls	r1, r0, #3
20007018:	e69e      	b.n	20006d58 <_malloc_r+0x8c>
2000701a:	f10e 0e01 	add.w	lr, lr, #1
2000701e:	f01e 0f03 	tst.w	lr, #3
20007022:	f104 0408 	add.w	r4, r4, #8
20007026:	f47f aeea 	bne.w	20006dfe <_malloc_r+0x132>
2000702a:	e051      	b.n	200070d0 <_malloc_r+0x404>
2000702c:	463c      	mov	r4, r7
2000702e:	443a      	add	r2, r7
20007030:	6853      	ldr	r3, [r2, #4]
20007032:	68f9      	ldr	r1, [r7, #12]
20007034:	f854 5f08 	ldr.w	r5, [r4, #8]!
20007038:	f043 0301 	orr.w	r3, r3, #1
2000703c:	6053      	str	r3, [r2, #4]
2000703e:	4630      	mov	r0, r6
20007040:	60e9      	str	r1, [r5, #12]
20007042:	608d      	str	r5, [r1, #8]
20007044:	f000 f9a0 	bl	20007388 <__malloc_unlock>
20007048:	e704      	b.n	20006e54 <_malloc_r+0x188>
2000704a:	08e8      	lsrs	r0, r5, #3
2000704c:	f105 0308 	add.w	r3, r5, #8
20007050:	e64c      	b.n	20006cec <_malloc_r+0x20>
20007052:	4422      	add	r2, r4
20007054:	6853      	ldr	r3, [r2, #4]
20007056:	4630      	mov	r0, r6
20007058:	f043 0301 	orr.w	r3, r3, #1
2000705c:	6053      	str	r3, [r2, #4]
2000705e:	3408      	adds	r4, #8
20007060:	f000 f992 	bl	20007388 <__malloc_unlock>
20007064:	e6f6      	b.n	20006e54 <_malloc_r+0x188>
20007066:	f045 0701 	orr.w	r7, r5, #1
2000706a:	f043 0101 	orr.w	r1, r3, #1
2000706e:	4425      	add	r5, r4
20007070:	6067      	str	r7, [r4, #4]
20007072:	4630      	mov	r0, r6
20007074:	e9c8 5504 	strd	r5, r5, [r8, #16]
20007078:	e9c5 cc02 	strd	ip, ip, [r5, #8]
2000707c:	6069      	str	r1, [r5, #4]
2000707e:	50a3      	str	r3, [r4, r2]
20007080:	f000 f982 	bl	20007388 <__malloc_unlock>
20007084:	3408      	adds	r4, #8
20007086:	e6e5      	b.n	20006e54 <_malloc_r+0x188>
20007088:	0993      	lsrs	r3, r2, #6
2000708a:	f103 0139 	add.w	r1, r3, #57	; 0x39
2000708e:	00c9      	lsls	r1, r1, #3
20007090:	3338      	adds	r3, #56	; 0x38
20007092:	e79e      	b.n	20006fd2 <_malloc_r+0x306>
20007094:	4544      	cmp	r4, r8
20007096:	d064      	beq.n	20007162 <_malloc_r+0x496>
20007098:	f8d8 4008 	ldr.w	r4, [r8, #8]
2000709c:	6860      	ldr	r0, [r4, #4]
2000709e:	f020 0b03 	bic.w	fp, r0, #3
200070a2:	455d      	cmp	r5, fp
200070a4:	ebab 0305 	sub.w	r3, fp, r5
200070a8:	d802      	bhi.n	200070b0 <_malloc_r+0x3e4>
200070aa:	2b0f      	cmp	r3, #15
200070ac:	f73f af70 	bgt.w	20006f90 <_malloc_r+0x2c4>
200070b0:	4630      	mov	r0, r6
200070b2:	f000 f969 	bl	20007388 <__malloc_unlock>
200070b6:	2400      	movs	r4, #0
200070b8:	e6cc      	b.n	20006e54 <_malloc_r+0x188>
200070ba:	f103 005c 	add.w	r0, r3, #92	; 0x5c
200070be:	f103 075b 	add.w	r7, r3, #91	; 0x5b
200070c2:	00c1      	lsls	r1, r0, #3
200070c4:	e648      	b.n	20006d58 <_malloc_r+0x8c>
200070c6:	f859 3908 	ldr.w	r3, [r9], #-8
200070ca:	454b      	cmp	r3, r9
200070cc:	f040 80a9 	bne.w	20007222 <_malloc_r+0x556>
200070d0:	f010 0f03 	tst.w	r0, #3
200070d4:	f100 30ff 	add.w	r0, r0, #4294967295
200070d8:	d1f5      	bne.n	200070c6 <_malloc_r+0x3fa>
200070da:	f8d8 3004 	ldr.w	r3, [r8, #4]
200070de:	ea23 0301 	bic.w	r3, r3, r1
200070e2:	f8c8 3004 	str.w	r3, [r8, #4]
200070e6:	0049      	lsls	r1, r1, #1
200070e8:	4299      	cmp	r1, r3
200070ea:	f63f aecf 	bhi.w	20006e8c <_malloc_r+0x1c0>
200070ee:	b919      	cbnz	r1, 200070f8 <_malloc_r+0x42c>
200070f0:	e6cc      	b.n	20006e8c <_malloc_r+0x1c0>
200070f2:	0049      	lsls	r1, r1, #1
200070f4:	f10e 0e04 	add.w	lr, lr, #4
200070f8:	4219      	tst	r1, r3
200070fa:	d0fa      	beq.n	200070f2 <_malloc_r+0x426>
200070fc:	4670      	mov	r0, lr
200070fe:	e67a      	b.n	20006df6 <_malloc_r+0x12a>
20007100:	f103 0b10 	add.w	fp, r3, #16
20007104:	e6df      	b.n	20006ec6 <_malloc_r+0x1fa>
20007106:	f04f 0e01 	mov.w	lr, #1
2000710a:	109a      	asrs	r2, r3, #2
2000710c:	f8d8 3004 	ldr.w	r3, [r8, #4]
20007110:	fa0e f202 	lsl.w	r2, lr, r2
20007114:	431a      	orrs	r2, r3
20007116:	f8c8 2004 	str.w	r2, [r8, #4]
2000711a:	e76d      	b.n	20006ff8 <_malloc_r+0x32c>
2000711c:	eb02 010b 	add.w	r1, r2, fp
20007120:	4249      	negs	r1, r1
20007122:	f3c1 090b 	ubfx	r9, r1, #0, #12
20007126:	4649      	mov	r1, r9
20007128:	4630      	mov	r0, r6
2000712a:	9200      	str	r2, [sp, #0]
2000712c:	f000 fe8a 	bl	20007e44 <_sbrk_r>
20007130:	1c43      	adds	r3, r0, #1
20007132:	e9dd 2300 	ldrd	r2, r3, [sp]
20007136:	f47f aefc 	bne.w	20006f32 <_malloc_r+0x266>
2000713a:	46d1      	mov	r9, sl
2000713c:	e6fc      	b.n	20006f38 <_malloc_r+0x26c>
2000713e:	2b54      	cmp	r3, #84	; 0x54
20007140:	d826      	bhi.n	20007190 <_malloc_r+0x4c4>
20007142:	0b13      	lsrs	r3, r2, #12
20007144:	f103 016f 	add.w	r1, r3, #111	; 0x6f
20007148:	00c9      	lsls	r1, r1, #3
2000714a:	336e      	adds	r3, #110	; 0x6e
2000714c:	e741      	b.n	20006fd2 <_malloc_r+0x306>
2000714e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
20007152:	d826      	bhi.n	200071a2 <_malloc_r+0x4d6>
20007154:	0beb      	lsrs	r3, r5, #15
20007156:	f103 0078 	add.w	r0, r3, #120	; 0x78
2000715a:	f103 0777 	add.w	r7, r3, #119	; 0x77
2000715e:	00c1      	lsls	r1, r0, #3
20007160:	e5fa      	b.n	20006d58 <_malloc_r+0x8c>
20007162:	4b1a      	ldr	r3, [pc, #104]	; (200071cc <_malloc_r+0x500>)
20007164:	6818      	ldr	r0, [r3, #0]
20007166:	4458      	add	r0, fp
20007168:	6018      	str	r0, [r3, #0]
2000716a:	e6be      	b.n	20006eea <_malloc_r+0x21e>
2000716c:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
20007170:	f1bc 0f00 	cmp.w	ip, #0
20007174:	f47f aeb9 	bne.w	20006eea <_malloc_r+0x21e>
20007178:	f8d8 4008 	ldr.w	r4, [r8, #8]
2000717c:	44bb      	add	fp, r7
2000717e:	f04b 0001 	orr.w	r0, fp, #1
20007182:	6060      	str	r0, [r4, #4]
20007184:	e6f9      	b.n	20006f7a <_malloc_r+0x2ae>
20007186:	4614      	mov	r4, r2
20007188:	e6f7      	b.n	20006f7a <_malloc_r+0x2ae>
2000718a:	2301      	movs	r3, #1
2000718c:	6053      	str	r3, [r2, #4]
2000718e:	e78f      	b.n	200070b0 <_malloc_r+0x3e4>
20007190:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
20007194:	d832      	bhi.n	200071fc <_malloc_r+0x530>
20007196:	0bd3      	lsrs	r3, r2, #15
20007198:	f103 0178 	add.w	r1, r3, #120	; 0x78
2000719c:	00c9      	lsls	r1, r1, #3
2000719e:	3377      	adds	r3, #119	; 0x77
200071a0:	e717      	b.n	20006fd2 <_malloc_r+0x306>
200071a2:	f240 5254 	movw	r2, #1364	; 0x554
200071a6:	4293      	cmp	r3, r2
200071a8:	d832      	bhi.n	20007210 <_malloc_r+0x544>
200071aa:	0cab      	lsrs	r3, r5, #18
200071ac:	f103 007d 	add.w	r0, r3, #125	; 0x7d
200071b0:	f103 077c 	add.w	r7, r3, #124	; 0x7c
200071b4:	00c1      	lsls	r1, r0, #3
200071b6:	e5cf      	b.n	20006d58 <_malloc_r+0x8c>
200071b8:	f1aa 0a08 	sub.w	sl, sl, #8
200071bc:	44d3      	add	fp, sl
200071be:	f04f 0900 	mov.w	r9, #0
200071c2:	ebab 0b02 	sub.w	fp, fp, r2
200071c6:	e6b7      	b.n	20006f38 <_malloc_r+0x26c>
200071c8:	2000a084 	.word	0x2000a084
200071cc:	2000a054 	.word	0x2000a054
200071d0:	2000a07c 	.word	0x2000a07c
200071d4:	2000a080 	.word	0x2000a080
200071d8:	200096a4 	.word	0x200096a4
200071dc:	200096ac 	.word	0x200096ac
200071e0:	20009aac 	.word	0x20009aac
200071e4:	f104 0108 	add.w	r1, r4, #8
200071e8:	4630      	mov	r0, r6
200071ea:	9300      	str	r3, [sp, #0]
200071ec:	f7ff fa4a 	bl	20006684 <_free_r>
200071f0:	f8d8 4008 	ldr.w	r4, [r8, #8]
200071f4:	9b00      	ldr	r3, [sp, #0]
200071f6:	6860      	ldr	r0, [r4, #4]
200071f8:	6819      	ldr	r1, [r3, #0]
200071fa:	e6be      	b.n	20006f7a <_malloc_r+0x2ae>
200071fc:	f240 5154 	movw	r1, #1364	; 0x554
20007200:	428b      	cmp	r3, r1
20007202:	d80a      	bhi.n	2000721a <_malloc_r+0x54e>
20007204:	0c93      	lsrs	r3, r2, #18
20007206:	f103 017d 	add.w	r1, r3, #125	; 0x7d
2000720a:	00c9      	lsls	r1, r1, #3
2000720c:	337c      	adds	r3, #124	; 0x7c
2000720e:	e6e0      	b.n	20006fd2 <_malloc_r+0x306>
20007210:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
20007214:	207f      	movs	r0, #127	; 0x7f
20007216:	277e      	movs	r7, #126	; 0x7e
20007218:	e59e      	b.n	20006d58 <_malloc_r+0x8c>
2000721a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
2000721e:	237e      	movs	r3, #126	; 0x7e
20007220:	e6d7      	b.n	20006fd2 <_malloc_r+0x306>
20007222:	f8d8 3004 	ldr.w	r3, [r8, #4]
20007226:	e75e      	b.n	200070e6 <_malloc_r+0x41a>

20007228 <memchr>:
memchr():
20007228:	b470      	push	{r4, r5, r6}
2000722a:	0784      	lsls	r4, r0, #30
2000722c:	b2cd      	uxtb	r5, r1
2000722e:	d012      	beq.n	20007256 <memchr+0x2e>
20007230:	4603      	mov	r3, r0
20007232:	1e54      	subs	r4, r2, #1
20007234:	b92a      	cbnz	r2, 20007242 <memchr+0x1a>
20007236:	e00b      	b.n	20007250 <memchr+0x28>
20007238:	079a      	lsls	r2, r3, #30
2000723a:	4618      	mov	r0, r3
2000723c:	d00c      	beq.n	20007258 <memchr+0x30>
2000723e:	3c01      	subs	r4, #1
20007240:	d306      	bcc.n	20007250 <memchr+0x28>
20007242:	4618      	mov	r0, r3
20007244:	f813 2b01 	ldrb.w	r2, [r3], #1
20007248:	42aa      	cmp	r2, r5
2000724a:	d1f5      	bne.n	20007238 <memchr+0x10>
2000724c:	bc70      	pop	{r4, r5, r6}
2000724e:	4770      	bx	lr
20007250:	2000      	movs	r0, #0
20007252:	bc70      	pop	{r4, r5, r6}
20007254:	4770      	bx	lr
20007256:	4614      	mov	r4, r2
20007258:	2c03      	cmp	r4, #3
2000725a:	d80d      	bhi.n	20007278 <memchr+0x50>
2000725c:	2c00      	cmp	r4, #0
2000725e:	d0f7      	beq.n	20007250 <memchr+0x28>
20007260:	4602      	mov	r2, r0
20007262:	1903      	adds	r3, r0, r4
20007264:	e001      	b.n	2000726a <memchr+0x42>
20007266:	429a      	cmp	r2, r3
20007268:	d0f2      	beq.n	20007250 <memchr+0x28>
2000726a:	4610      	mov	r0, r2
2000726c:	f812 1b01 	ldrb.w	r1, [r2], #1
20007270:	42a9      	cmp	r1, r5
20007272:	d1f8      	bne.n	20007266 <memchr+0x3e>
20007274:	bc70      	pop	{r4, r5, r6}
20007276:	4770      	bx	lr
20007278:	4606      	mov	r6, r0
2000727a:	020a      	lsls	r2, r1, #8
2000727c:	b292      	uxth	r2, r2
2000727e:	432a      	orrs	r2, r5
20007280:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
20007284:	6833      	ldr	r3, [r6, #0]
20007286:	4630      	mov	r0, r6
20007288:	4053      	eors	r3, r2
2000728a:	f1a3 3101 	sub.w	r1, r3, #16843009	; 0x1010101
2000728e:	ea21 0303 	bic.w	r3, r1, r3
20007292:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
20007296:	f106 0604 	add.w	r6, r6, #4
2000729a:	d1e1      	bne.n	20007260 <memchr+0x38>
2000729c:	3c04      	subs	r4, #4
2000729e:	2c03      	cmp	r4, #3
200072a0:	4630      	mov	r0, r6
200072a2:	d8ef      	bhi.n	20007284 <memchr+0x5c>
200072a4:	e7da      	b.n	2000725c <memchr+0x34>
200072a6:	bf00      	nop

200072a8 <memmove>:
memmove():
200072a8:	4288      	cmp	r0, r1
200072aa:	b4f0      	push	{r4, r5, r6, r7}
200072ac:	d90d      	bls.n	200072ca <memmove+0x22>
200072ae:	188b      	adds	r3, r1, r2
200072b0:	4283      	cmp	r3, r0
200072b2:	d90a      	bls.n	200072ca <memmove+0x22>
200072b4:	1884      	adds	r4, r0, r2
200072b6:	b132      	cbz	r2, 200072c6 <memmove+0x1e>
200072b8:	4622      	mov	r2, r4
200072ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
200072be:	4299      	cmp	r1, r3
200072c0:	f802 4d01 	strb.w	r4, [r2, #-1]!
200072c4:	d1f9      	bne.n	200072ba <memmove+0x12>
200072c6:	bcf0      	pop	{r4, r5, r6, r7}
200072c8:	4770      	bx	lr
200072ca:	2a0f      	cmp	r2, #15
200072cc:	d80e      	bhi.n	200072ec <memmove+0x44>
200072ce:	4603      	mov	r3, r0
200072d0:	1e54      	subs	r4, r2, #1
200072d2:	2a00      	cmp	r2, #0
200072d4:	d0f7      	beq.n	200072c6 <memmove+0x1e>
200072d6:	3401      	adds	r4, #1
200072d8:	440c      	add	r4, r1
200072da:	3b01      	subs	r3, #1
200072dc:	f811 2b01 	ldrb.w	r2, [r1], #1
200072e0:	42a1      	cmp	r1, r4
200072e2:	f803 2f01 	strb.w	r2, [r3, #1]!
200072e6:	d1f9      	bne.n	200072dc <memmove+0x34>
200072e8:	bcf0      	pop	{r4, r5, r6, r7}
200072ea:	4770      	bx	lr
200072ec:	ea40 0301 	orr.w	r3, r0, r1
200072f0:	079b      	lsls	r3, r3, #30
200072f2:	d13e      	bne.n	20007372 <memmove+0xca>
200072f4:	f1a2 0310 	sub.w	r3, r2, #16
200072f8:	f023 040f 	bic.w	r4, r3, #15
200072fc:	f101 0720 	add.w	r7, r1, #32
20007300:	4427      	add	r7, r4
20007302:	091b      	lsrs	r3, r3, #4
20007304:	f101 0410 	add.w	r4, r1, #16
20007308:	f100 0510 	add.w	r5, r0, #16
2000730c:	f854 6c10 	ldr.w	r6, [r4, #-16]
20007310:	3410      	adds	r4, #16
20007312:	f845 6c10 	str.w	r6, [r5, #-16]
20007316:	f854 6c1c 	ldr.w	r6, [r4, #-28]
2000731a:	3510      	adds	r5, #16
2000731c:	f845 6c1c 	str.w	r6, [r5, #-28]
20007320:	f854 6c18 	ldr.w	r6, [r4, #-24]
20007324:	f845 6c18 	str.w	r6, [r5, #-24]
20007328:	f854 6c14 	ldr.w	r6, [r4, #-20]
2000732c:	42bc      	cmp	r4, r7
2000732e:	f845 6c14 	str.w	r6, [r5, #-20]
20007332:	d1eb      	bne.n	2000730c <memmove+0x64>
20007334:	3301      	adds	r3, #1
20007336:	f012 0f0c 	tst.w	r2, #12
2000733a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
2000733e:	f002 040f 	and.w	r4, r2, #15
20007342:	eb00 1303 	add.w	r3, r0, r3, lsl #4
20007346:	d017      	beq.n	20007378 <memmove+0xd0>
20007348:	460e      	mov	r6, r1
2000734a:	3c04      	subs	r4, #4
2000734c:	f024 0c03 	bic.w	ip, r4, #3
20007350:	08a5      	lsrs	r5, r4, #2
20007352:	449c      	add	ip, r3
20007354:	1f1c      	subs	r4, r3, #4
20007356:	f856 7b04 	ldr.w	r7, [r6], #4
2000735a:	f844 7f04 	str.w	r7, [r4, #4]!
2000735e:	4564      	cmp	r4, ip
20007360:	d1f9      	bne.n	20007356 <memmove+0xae>
20007362:	1c6c      	adds	r4, r5, #1
20007364:	eb03 0384 	add.w	r3, r3, r4, lsl #2
20007368:	eb01 0184 	add.w	r1, r1, r4, lsl #2
2000736c:	f002 0203 	and.w	r2, r2, #3
20007370:	e7ae      	b.n	200072d0 <memmove+0x28>
20007372:	4603      	mov	r3, r0
20007374:	1e54      	subs	r4, r2, #1
20007376:	e7ae      	b.n	200072d6 <memmove+0x2e>
20007378:	4622      	mov	r2, r4
2000737a:	e7a9      	b.n	200072d0 <memmove+0x28>

2000737c <__malloc_lock>:
__malloc_lock():
2000737c:	4801      	ldr	r0, [pc, #4]	; (20007384 <__malloc_lock+0x8>)
2000737e:	f7ff bc29 	b.w	20006bd4 <__retarget_lock_acquire_recursive>
20007382:	bf00      	nop
20007384:	2000a868 	.word	0x2000a868

20007388 <__malloc_unlock>:
__malloc_unlock():
20007388:	4801      	ldr	r0, [pc, #4]	; (20007390 <__malloc_unlock+0x8>)
2000738a:	f7ff bc25 	b.w	20006bd8 <__retarget_lock_release_recursive>
2000738e:	bf00      	nop
20007390:	2000a868 	.word	0x2000a868

20007394 <_Balloc>:
_Balloc():
20007394:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
20007396:	b570      	push	{r4, r5, r6, lr}
20007398:	4605      	mov	r5, r0
2000739a:	460c      	mov	r4, r1
2000739c:	b14b      	cbz	r3, 200073b2 <_Balloc+0x1e>
2000739e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
200073a2:	b180      	cbz	r0, 200073c6 <_Balloc+0x32>
200073a4:	6802      	ldr	r2, [r0, #0]
200073a6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
200073aa:	2300      	movs	r3, #0
200073ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
200073b0:	bd70      	pop	{r4, r5, r6, pc}
200073b2:	2221      	movs	r2, #33	; 0x21
200073b4:	2104      	movs	r1, #4
200073b6:	f000 fe29 	bl	2000800c <_calloc_r>
200073ba:	4603      	mov	r3, r0
200073bc:	64e8      	str	r0, [r5, #76]	; 0x4c
200073be:	2800      	cmp	r0, #0
200073c0:	d1ed      	bne.n	2000739e <_Balloc+0xa>
200073c2:	2000      	movs	r0, #0
200073c4:	bd70      	pop	{r4, r5, r6, pc}
200073c6:	2101      	movs	r1, #1
200073c8:	fa01 f604 	lsl.w	r6, r1, r4
200073cc:	1d72      	adds	r2, r6, #5
200073ce:	4628      	mov	r0, r5
200073d0:	0092      	lsls	r2, r2, #2
200073d2:	f000 fe1b 	bl	2000800c <_calloc_r>
200073d6:	2800      	cmp	r0, #0
200073d8:	d0f3      	beq.n	200073c2 <_Balloc+0x2e>
200073da:	e9c0 4601 	strd	r4, r6, [r0, #4]
200073de:	e7e4      	b.n	200073aa <_Balloc+0x16>

200073e0 <_Bfree>:
_Bfree():
200073e0:	b131      	cbz	r1, 200073f0 <_Bfree+0x10>
200073e2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
200073e4:	684a      	ldr	r2, [r1, #4]
200073e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
200073ea:	6008      	str	r0, [r1, #0]
200073ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
200073f0:	4770      	bx	lr
200073f2:	bf00      	nop

200073f4 <__multadd>:
__multadd():
200073f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
200073f8:	4680      	mov	r8, r0
200073fa:	461c      	mov	r4, r3
200073fc:	2000      	movs	r0, #0
200073fe:	460f      	mov	r7, r1
20007400:	690e      	ldr	r6, [r1, #16]
20007402:	3114      	adds	r1, #20
20007404:	680d      	ldr	r5, [r1, #0]
20007406:	3001      	adds	r0, #1
20007408:	b2ab      	uxth	r3, r5
2000740a:	fb02 4303 	mla	r3, r2, r3, r4
2000740e:	0c2c      	lsrs	r4, r5, #16
20007410:	0c1d      	lsrs	r5, r3, #16
20007412:	fb02 5404 	mla	r4, r2, r4, r5
20007416:	b29b      	uxth	r3, r3
20007418:	eb03 4304 	add.w	r3, r3, r4, lsl #16
2000741c:	4286      	cmp	r6, r0
2000741e:	f841 3b04 	str.w	r3, [r1], #4
20007422:	ea4f 4414 	mov.w	r4, r4, lsr #16
20007426:	dced      	bgt.n	20007404 <__multadd+0x10>
20007428:	b13c      	cbz	r4, 2000743a <__multadd+0x46>
2000742a:	68bb      	ldr	r3, [r7, #8]
2000742c:	42b3      	cmp	r3, r6
2000742e:	dd07      	ble.n	20007440 <__multadd+0x4c>
20007430:	eb07 0386 	add.w	r3, r7, r6, lsl #2
20007434:	3601      	adds	r6, #1
20007436:	615c      	str	r4, [r3, #20]
20007438:	613e      	str	r6, [r7, #16]
2000743a:	4638      	mov	r0, r7
2000743c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
20007440:	6879      	ldr	r1, [r7, #4]
20007442:	4640      	mov	r0, r8
20007444:	3101      	adds	r1, #1
20007446:	f7ff ffa5 	bl	20007394 <_Balloc>
2000744a:	4605      	mov	r5, r0
2000744c:	693a      	ldr	r2, [r7, #16]
2000744e:	f107 010c 	add.w	r1, r7, #12
20007452:	3202      	adds	r2, #2
20007454:	0092      	lsls	r2, r2, #2
20007456:	300c      	adds	r0, #12
20007458:	f7fb ff4e 	bl	200032f8 <memcpy>
2000745c:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
20007460:	687a      	ldr	r2, [r7, #4]
20007462:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
20007466:	6039      	str	r1, [r7, #0]
20007468:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
2000746c:	462f      	mov	r7, r5
2000746e:	e7df      	b.n	20007430 <__multadd+0x3c>

20007470 <__hi0bits>:
__hi0bits():
20007470:	0c02      	lsrs	r2, r0, #16
20007472:	0412      	lsls	r2, r2, #16
20007474:	4603      	mov	r3, r0
20007476:	b9ca      	cbnz	r2, 200074ac <__hi0bits+0x3c>
20007478:	0403      	lsls	r3, r0, #16
2000747a:	2010      	movs	r0, #16
2000747c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
20007480:	bf04      	itt	eq
20007482:	021b      	lsleq	r3, r3, #8
20007484:	3008      	addeq	r0, #8
20007486:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
2000748a:	bf04      	itt	eq
2000748c:	011b      	lsleq	r3, r3, #4
2000748e:	3004      	addeq	r0, #4
20007490:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
20007494:	bf04      	itt	eq
20007496:	009b      	lsleq	r3, r3, #2
20007498:	3002      	addeq	r0, #2
2000749a:	2b00      	cmp	r3, #0
2000749c:	db05      	blt.n	200074aa <__hi0bits+0x3a>
2000749e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
200074a2:	f100 0001 	add.w	r0, r0, #1
200074a6:	bf08      	it	eq
200074a8:	2020      	moveq	r0, #32
200074aa:	4770      	bx	lr
200074ac:	2000      	movs	r0, #0
200074ae:	e7e5      	b.n	2000747c <__hi0bits+0xc>

200074b0 <__lo0bits>:
__lo0bits():
200074b0:	6803      	ldr	r3, [r0, #0]
200074b2:	4601      	mov	r1, r0
200074b4:	f013 0207 	ands.w	r2, r3, #7
200074b8:	d007      	beq.n	200074ca <__lo0bits+0x1a>
200074ba:	07da      	lsls	r2, r3, #31
200074bc:	d420      	bmi.n	20007500 <__lo0bits+0x50>
200074be:	0798      	lsls	r0, r3, #30
200074c0:	d522      	bpl.n	20007508 <__lo0bits+0x58>
200074c2:	085b      	lsrs	r3, r3, #1
200074c4:	2001      	movs	r0, #1
200074c6:	600b      	str	r3, [r1, #0]
200074c8:	4770      	bx	lr
200074ca:	b298      	uxth	r0, r3
200074cc:	b1a8      	cbz	r0, 200074fa <__lo0bits+0x4a>
200074ce:	4610      	mov	r0, r2
200074d0:	f013 0fff 	tst.w	r3, #255	; 0xff
200074d4:	bf04      	itt	eq
200074d6:	0a1b      	lsreq	r3, r3, #8
200074d8:	3008      	addeq	r0, #8
200074da:	071a      	lsls	r2, r3, #28
200074dc:	bf04      	itt	eq
200074de:	091b      	lsreq	r3, r3, #4
200074e0:	3004      	addeq	r0, #4
200074e2:	079a      	lsls	r2, r3, #30
200074e4:	bf04      	itt	eq
200074e6:	089b      	lsreq	r3, r3, #2
200074e8:	3002      	addeq	r0, #2
200074ea:	07da      	lsls	r2, r3, #31
200074ec:	d403      	bmi.n	200074f6 <__lo0bits+0x46>
200074ee:	085b      	lsrs	r3, r3, #1
200074f0:	f100 0001 	add.w	r0, r0, #1
200074f4:	d006      	beq.n	20007504 <__lo0bits+0x54>
200074f6:	600b      	str	r3, [r1, #0]
200074f8:	4770      	bx	lr
200074fa:	2010      	movs	r0, #16
200074fc:	0c1b      	lsrs	r3, r3, #16
200074fe:	e7e7      	b.n	200074d0 <__lo0bits+0x20>
20007500:	2000      	movs	r0, #0
20007502:	4770      	bx	lr
20007504:	2020      	movs	r0, #32
20007506:	4770      	bx	lr
20007508:	089b      	lsrs	r3, r3, #2
2000750a:	2002      	movs	r0, #2
2000750c:	600b      	str	r3, [r1, #0]
2000750e:	4770      	bx	lr

20007510 <__i2b>:
__i2b():
20007510:	b510      	push	{r4, lr}
20007512:	460c      	mov	r4, r1
20007514:	2101      	movs	r1, #1
20007516:	f7ff ff3d 	bl	20007394 <_Balloc>
2000751a:	2201      	movs	r2, #1
2000751c:	e9c0 2404 	strd	r2, r4, [r0, #16]
20007520:	bd10      	pop	{r4, pc}
20007522:	bf00      	nop

20007524 <__multiply>:
__multiply():
20007524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
20007528:	690d      	ldr	r5, [r1, #16]
2000752a:	6917      	ldr	r7, [r2, #16]
2000752c:	460e      	mov	r6, r1
2000752e:	42bd      	cmp	r5, r7
20007530:	4614      	mov	r4, r2
20007532:	b085      	sub	sp, #20
20007534:	db05      	blt.n	20007542 <__multiply+0x1e>
20007536:	463a      	mov	r2, r7
20007538:	4623      	mov	r3, r4
2000753a:	462f      	mov	r7, r5
2000753c:	460c      	mov	r4, r1
2000753e:	4615      	mov	r5, r2
20007540:	461e      	mov	r6, r3
20007542:	68a3      	ldr	r3, [r4, #8]
20007544:	6861      	ldr	r1, [r4, #4]
20007546:	eb07 0805 	add.w	r8, r7, r5
2000754a:	4543      	cmp	r3, r8
2000754c:	bfb8      	it	lt
2000754e:	3101      	addlt	r1, #1
20007550:	f7ff ff20 	bl	20007394 <_Balloc>
20007554:	f100 0914 	add.w	r9, r0, #20
20007558:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
2000755c:	45d1      	cmp	r9, sl
2000755e:	9001      	str	r0, [sp, #4]
20007560:	d205      	bcs.n	2000756e <__multiply+0x4a>
20007562:	464b      	mov	r3, r9
20007564:	2200      	movs	r2, #0
20007566:	f843 2b04 	str.w	r2, [r3], #4
2000756a:	459a      	cmp	sl, r3
2000756c:	d8fb      	bhi.n	20007566 <__multiply+0x42>
2000756e:	f106 0e14 	add.w	lr, r6, #20
20007572:	eb0e 0b85 	add.w	fp, lr, r5, lsl #2
20007576:	f104 0314 	add.w	r3, r4, #20
2000757a:	45de      	cmp	lr, fp
2000757c:	461a      	mov	r2, r3
2000757e:	eb03 0787 	add.w	r7, r3, r7, lsl #2
20007582:	d25f      	bcs.n	20007644 <__multiply+0x120>
20007584:	1b3b      	subs	r3, r7, r4
20007586:	3b15      	subs	r3, #21
20007588:	f023 0303 	bic.w	r3, r3, #3
2000758c:	3304      	adds	r3, #4
2000758e:	3415      	adds	r4, #21
20007590:	42a7      	cmp	r7, r4
20007592:	bf38      	it	cc
20007594:	2304      	movcc	r3, #4
20007596:	e9cd a802 	strd	sl, r8, [sp, #8]
2000759a:	4698      	mov	r8, r3
2000759c:	4692      	mov	sl, r2
2000759e:	e005      	b.n	200075ac <__multiply+0x88>
200075a0:	0c00      	lsrs	r0, r0, #16
200075a2:	d129      	bne.n	200075f8 <__multiply+0xd4>
200075a4:	45f3      	cmp	fp, lr
200075a6:	f109 0904 	add.w	r9, r9, #4
200075aa:	d949      	bls.n	20007640 <__multiply+0x11c>
200075ac:	f85e 0b04 	ldr.w	r0, [lr], #4
200075b0:	b286      	uxth	r6, r0
200075b2:	2e00      	cmp	r6, #0
200075b4:	d0f4      	beq.n	200075a0 <__multiply+0x7c>
200075b6:	4655      	mov	r5, sl
200075b8:	464c      	mov	r4, r9
200075ba:	2300      	movs	r3, #0
200075bc:	f855 1b04 	ldr.w	r1, [r5], #4
200075c0:	6820      	ldr	r0, [r4, #0]
200075c2:	b28a      	uxth	r2, r1
200075c4:	fa1f fc80 	uxth.w	ip, r0
200075c8:	fb06 c202 	mla	r2, r6, r2, ip
200075cc:	0c09      	lsrs	r1, r1, #16
200075ce:	0c00      	lsrs	r0, r0, #16
200075d0:	fb06 0101 	mla	r1, r6, r1, r0
200075d4:	4413      	add	r3, r2
200075d6:	eb01 4213 	add.w	r2, r1, r3, lsr #16
200075da:	b29b      	uxth	r3, r3
200075dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
200075e0:	42af      	cmp	r7, r5
200075e2:	f844 3b04 	str.w	r3, [r4], #4
200075e6:	ea4f 4312 	mov.w	r3, r2, lsr #16
200075ea:	d8e7      	bhi.n	200075bc <__multiply+0x98>
200075ec:	f849 3008 	str.w	r3, [r9, r8]
200075f0:	f85e 0c04 	ldr.w	r0, [lr, #-4]
200075f4:	0c00      	lsrs	r0, r0, #16
200075f6:	d0d5      	beq.n	200075a4 <__multiply+0x80>
200075f8:	f8d9 3000 	ldr.w	r3, [r9]
200075fc:	4654      	mov	r4, sl
200075fe:	461e      	mov	r6, r3
20007600:	464d      	mov	r5, r9
20007602:	f04f 0c00 	mov.w	ip, #0
20007606:	8822      	ldrh	r2, [r4, #0]
20007608:	0c36      	lsrs	r6, r6, #16
2000760a:	fb00 6602 	mla	r6, r0, r2, r6
2000760e:	b29b      	uxth	r3, r3
20007610:	44b4      	add	ip, r6
20007612:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
20007616:	f845 3b04 	str.w	r3, [r5], #4
2000761a:	f854 3b04 	ldr.w	r3, [r4], #4
2000761e:	682e      	ldr	r6, [r5, #0]
20007620:	0c1b      	lsrs	r3, r3, #16
20007622:	b2b2      	uxth	r2, r6
20007624:	fb00 2303 	mla	r3, r0, r3, r2
20007628:	42a7      	cmp	r7, r4
2000762a:	eb03 431c 	add.w	r3, r3, ip, lsr #16
2000762e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
20007632:	d8e8      	bhi.n	20007606 <__multiply+0xe2>
20007634:	45f3      	cmp	fp, lr
20007636:	f849 3008 	str.w	r3, [r9, r8]
2000763a:	f109 0904 	add.w	r9, r9, #4
2000763e:	d8b5      	bhi.n	200075ac <__multiply+0x88>
20007640:	e9dd a802 	ldrd	sl, r8, [sp, #8]
20007644:	f1b8 0f00 	cmp.w	r8, #0
20007648:	dc03      	bgt.n	20007652 <__multiply+0x12e>
2000764a:	e006      	b.n	2000765a <__multiply+0x136>
2000764c:	f1b8 0801 	subs.w	r8, r8, #1
20007650:	d003      	beq.n	2000765a <__multiply+0x136>
20007652:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
20007656:	2b00      	cmp	r3, #0
20007658:	d0f8      	beq.n	2000764c <__multiply+0x128>
2000765a:	9801      	ldr	r0, [sp, #4]
2000765c:	f8c0 8010 	str.w	r8, [r0, #16]
20007660:	b005      	add	sp, #20
20007662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007666:	bf00      	nop

20007668 <__pow5mult>:
__pow5mult():
20007668:	f012 0303 	ands.w	r3, r2, #3
2000766c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
20007670:	4614      	mov	r4, r2
20007672:	4607      	mov	r7, r0
20007674:	d12e      	bne.n	200076d4 <__pow5mult+0x6c>
20007676:	460e      	mov	r6, r1
20007678:	10a4      	asrs	r4, r4, #2
2000767a:	d01c      	beq.n	200076b6 <__pow5mult+0x4e>
2000767c:	6cbd      	ldr	r5, [r7, #72]	; 0x48
2000767e:	b395      	cbz	r5, 200076e6 <__pow5mult+0x7e>
20007680:	07e3      	lsls	r3, r4, #31
20007682:	f04f 0800 	mov.w	r8, #0
20007686:	d406      	bmi.n	20007696 <__pow5mult+0x2e>
20007688:	1064      	asrs	r4, r4, #1
2000768a:	d014      	beq.n	200076b6 <__pow5mult+0x4e>
2000768c:	6828      	ldr	r0, [r5, #0]
2000768e:	b1a8      	cbz	r0, 200076bc <__pow5mult+0x54>
20007690:	4605      	mov	r5, r0
20007692:	07e3      	lsls	r3, r4, #31
20007694:	d5f8      	bpl.n	20007688 <__pow5mult+0x20>
20007696:	462a      	mov	r2, r5
20007698:	4631      	mov	r1, r6
2000769a:	4638      	mov	r0, r7
2000769c:	f7ff ff42 	bl	20007524 <__multiply>
200076a0:	b1b6      	cbz	r6, 200076d0 <__pow5mult+0x68>
200076a2:	6871      	ldr	r1, [r6, #4]
200076a4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
200076a6:	1064      	asrs	r4, r4, #1
200076a8:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
200076ac:	6032      	str	r2, [r6, #0]
200076ae:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
200076b2:	4606      	mov	r6, r0
200076b4:	d1ea      	bne.n	2000768c <__pow5mult+0x24>
200076b6:	4630      	mov	r0, r6
200076b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
200076bc:	462a      	mov	r2, r5
200076be:	4629      	mov	r1, r5
200076c0:	4638      	mov	r0, r7
200076c2:	f7ff ff2f 	bl	20007524 <__multiply>
200076c6:	6028      	str	r0, [r5, #0]
200076c8:	4605      	mov	r5, r0
200076ca:	f8c0 8000 	str.w	r8, [r0]
200076ce:	e7e0      	b.n	20007692 <__pow5mult+0x2a>
200076d0:	4606      	mov	r6, r0
200076d2:	e7d9      	b.n	20007688 <__pow5mult+0x20>
200076d4:	4a0b      	ldr	r2, [pc, #44]	; (20007704 <__pow5mult+0x9c>)
200076d6:	3b01      	subs	r3, #1
200076d8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
200076dc:	2300      	movs	r3, #0
200076de:	f7ff fe89 	bl	200073f4 <__multadd>
200076e2:	4606      	mov	r6, r0
200076e4:	e7c8      	b.n	20007678 <__pow5mult+0x10>
200076e6:	2101      	movs	r1, #1
200076e8:	4638      	mov	r0, r7
200076ea:	f7ff fe53 	bl	20007394 <_Balloc>
200076ee:	f240 2171 	movw	r1, #625	; 0x271
200076f2:	2201      	movs	r2, #1
200076f4:	2300      	movs	r3, #0
200076f6:	e9c0 2104 	strd	r2, r1, [r0, #16]
200076fa:	4605      	mov	r5, r0
200076fc:	64b8      	str	r0, [r7, #72]	; 0x48
200076fe:	6003      	str	r3, [r0, #0]
20007700:	e7be      	b.n	20007680 <__pow5mult+0x18>
20007702:	bf00      	nop
20007704:	200090f8 	.word	0x200090f8

20007708 <__lshift>:
__lshift():
20007708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2000770c:	690e      	ldr	r6, [r1, #16]
2000770e:	688b      	ldr	r3, [r1, #8]
20007710:	eb06 1662 	add.w	r6, r6, r2, asr #5
20007714:	1c75      	adds	r5, r6, #1
20007716:	429d      	cmp	r5, r3
20007718:	460c      	mov	r4, r1
2000771a:	4690      	mov	r8, r2
2000771c:	4607      	mov	r7, r0
2000771e:	6849      	ldr	r1, [r1, #4]
20007720:	ea4f 1962 	mov.w	r9, r2, asr #5
20007724:	dd04      	ble.n	20007730 <__lshift+0x28>
20007726:	005b      	lsls	r3, r3, #1
20007728:	429d      	cmp	r5, r3
2000772a:	f101 0101 	add.w	r1, r1, #1
2000772e:	dcfa      	bgt.n	20007726 <__lshift+0x1e>
20007730:	4638      	mov	r0, r7
20007732:	f7ff fe2f 	bl	20007394 <_Balloc>
20007736:	f1b9 0f00 	cmp.w	r9, #0
2000773a:	f100 0114 	add.w	r1, r0, #20
2000773e:	dd0e      	ble.n	2000775e <__lshift+0x56>
20007740:	460b      	mov	r3, r1
20007742:	2200      	movs	r2, #0
20007744:	f109 0905 	add.w	r9, r9, #5
20007748:	ea4f 0c89 	mov.w	ip, r9, lsl #2
2000774c:	eb00 0989 	add.w	r9, r0, r9, lsl #2
20007750:	f843 2b04 	str.w	r2, [r3], #4
20007754:	454b      	cmp	r3, r9
20007756:	d1fb      	bne.n	20007750 <__lshift+0x48>
20007758:	f1ac 0314 	sub.w	r3, ip, #20
2000775c:	4419      	add	r1, r3
2000775e:	6922      	ldr	r2, [r4, #16]
20007760:	f104 0314 	add.w	r3, r4, #20
20007764:	f018 081f 	ands.w	r8, r8, #31
20007768:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
2000776c:	d02c      	beq.n	200077c8 <__lshift+0xc0>
2000776e:	468e      	mov	lr, r1
20007770:	f04f 0a00 	mov.w	sl, #0
20007774:	f1c8 0920 	rsb	r9, r8, #32
20007778:	681a      	ldr	r2, [r3, #0]
2000777a:	fa02 f208 	lsl.w	r2, r2, r8
2000777e:	ea42 020a 	orr.w	r2, r2, sl
20007782:	f84e 2b04 	str.w	r2, [lr], #4
20007786:	f853 2b04 	ldr.w	r2, [r3], #4
2000778a:	459c      	cmp	ip, r3
2000778c:	fa22 fa09 	lsr.w	sl, r2, r9
20007790:	d8f2      	bhi.n	20007778 <__lshift+0x70>
20007792:	ebac 0304 	sub.w	r3, ip, r4
20007796:	3b15      	subs	r3, #21
20007798:	f023 0303 	bic.w	r3, r3, #3
2000779c:	3304      	adds	r3, #4
2000779e:	f104 0215 	add.w	r2, r4, #21
200077a2:	4594      	cmp	ip, r2
200077a4:	bf38      	it	cc
200077a6:	2304      	movcc	r3, #4
200077a8:	f1ba 0f00 	cmp.w	sl, #0
200077ac:	bf18      	it	ne
200077ae:	462e      	movne	r6, r5
200077b0:	f841 a003 	str.w	sl, [r1, r3]
200077b4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
200077b6:	6862      	ldr	r2, [r4, #4]
200077b8:	6106      	str	r6, [r0, #16]
200077ba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
200077be:	6021      	str	r1, [r4, #0]
200077c0:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
200077c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
200077c8:	3904      	subs	r1, #4
200077ca:	f853 2b04 	ldr.w	r2, [r3], #4
200077ce:	459c      	cmp	ip, r3
200077d0:	f841 2f04 	str.w	r2, [r1, #4]!
200077d4:	d8f9      	bhi.n	200077ca <__lshift+0xc2>
200077d6:	e7ed      	b.n	200077b4 <__lshift+0xac>

200077d8 <__mcmp>:
__mcmp():
200077d8:	b430      	push	{r4, r5}
200077da:	690b      	ldr	r3, [r1, #16]
200077dc:	4605      	mov	r5, r0
200077de:	6900      	ldr	r0, [r0, #16]
200077e0:	1ac0      	subs	r0, r0, r3
200077e2:	d111      	bne.n	20007808 <__mcmp+0x30>
200077e4:	3514      	adds	r5, #20
200077e6:	3114      	adds	r1, #20
200077e8:	eb01 0283 	add.w	r2, r1, r3, lsl #2
200077ec:	eb05 0383 	add.w	r3, r5, r3, lsl #2
200077f0:	e001      	b.n	200077f6 <__mcmp+0x1e>
200077f2:	429d      	cmp	r5, r3
200077f4:	d208      	bcs.n	20007808 <__mcmp+0x30>
200077f6:	f853 4d04 	ldr.w	r4, [r3, #-4]!
200077fa:	f852 1d04 	ldr.w	r1, [r2, #-4]!
200077fe:	428c      	cmp	r4, r1
20007800:	d0f7      	beq.n	200077f2 <__mcmp+0x1a>
20007802:	d203      	bcs.n	2000780c <__mcmp+0x34>
20007804:	f04f 30ff 	mov.w	r0, #4294967295
20007808:	bc30      	pop	{r4, r5}
2000780a:	4770      	bx	lr
2000780c:	2001      	movs	r0, #1
2000780e:	bc30      	pop	{r4, r5}
20007810:	4770      	bx	lr
20007812:	bf00      	nop

20007814 <__mdiff>:
__mdiff():
20007814:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
20007818:	4692      	mov	sl, r2
2000781a:	690b      	ldr	r3, [r1, #16]
2000781c:	6912      	ldr	r2, [r2, #16]
2000781e:	468b      	mov	fp, r1
20007820:	1a9b      	subs	r3, r3, r2
20007822:	2b00      	cmp	r3, #0
20007824:	d119      	bne.n	2000785a <__mdiff+0x46>
20007826:	f101 0814 	add.w	r8, r1, #20
2000782a:	f10a 0914 	add.w	r9, sl, #20
2000782e:	eb08 0382 	add.w	r3, r8, r2, lsl #2
20007832:	eb09 0282 	add.w	r2, r9, r2, lsl #2
20007836:	e001      	b.n	2000783c <__mdiff+0x28>
20007838:	4598      	cmp	r8, r3
2000783a:	d27e      	bcs.n	2000793a <__mdiff+0x126>
2000783c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
20007840:	f852 1d04 	ldr.w	r1, [r2, #-4]!
20007844:	428c      	cmp	r4, r1
20007846:	d0f7      	beq.n	20007838 <__mdiff+0x24>
20007848:	d20c      	bcs.n	20007864 <__mdiff+0x50>
2000784a:	4642      	mov	r2, r8
2000784c:	465b      	mov	r3, fp
2000784e:	46c8      	mov	r8, r9
20007850:	46d3      	mov	fp, sl
20007852:	4691      	mov	r9, r2
20007854:	469a      	mov	sl, r3
20007856:	2701      	movs	r7, #1
20007858:	e005      	b.n	20007866 <__mdiff+0x52>
2000785a:	db66      	blt.n	2000792a <__mdiff+0x116>
2000785c:	f101 0814 	add.w	r8, r1, #20
20007860:	f10a 0914 	add.w	r9, sl, #20
20007864:	2700      	movs	r7, #0
20007866:	f8db 1004 	ldr.w	r1, [fp, #4]
2000786a:	f7ff fd93 	bl	20007394 <_Balloc>
2000786e:	f100 0614 	add.w	r6, r0, #20
20007872:	46b4      	mov	ip, r6
20007874:	464d      	mov	r5, r9
20007876:	2400      	movs	r4, #0
20007878:	f8db 1010 	ldr.w	r1, [fp, #16]
2000787c:	f8da 3010 	ldr.w	r3, [sl, #16]
20007880:	eb08 0e81 	add.w	lr, r8, r1, lsl #2
20007884:	60c7      	str	r7, [r0, #12]
20007886:	eb09 0a83 	add.w	sl, r9, r3, lsl #2
2000788a:	f1a8 0704 	sub.w	r7, r8, #4
2000788e:	f857 bf04 	ldr.w	fp, [r7, #4]!
20007892:	f855 2b04 	ldr.w	r2, [r5], #4
20007896:	fa1f f38b 	uxth.w	r3, fp
2000789a:	441c      	add	r4, r3
2000789c:	b293      	uxth	r3, r2
2000789e:	0c12      	lsrs	r2, r2, #16
200078a0:	1ae4      	subs	r4, r4, r3
200078a2:	ebc2 421b 	rsb	r2, r2, fp, lsr #16
200078a6:	eb02 4224 	add.w	r2, r2, r4, asr #16
200078aa:	b2a4      	uxth	r4, r4
200078ac:	ea44 4302 	orr.w	r3, r4, r2, lsl #16
200078b0:	45aa      	cmp	sl, r5
200078b2:	f84c 3b04 	str.w	r3, [ip], #4
200078b6:	ea4f 4422 	mov.w	r4, r2, asr #16
200078ba:	d8e8      	bhi.n	2000788e <__mdiff+0x7a>
200078bc:	ea6f 0209 	mvn.w	r2, r9
200078c0:	f109 0901 	add.w	r9, r9, #1
200078c4:	4452      	add	r2, sl
200078c6:	45ca      	cmp	sl, r9
200078c8:	f022 0503 	bic.w	r5, r2, #3
200078cc:	f105 0504 	add.w	r5, r5, #4
200078d0:	bf38      	it	cc
200078d2:	2504      	movcc	r5, #4
200078d4:	f022 0203 	bic.w	r2, r2, #3
200078d8:	bf38      	it	cc
200078da:	2200      	movcc	r2, #0
200078dc:	44a8      	add	r8, r5
200078de:	45c6      	cmp	lr, r8
200078e0:	4435      	add	r5, r6
200078e2:	4416      	add	r6, r2
200078e4:	d918      	bls.n	20007918 <__mdiff+0x104>
200078e6:	462e      	mov	r6, r5
200078e8:	4642      	mov	r2, r8
200078ea:	f852 7b04 	ldr.w	r7, [r2], #4
200078ee:	b2bb      	uxth	r3, r7
200078f0:	4423      	add	r3, r4
200078f2:	141c      	asrs	r4, r3, #16
200078f4:	eb04 4417 	add.w	r4, r4, r7, lsr #16
200078f8:	b29b      	uxth	r3, r3
200078fa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
200078fe:	4596      	cmp	lr, r2
20007900:	f846 3b04 	str.w	r3, [r6], #4
20007904:	ea4f 4424 	mov.w	r4, r4, asr #16
20007908:	d8ef      	bhi.n	200078ea <__mdiff+0xd6>
2000790a:	f10e 36ff 	add.w	r6, lr, #4294967295
2000790e:	eba6 0608 	sub.w	r6, r6, r8
20007912:	f026 0603 	bic.w	r6, r6, #3
20007916:	442e      	add	r6, r5
20007918:	b923      	cbnz	r3, 20007924 <__mdiff+0x110>
2000791a:	f856 3d04 	ldr.w	r3, [r6, #-4]!
2000791e:	3901      	subs	r1, #1
20007920:	2b00      	cmp	r3, #0
20007922:	d0fa      	beq.n	2000791a <__mdiff+0x106>
20007924:	6101      	str	r1, [r0, #16]
20007926:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2000792a:	46d3      	mov	fp, sl
2000792c:	f10a 0814 	add.w	r8, sl, #20
20007930:	2701      	movs	r7, #1
20007932:	468a      	mov	sl, r1
20007934:	f101 0914 	add.w	r9, r1, #20
20007938:	e795      	b.n	20007866 <__mdiff+0x52>
2000793a:	2100      	movs	r1, #0
2000793c:	f7ff fd2a 	bl	20007394 <_Balloc>
20007940:	2201      	movs	r2, #1
20007942:	2300      	movs	r3, #0
20007944:	e9c0 2304 	strd	r2, r3, [r0, #16]
20007948:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

2000794c <__d2b>:
__d2b():
2000794c:	b5f0      	push	{r4, r5, r6, r7, lr}
2000794e:	461c      	mov	r4, r3
20007950:	b083      	sub	sp, #12
20007952:	2101      	movs	r1, #1
20007954:	4617      	mov	r7, r2
20007956:	9e08      	ldr	r6, [sp, #32]
20007958:	f7ff fd1c 	bl	20007394 <_Balloc>
2000795c:	4623      	mov	r3, r4
2000795e:	f3c4 550a 	ubfx	r5, r4, #20, #11
20007962:	f3c3 0313 	ubfx	r3, r3, #0, #20
20007966:	4604      	mov	r4, r0
20007968:	b10d      	cbz	r5, 2000796e <__d2b+0x22>
2000796a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2000796e:	2f00      	cmp	r7, #0
20007970:	9301      	str	r3, [sp, #4]
20007972:	d01a      	beq.n	200079aa <__d2b+0x5e>
20007974:	4668      	mov	r0, sp
20007976:	9700      	str	r7, [sp, #0]
20007978:	f7ff fd9a 	bl	200074b0 <__lo0bits>
2000797c:	2800      	cmp	r0, #0
2000797e:	d12e      	bne.n	200079de <__d2b+0x92>
20007980:	e9dd 2300 	ldrd	r2, r3, [sp]
20007984:	6162      	str	r2, [r4, #20]
20007986:	2b00      	cmp	r3, #0
20007988:	bf14      	ite	ne
2000798a:	2102      	movne	r1, #2
2000798c:	2101      	moveq	r1, #1
2000798e:	61a3      	str	r3, [r4, #24]
20007990:	6121      	str	r1, [r4, #16]
20007992:	b1ad      	cbz	r5, 200079c0 <__d2b+0x74>
20007994:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
20007998:	4403      	add	r3, r0
2000799a:	6033      	str	r3, [r6, #0]
2000799c:	9b09      	ldr	r3, [sp, #36]	; 0x24
2000799e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
200079a2:	6018      	str	r0, [r3, #0]
200079a4:	4620      	mov	r0, r4
200079a6:	b003      	add	sp, #12
200079a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
200079aa:	a801      	add	r0, sp, #4
200079ac:	f7ff fd80 	bl	200074b0 <__lo0bits>
200079b0:	2301      	movs	r3, #1
200079b2:	9a01      	ldr	r2, [sp, #4]
200079b4:	4619      	mov	r1, r3
200079b6:	e9c4 3204 	strd	r3, r2, [r4, #16]
200079ba:	3020      	adds	r0, #32
200079bc:	2d00      	cmp	r5, #0
200079be:	d1e9      	bne.n	20007994 <__d2b+0x48>
200079c0:	eb04 0381 	add.w	r3, r4, r1, lsl #2
200079c4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
200079c8:	6030      	str	r0, [r6, #0]
200079ca:	6918      	ldr	r0, [r3, #16]
200079cc:	f7ff fd50 	bl	20007470 <__hi0bits>
200079d0:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
200079d4:	4620      	mov	r0, r4
200079d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
200079d8:	6019      	str	r1, [r3, #0]
200079da:	b003      	add	sp, #12
200079dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
200079de:	9b01      	ldr	r3, [sp, #4]
200079e0:	9900      	ldr	r1, [sp, #0]
200079e2:	f1c0 0220 	rsb	r2, r0, #32
200079e6:	fa03 f202 	lsl.w	r2, r3, r2
200079ea:	430a      	orrs	r2, r1
200079ec:	40c3      	lsrs	r3, r0
200079ee:	9301      	str	r3, [sp, #4]
200079f0:	6162      	str	r2, [r4, #20]
200079f2:	e7c8      	b.n	20007986 <__d2b+0x3a>

200079f4 <_realloc_r>:
_realloc_r():
200079f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
200079f8:	4616      	mov	r6, r2
200079fa:	2900      	cmp	r1, #0
200079fc:	f000 80bd 	beq.w	20007b7a <_realloc_r+0x186>
20007a00:	f106 050b 	add.w	r5, r6, #11
20007a04:	460c      	mov	r4, r1
20007a06:	4680      	mov	r8, r0
20007a08:	f7ff fcb8 	bl	2000737c <__malloc_lock>
20007a0c:	2d16      	cmp	r5, #22
20007a0e:	d85f      	bhi.n	20007ad0 <_realloc_r+0xdc>
20007a10:	2510      	movs	r5, #16
20007a12:	462a      	mov	r2, r5
20007a14:	42ae      	cmp	r6, r5
20007a16:	d860      	bhi.n	20007ada <_realloc_r+0xe6>
20007a18:	f854 1c04 	ldr.w	r1, [r4, #-4]
20007a1c:	f1a4 0908 	sub.w	r9, r4, #8
20007a20:	f021 0703 	bic.w	r7, r1, #3
20007a24:	4297      	cmp	r7, r2
20007a26:	f280 8086 	bge.w	20007b36 <_realloc_r+0x142>
20007a2a:	4bc9      	ldr	r3, [pc, #804]	; (20007d50 <_realloc_r+0x35c>)
20007a2c:	eb09 0007 	add.w	r0, r9, r7
20007a30:	f8d3 c008 	ldr.w	ip, [r3, #8]
20007a34:	4584      	cmp	ip, r0
20007a36:	f000 80b9 	beq.w	20007bac <_realloc_r+0x1b8>
20007a3a:	f8d0 c004 	ldr.w	ip, [r0, #4]
20007a3e:	f02c 0301 	bic.w	r3, ip, #1
20007a42:	4403      	add	r3, r0
20007a44:	685b      	ldr	r3, [r3, #4]
20007a46:	07db      	lsls	r3, r3, #31
20007a48:	f100 808c 	bmi.w	20007b64 <_realloc_r+0x170>
20007a4c:	f02c 0c03 	bic.w	ip, ip, #3
20007a50:	eb07 030c 	add.w	r3, r7, ip
20007a54:	4293      	cmp	r3, r2
20007a56:	f280 8115 	bge.w	20007c84 <_realloc_r+0x290>
20007a5a:	07cb      	lsls	r3, r1, #31
20007a5c:	d40f      	bmi.n	20007a7e <_realloc_r+0x8a>
20007a5e:	f854 3c08 	ldr.w	r3, [r4, #-8]
20007a62:	eba9 0a03 	sub.w	sl, r9, r3
20007a66:	f8da 3004 	ldr.w	r3, [sl, #4]
20007a6a:	f023 0103 	bic.w	r1, r3, #3
20007a6e:	448c      	add	ip, r1
20007a70:	44bc      	add	ip, r7
20007a72:	4594      	cmp	ip, r2
20007a74:	da38      	bge.n	20007ae8 <_realloc_r+0xf4>
20007a76:	187b      	adds	r3, r7, r1
20007a78:	4293      	cmp	r3, r2
20007a7a:	f280 810f 	bge.w	20007c9c <_realloc_r+0x2a8>
20007a7e:	4631      	mov	r1, r6
20007a80:	4640      	mov	r0, r8
20007a82:	f7ff f923 	bl	20006ccc <_malloc_r>
20007a86:	4606      	mov	r6, r0
20007a88:	b1e0      	cbz	r0, 20007ac4 <_realloc_r+0xd0>
20007a8a:	f854 3c04 	ldr.w	r3, [r4, #-4]
20007a8e:	f1a0 0208 	sub.w	r2, r0, #8
20007a92:	f023 0301 	bic.w	r3, r3, #1
20007a96:	444b      	add	r3, r9
20007a98:	4293      	cmp	r3, r2
20007a9a:	f000 80f9 	beq.w	20007c90 <_realloc_r+0x29c>
20007a9e:	1f3a      	subs	r2, r7, #4
20007aa0:	2a24      	cmp	r2, #36	; 0x24
20007aa2:	f200 811c 	bhi.w	20007cde <_realloc_r+0x2ea>
20007aa6:	2a13      	cmp	r2, #19
20007aa8:	f200 80cd 	bhi.w	20007c46 <_realloc_r+0x252>
20007aac:	4603      	mov	r3, r0
20007aae:	4622      	mov	r2, r4
20007ab0:	6811      	ldr	r1, [r2, #0]
20007ab2:	6019      	str	r1, [r3, #0]
20007ab4:	6851      	ldr	r1, [r2, #4]
20007ab6:	6059      	str	r1, [r3, #4]
20007ab8:	6892      	ldr	r2, [r2, #8]
20007aba:	609a      	str	r2, [r3, #8]
20007abc:	4621      	mov	r1, r4
20007abe:	4640      	mov	r0, r8
20007ac0:	f7fe fde0 	bl	20006684 <_free_r>
20007ac4:	4640      	mov	r0, r8
20007ac6:	f7ff fc5f 	bl	20007388 <__malloc_unlock>
20007aca:	4630      	mov	r0, r6
20007acc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007ad0:	f025 0507 	bic.w	r5, r5, #7
20007ad4:	2d00      	cmp	r5, #0
20007ad6:	462a      	mov	r2, r5
20007ad8:	da9c      	bge.n	20007a14 <_realloc_r+0x20>
20007ada:	230c      	movs	r3, #12
20007adc:	2600      	movs	r6, #0
20007ade:	f8c8 3000 	str.w	r3, [r8]
20007ae2:	4630      	mov	r0, r6
20007ae4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007ae8:	4656      	mov	r6, sl
20007aea:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
20007aee:	60cb      	str	r3, [r1, #12]
20007af0:	6099      	str	r1, [r3, #8]
20007af2:	f856 1f08 	ldr.w	r1, [r6, #8]!
20007af6:	f8da 300c 	ldr.w	r3, [sl, #12]
20007afa:	1f3a      	subs	r2, r7, #4
20007afc:	2a24      	cmp	r2, #36	; 0x24
20007afe:	60cb      	str	r3, [r1, #12]
20007b00:	6099      	str	r1, [r3, #8]
20007b02:	f200 8107 	bhi.w	20007d14 <_realloc_r+0x320>
20007b06:	2a13      	cmp	r2, #19
20007b08:	f240 8102 	bls.w	20007d10 <_realloc_r+0x31c>
20007b0c:	6823      	ldr	r3, [r4, #0]
20007b0e:	2a1b      	cmp	r2, #27
20007b10:	f8ca 3008 	str.w	r3, [sl, #8]
20007b14:	6863      	ldr	r3, [r4, #4]
20007b16:	f8ca 300c 	str.w	r3, [sl, #12]
20007b1a:	f200 811b 	bhi.w	20007d54 <_realloc_r+0x360>
20007b1e:	3408      	adds	r4, #8
20007b20:	f10a 0310 	add.w	r3, sl, #16
20007b24:	6822      	ldr	r2, [r4, #0]
20007b26:	4667      	mov	r7, ip
20007b28:	601a      	str	r2, [r3, #0]
20007b2a:	6862      	ldr	r2, [r4, #4]
20007b2c:	46d1      	mov	r9, sl
20007b2e:	605a      	str	r2, [r3, #4]
20007b30:	68a2      	ldr	r2, [r4, #8]
20007b32:	4634      	mov	r4, r6
20007b34:	609a      	str	r2, [r3, #8]
20007b36:	1b7b      	subs	r3, r7, r5
20007b38:	2b0f      	cmp	r3, #15
20007b3a:	f8d9 2004 	ldr.w	r2, [r9, #4]
20007b3e:	d821      	bhi.n	20007b84 <_realloc_r+0x190>
20007b40:	f002 0201 	and.w	r2, r2, #1
20007b44:	433a      	orrs	r2, r7
20007b46:	eb09 0107 	add.w	r1, r9, r7
20007b4a:	f8c9 2004 	str.w	r2, [r9, #4]
20007b4e:	684b      	ldr	r3, [r1, #4]
20007b50:	f043 0301 	orr.w	r3, r3, #1
20007b54:	604b      	str	r3, [r1, #4]
20007b56:	4626      	mov	r6, r4
20007b58:	4640      	mov	r0, r8
20007b5a:	f7ff fc15 	bl	20007388 <__malloc_unlock>
20007b5e:	4630      	mov	r0, r6
20007b60:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007b64:	07c9      	lsls	r1, r1, #31
20007b66:	d48a      	bmi.n	20007a7e <_realloc_r+0x8a>
20007b68:	f854 3c08 	ldr.w	r3, [r4, #-8]
20007b6c:	eba9 0a03 	sub.w	sl, r9, r3
20007b70:	f8da 1004 	ldr.w	r1, [sl, #4]
20007b74:	f021 0103 	bic.w	r1, r1, #3
20007b78:	e77d      	b.n	20007a76 <_realloc_r+0x82>
20007b7a:	4611      	mov	r1, r2
20007b7c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
20007b80:	f7ff b8a4 	b.w	20006ccc <_malloc_r>
20007b84:	f002 0201 	and.w	r2, r2, #1
20007b88:	eb09 0105 	add.w	r1, r9, r5
20007b8c:	f043 0301 	orr.w	r3, r3, #1
20007b90:	432a      	orrs	r2, r5
20007b92:	f8c9 2004 	str.w	r2, [r9, #4]
20007b96:	444f      	add	r7, r9
20007b98:	604b      	str	r3, [r1, #4]
20007b9a:	687b      	ldr	r3, [r7, #4]
20007b9c:	4640      	mov	r0, r8
20007b9e:	f043 0301 	orr.w	r3, r3, #1
20007ba2:	3108      	adds	r1, #8
20007ba4:	607b      	str	r3, [r7, #4]
20007ba6:	f7fe fd6d 	bl	20006684 <_free_r>
20007baa:	e7d4      	b.n	20007b56 <_realloc_r+0x162>
20007bac:	f8dc b004 	ldr.w	fp, [ip, #4]
20007bb0:	f105 0010 	add.w	r0, r5, #16
20007bb4:	f02b 0b03 	bic.w	fp, fp, #3
20007bb8:	eb07 0c0b 	add.w	ip, r7, fp
20007bbc:	4584      	cmp	ip, r0
20007bbe:	da4d      	bge.n	20007c5c <_realloc_r+0x268>
20007bc0:	07c9      	lsls	r1, r1, #31
20007bc2:	f53f af5c 	bmi.w	20007a7e <_realloc_r+0x8a>
20007bc6:	f854 1c08 	ldr.w	r1, [r4, #-8]
20007bca:	eba9 0a01 	sub.w	sl, r9, r1
20007bce:	f8da 1004 	ldr.w	r1, [sl, #4]
20007bd2:	f021 0103 	bic.w	r1, r1, #3
20007bd6:	448b      	add	fp, r1
20007bd8:	44bb      	add	fp, r7
20007bda:	4558      	cmp	r0, fp
20007bdc:	f73f af4b 	bgt.w	20007a76 <_realloc_r+0x82>
20007be0:	4656      	mov	r6, sl
20007be2:	f8da 100c 	ldr.w	r1, [sl, #12]
20007be6:	f856 0f08 	ldr.w	r0, [r6, #8]!
20007bea:	1f3a      	subs	r2, r7, #4
20007bec:	2a24      	cmp	r2, #36	; 0x24
20007bee:	60c1      	str	r1, [r0, #12]
20007bf0:	6088      	str	r0, [r1, #8]
20007bf2:	f200 80bd 	bhi.w	20007d70 <_realloc_r+0x37c>
20007bf6:	2a13      	cmp	r2, #19
20007bf8:	f240 80b8 	bls.w	20007d6c <_realloc_r+0x378>
20007bfc:	6821      	ldr	r1, [r4, #0]
20007bfe:	2a1b      	cmp	r2, #27
20007c00:	f8ca 1008 	str.w	r1, [sl, #8]
20007c04:	6861      	ldr	r1, [r4, #4]
20007c06:	f8ca 100c 	str.w	r1, [sl, #12]
20007c0a:	f200 80c1 	bhi.w	20007d90 <_realloc_r+0x39c>
20007c0e:	3408      	adds	r4, #8
20007c10:	f10a 0210 	add.w	r2, sl, #16
20007c14:	6821      	ldr	r1, [r4, #0]
20007c16:	6011      	str	r1, [r2, #0]
20007c18:	6861      	ldr	r1, [r4, #4]
20007c1a:	6051      	str	r1, [r2, #4]
20007c1c:	68a1      	ldr	r1, [r4, #8]
20007c1e:	6091      	str	r1, [r2, #8]
20007c20:	ebab 0205 	sub.w	r2, fp, r5
20007c24:	eb0a 0105 	add.w	r1, sl, r5
20007c28:	f042 0201 	orr.w	r2, r2, #1
20007c2c:	6099      	str	r1, [r3, #8]
20007c2e:	604a      	str	r2, [r1, #4]
20007c30:	f8da 3004 	ldr.w	r3, [sl, #4]
20007c34:	4640      	mov	r0, r8
20007c36:	f003 0301 	and.w	r3, r3, #1
20007c3a:	431d      	orrs	r5, r3
20007c3c:	f8ca 5004 	str.w	r5, [sl, #4]
20007c40:	f7ff fba2 	bl	20007388 <__malloc_unlock>
20007c44:	e74d      	b.n	20007ae2 <_realloc_r+0xee>
20007c46:	6823      	ldr	r3, [r4, #0]
20007c48:	2a1b      	cmp	r2, #27
20007c4a:	6003      	str	r3, [r0, #0]
20007c4c:	6863      	ldr	r3, [r4, #4]
20007c4e:	6043      	str	r3, [r0, #4]
20007c50:	d849      	bhi.n	20007ce6 <_realloc_r+0x2f2>
20007c52:	f104 0208 	add.w	r2, r4, #8
20007c56:	f100 0308 	add.w	r3, r0, #8
20007c5a:	e729      	b.n	20007ab0 <_realloc_r+0xbc>
20007c5c:	ebac 0205 	sub.w	r2, ip, r5
20007c60:	eb09 0105 	add.w	r1, r9, r5
20007c64:	f042 0201 	orr.w	r2, r2, #1
20007c68:	6099      	str	r1, [r3, #8]
20007c6a:	604a      	str	r2, [r1, #4]
20007c6c:	f854 3c04 	ldr.w	r3, [r4, #-4]
20007c70:	4640      	mov	r0, r8
20007c72:	f003 0301 	and.w	r3, r3, #1
20007c76:	431d      	orrs	r5, r3
20007c78:	f844 5c04 	str.w	r5, [r4, #-4]
20007c7c:	f7ff fb84 	bl	20007388 <__malloc_unlock>
20007c80:	4626      	mov	r6, r4
20007c82:	e72e      	b.n	20007ae2 <_realloc_r+0xee>
20007c84:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
20007c88:	461f      	mov	r7, r3
20007c8a:	60ca      	str	r2, [r1, #12]
20007c8c:	6091      	str	r1, [r2, #8]
20007c8e:	e752      	b.n	20007b36 <_realloc_r+0x142>
20007c90:	f850 3c04 	ldr.w	r3, [r0, #-4]
20007c94:	f023 0303 	bic.w	r3, r3, #3
20007c98:	441f      	add	r7, r3
20007c9a:	e74c      	b.n	20007b36 <_realloc_r+0x142>
20007c9c:	4656      	mov	r6, sl
20007c9e:	f8da 100c 	ldr.w	r1, [sl, #12]
20007ca2:	f856 0f08 	ldr.w	r0, [r6, #8]!
20007ca6:	1f3a      	subs	r2, r7, #4
20007ca8:	2a24      	cmp	r2, #36	; 0x24
20007caa:	60c1      	str	r1, [r0, #12]
20007cac:	6088      	str	r0, [r1, #8]
20007cae:	d827      	bhi.n	20007d00 <_realloc_r+0x30c>
20007cb0:	2a13      	cmp	r2, #19
20007cb2:	d923      	bls.n	20007cfc <_realloc_r+0x308>
20007cb4:	6821      	ldr	r1, [r4, #0]
20007cb6:	2a1b      	cmp	r2, #27
20007cb8:	f8ca 1008 	str.w	r1, [sl, #8]
20007cbc:	6861      	ldr	r1, [r4, #4]
20007cbe:	f8ca 100c 	str.w	r1, [sl, #12]
20007cc2:	d82f      	bhi.n	20007d24 <_realloc_r+0x330>
20007cc4:	3408      	adds	r4, #8
20007cc6:	f10a 0210 	add.w	r2, sl, #16
20007cca:	6821      	ldr	r1, [r4, #0]
20007ccc:	461f      	mov	r7, r3
20007cce:	6011      	str	r1, [r2, #0]
20007cd0:	6863      	ldr	r3, [r4, #4]
20007cd2:	46d1      	mov	r9, sl
20007cd4:	6053      	str	r3, [r2, #4]
20007cd6:	68a3      	ldr	r3, [r4, #8]
20007cd8:	4634      	mov	r4, r6
20007cda:	6093      	str	r3, [r2, #8]
20007cdc:	e72b      	b.n	20007b36 <_realloc_r+0x142>
20007cde:	4621      	mov	r1, r4
20007ce0:	f7ff fae2 	bl	200072a8 <memmove>
20007ce4:	e6ea      	b.n	20007abc <_realloc_r+0xc8>
20007ce6:	68a3      	ldr	r3, [r4, #8]
20007ce8:	2a24      	cmp	r2, #36	; 0x24
20007cea:	6083      	str	r3, [r0, #8]
20007cec:	68e3      	ldr	r3, [r4, #12]
20007cee:	60c3      	str	r3, [r0, #12]
20007cf0:	d024      	beq.n	20007d3c <_realloc_r+0x348>
20007cf2:	f104 0210 	add.w	r2, r4, #16
20007cf6:	f100 0310 	add.w	r3, r0, #16
20007cfa:	e6d9      	b.n	20007ab0 <_realloc_r+0xbc>
20007cfc:	4632      	mov	r2, r6
20007cfe:	e7e4      	b.n	20007cca <_realloc_r+0x2d6>
20007d00:	4621      	mov	r1, r4
20007d02:	4630      	mov	r0, r6
20007d04:	461f      	mov	r7, r3
20007d06:	46d1      	mov	r9, sl
20007d08:	f7ff face 	bl	200072a8 <memmove>
20007d0c:	4634      	mov	r4, r6
20007d0e:	e712      	b.n	20007b36 <_realloc_r+0x142>
20007d10:	4633      	mov	r3, r6
20007d12:	e707      	b.n	20007b24 <_realloc_r+0x130>
20007d14:	4621      	mov	r1, r4
20007d16:	4630      	mov	r0, r6
20007d18:	4667      	mov	r7, ip
20007d1a:	46d1      	mov	r9, sl
20007d1c:	f7ff fac4 	bl	200072a8 <memmove>
20007d20:	4634      	mov	r4, r6
20007d22:	e708      	b.n	20007b36 <_realloc_r+0x142>
20007d24:	68a1      	ldr	r1, [r4, #8]
20007d26:	2a24      	cmp	r2, #36	; 0x24
20007d28:	f8ca 1010 	str.w	r1, [sl, #16]
20007d2c:	68e1      	ldr	r1, [r4, #12]
20007d2e:	f8ca 1014 	str.w	r1, [sl, #20]
20007d32:	d023      	beq.n	20007d7c <_realloc_r+0x388>
20007d34:	3410      	adds	r4, #16
20007d36:	f10a 0218 	add.w	r2, sl, #24
20007d3a:	e7c6      	b.n	20007cca <_realloc_r+0x2d6>
20007d3c:	6923      	ldr	r3, [r4, #16]
20007d3e:	f104 0218 	add.w	r2, r4, #24
20007d42:	6103      	str	r3, [r0, #16]
20007d44:	6961      	ldr	r1, [r4, #20]
20007d46:	f100 0318 	add.w	r3, r0, #24
20007d4a:	6141      	str	r1, [r0, #20]
20007d4c:	e6b0      	b.n	20007ab0 <_realloc_r+0xbc>
20007d4e:	bf00      	nop
20007d50:	200096a4 	.word	0x200096a4
20007d54:	68a3      	ldr	r3, [r4, #8]
20007d56:	2a24      	cmp	r2, #36	; 0x24
20007d58:	f8ca 3010 	str.w	r3, [sl, #16]
20007d5c:	68e3      	ldr	r3, [r4, #12]
20007d5e:	f8ca 3014 	str.w	r3, [sl, #20]
20007d62:	d021      	beq.n	20007da8 <_realloc_r+0x3b4>
20007d64:	3410      	adds	r4, #16
20007d66:	f10a 0318 	add.w	r3, sl, #24
20007d6a:	e6db      	b.n	20007b24 <_realloc_r+0x130>
20007d6c:	4632      	mov	r2, r6
20007d6e:	e751      	b.n	20007c14 <_realloc_r+0x220>
20007d70:	4621      	mov	r1, r4
20007d72:	4630      	mov	r0, r6
20007d74:	f7ff fa98 	bl	200072a8 <memmove>
20007d78:	4b15      	ldr	r3, [pc, #84]	; (20007dd0 <_realloc_r+0x3dc>)
20007d7a:	e751      	b.n	20007c20 <_realloc_r+0x22c>
20007d7c:	6921      	ldr	r1, [r4, #16]
20007d7e:	f10a 0220 	add.w	r2, sl, #32
20007d82:	f8ca 1018 	str.w	r1, [sl, #24]
20007d86:	6961      	ldr	r1, [r4, #20]
20007d88:	3418      	adds	r4, #24
20007d8a:	f8ca 101c 	str.w	r1, [sl, #28]
20007d8e:	e79c      	b.n	20007cca <_realloc_r+0x2d6>
20007d90:	68a1      	ldr	r1, [r4, #8]
20007d92:	2a24      	cmp	r2, #36	; 0x24
20007d94:	f8ca 1010 	str.w	r1, [sl, #16]
20007d98:	68e1      	ldr	r1, [r4, #12]
20007d9a:	f8ca 1014 	str.w	r1, [sl, #20]
20007d9e:	d00d      	beq.n	20007dbc <_realloc_r+0x3c8>
20007da0:	3410      	adds	r4, #16
20007da2:	f10a 0218 	add.w	r2, sl, #24
20007da6:	e735      	b.n	20007c14 <_realloc_r+0x220>
20007da8:	6922      	ldr	r2, [r4, #16]
20007daa:	f10a 0320 	add.w	r3, sl, #32
20007dae:	f8ca 2018 	str.w	r2, [sl, #24]
20007db2:	6962      	ldr	r2, [r4, #20]
20007db4:	3418      	adds	r4, #24
20007db6:	f8ca 201c 	str.w	r2, [sl, #28]
20007dba:	e6b3      	b.n	20007b24 <_realloc_r+0x130>
20007dbc:	6921      	ldr	r1, [r4, #16]
20007dbe:	f10a 0220 	add.w	r2, sl, #32
20007dc2:	f8ca 1018 	str.w	r1, [sl, #24]
20007dc6:	6961      	ldr	r1, [r4, #20]
20007dc8:	3418      	adds	r4, #24
20007dca:	f8ca 101c 	str.w	r1, [sl, #28]
20007dce:	e721      	b.n	20007c14 <_realloc_r+0x220>
20007dd0:	200096a4 	.word	0x200096a4

20007dd4 <frexp>:
frexp():
20007dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20007dd6:	4617      	mov	r7, r2
20007dd8:	2200      	movs	r2, #0
20007dda:	f8df c060 	ldr.w	ip, [pc, #96]	; 20007e3c <frexp+0x68>
20007dde:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
20007de2:	4563      	cmp	r3, ip
20007de4:	4604      	mov	r4, r0
20007de6:	460d      	mov	r5, r1
20007de8:	603a      	str	r2, [r7, #0]
20007dea:	dc22      	bgt.n	20007e32 <frexp+0x5e>
20007dec:	4684      	mov	ip, r0
20007dee:	ea53 0c0c 	orrs.w	ip, r3, ip
20007df2:	d01e      	beq.n	20007e32 <frexp+0x5e>
20007df4:	f8df c048 	ldr.w	ip, [pc, #72]	; 20007e40 <frexp+0x6c>
20007df8:	460e      	mov	r6, r1
20007dfa:	ea01 0c0c 	and.w	ip, r1, ip
20007dfe:	f1bc 0f00 	cmp.w	ip, #0
20007e02:	d109      	bne.n	20007e18 <frexp+0x44>
20007e04:	2200      	movs	r2, #0
20007e06:	4b0c      	ldr	r3, [pc, #48]	; (20007e38 <frexp+0x64>)
20007e08:	f7fb f840 	bl	20002e8c <__aeabi_dmul>
20007e0c:	f06f 0235 	mvn.w	r2, #53	; 0x35
20007e10:	4604      	mov	r4, r0
20007e12:	460e      	mov	r6, r1
20007e14:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
20007e18:	f026 46ff 	bic.w	r6, r6, #2139095040	; 0x7f800000
20007e1c:	151b      	asrs	r3, r3, #20
20007e1e:	f426 06e0 	bic.w	r6, r6, #7340032	; 0x700000
20007e22:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
20007e26:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
20007e2a:	4413      	add	r3, r2
20007e2c:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
20007e30:	603b      	str	r3, [r7, #0]
20007e32:	4620      	mov	r0, r4
20007e34:	4629      	mov	r1, r5
20007e36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
20007e38:	43500000 	.word	0x43500000
20007e3c:	7fefffff 	.word	0x7fefffff
20007e40:	7ff00000 	.word	0x7ff00000

20007e44 <_sbrk_r>:
_sbrk_r():
20007e44:	2200      	movs	r2, #0
20007e46:	b538      	push	{r3, r4, r5, lr}
20007e48:	4d06      	ldr	r5, [pc, #24]	; (20007e64 <_sbrk_r+0x20>)
20007e4a:	4604      	mov	r4, r0
20007e4c:	4608      	mov	r0, r1
20007e4e:	602a      	str	r2, [r5, #0]
20007e50:	f7f8 fdac 	bl	200009ac <_sbrk>
20007e54:	1c43      	adds	r3, r0, #1
20007e56:	d000      	beq.n	20007e5a <_sbrk_r+0x16>
20007e58:	bd38      	pop	{r3, r4, r5, pc}
20007e5a:	682b      	ldr	r3, [r5, #0]
20007e5c:	2b00      	cmp	r3, #0
20007e5e:	d0fb      	beq.n	20007e58 <_sbrk_r+0x14>
20007e60:	6023      	str	r3, [r4, #0]
20007e62:	bd38      	pop	{r3, r4, r5, pc}
20007e64:	2000a87c 	.word	0x2000a87c

20007e68 <__sread>:
__sread():
20007e68:	b510      	push	{r4, lr}
20007e6a:	460c      	mov	r4, r1
20007e6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20007e70:	f000 fa52 	bl	20008318 <_read_r>
20007e74:	2800      	cmp	r0, #0
20007e76:	db03      	blt.n	20007e80 <__sread+0x18>
20007e78:	6d23      	ldr	r3, [r4, #80]	; 0x50
20007e7a:	4403      	add	r3, r0
20007e7c:	6523      	str	r3, [r4, #80]	; 0x50
20007e7e:	bd10      	pop	{r4, pc}
20007e80:	89a3      	ldrh	r3, [r4, #12]
20007e82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
20007e86:	81a3      	strh	r3, [r4, #12]
20007e88:	bd10      	pop	{r4, pc}
20007e8a:	bf00      	nop

20007e8c <__swrite>:
__swrite():
20007e8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
20007e90:	460c      	mov	r4, r1
20007e92:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
20007e96:	461f      	mov	r7, r3
20007e98:	05cb      	lsls	r3, r1, #23
20007e9a:	4616      	mov	r6, r2
20007e9c:	4605      	mov	r5, r0
20007e9e:	d40b      	bmi.n	20007eb8 <__swrite+0x2c>
20007ea0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
20007ea4:	81a1      	strh	r1, [r4, #12]
20007ea6:	463b      	mov	r3, r7
20007ea8:	4632      	mov	r2, r6
20007eaa:	4628      	mov	r0, r5
20007eac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
20007eb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
20007eb4:	f7f8 bd48 	b.w	20000948 <_write_r>
20007eb8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
20007ebc:	2302      	movs	r3, #2
20007ebe:	2200      	movs	r2, #0
20007ec0:	f000 f9fe 	bl	200082c0 <_lseek_r>
20007ec4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
20007ec8:	e7ea      	b.n	20007ea0 <__swrite+0x14>
20007eca:	bf00      	nop

20007ecc <__sseek>:
__sseek():
20007ecc:	b510      	push	{r4, lr}
20007ece:	460c      	mov	r4, r1
20007ed0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20007ed4:	f000 f9f4 	bl	200082c0 <_lseek_r>
20007ed8:	89a3      	ldrh	r3, [r4, #12]
20007eda:	1c42      	adds	r2, r0, #1
20007edc:	bf0e      	itee	eq
20007ede:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
20007ee2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
20007ee6:	6520      	strne	r0, [r4, #80]	; 0x50
20007ee8:	81a3      	strh	r3, [r4, #12]
20007eea:	bd10      	pop	{r4, pc}

20007eec <__sclose>:
__sclose():
20007eec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20007ef0:	f000 b8bc 	b.w	2000806c <_close_r>

20007ef4 <__sprint_r.part.0>:
__sprint_r.part.0():
20007ef4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
20007ef8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
20007efa:	4690      	mov	r8, r2
20007efc:	049c      	lsls	r4, r3, #18
20007efe:	d52d      	bpl.n	20007f5c <__sprint_r.part.0+0x68>
20007f00:	6893      	ldr	r3, [r2, #8]
20007f02:	6812      	ldr	r2, [r2, #0]
20007f04:	b343      	cbz	r3, 20007f58 <__sprint_r.part.0+0x64>
20007f06:	468b      	mov	fp, r1
20007f08:	4606      	mov	r6, r0
20007f0a:	f102 0908 	add.w	r9, r2, #8
20007f0e:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
20007f12:	ea5f 079a 	movs.w	r7, sl, lsr #2
20007f16:	d015      	beq.n	20007f44 <__sprint_r.part.0+0x50>
20007f18:	2400      	movs	r4, #0
20007f1a:	3d04      	subs	r5, #4
20007f1c:	e001      	b.n	20007f22 <__sprint_r.part.0+0x2e>
20007f1e:	42a7      	cmp	r7, r4
20007f20:	d00e      	beq.n	20007f40 <__sprint_r.part.0+0x4c>
20007f22:	465a      	mov	r2, fp
20007f24:	4630      	mov	r0, r6
20007f26:	f855 1f04 	ldr.w	r1, [r5, #4]!
20007f2a:	f000 f967 	bl	200081fc <_fputwc_r>
20007f2e:	1c43      	adds	r3, r0, #1
20007f30:	f104 0401 	add.w	r4, r4, #1
20007f34:	d1f3      	bne.n	20007f1e <__sprint_r.part.0+0x2a>
20007f36:	2300      	movs	r3, #0
20007f38:	e9c8 3301 	strd	r3, r3, [r8, #4]
20007f3c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007f40:	f8d8 3008 	ldr.w	r3, [r8, #8]
20007f44:	f02a 0a03 	bic.w	sl, sl, #3
20007f48:	eba3 030a 	sub.w	r3, r3, sl
20007f4c:	f8c8 3008 	str.w	r3, [r8, #8]
20007f50:	f109 0908 	add.w	r9, r9, #8
20007f54:	2b00      	cmp	r3, #0
20007f56:	d1da      	bne.n	20007f0e <__sprint_r.part.0+0x1a>
20007f58:	2000      	movs	r0, #0
20007f5a:	e7ec      	b.n	20007f36 <__sprint_r.part.0+0x42>
20007f5c:	f7fe fc98 	bl	20006890 <__sfvwrite_r>
20007f60:	2300      	movs	r3, #0
20007f62:	e9c8 3301 	strd	r3, r3, [r8, #4]
20007f66:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
20007f6a:	bf00      	nop

20007f6c <__sprint_r>:
__sprint_r():
20007f6c:	b410      	push	{r4}
20007f6e:	6894      	ldr	r4, [r2, #8]
20007f70:	b114      	cbz	r4, 20007f78 <__sprint_r+0xc>
20007f72:	bc10      	pop	{r4}
20007f74:	f7ff bfbe 	b.w	20007ef4 <__sprint_r.part.0>
20007f78:	4620      	mov	r0, r4
20007f7a:	6054      	str	r4, [r2, #4]
20007f7c:	bc10      	pop	{r4}
20007f7e:	4770      	bx	lr

20007f80 <__register_exitproc>:
__register_exitproc():
20007f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
20007f84:	f8df a080 	ldr.w	sl, [pc, #128]	; 20008008 <__register_exitproc+0x88>
20007f88:	4606      	mov	r6, r0
20007f8a:	f8da 0000 	ldr.w	r0, [sl]
20007f8e:	4698      	mov	r8, r3
20007f90:	460f      	mov	r7, r1
20007f92:	4691      	mov	r9, r2
20007f94:	f7fe fe1e 	bl	20006bd4 <__retarget_lock_acquire_recursive>
20007f98:	4b1a      	ldr	r3, [pc, #104]	; (20008004 <__register_exitproc+0x84>)
20007f9a:	681b      	ldr	r3, [r3, #0]
20007f9c:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
20007fa0:	b324      	cbz	r4, 20007fec <__register_exitproc+0x6c>
20007fa2:	6865      	ldr	r5, [r4, #4]
20007fa4:	2d1f      	cmp	r5, #31
20007fa6:	dc26      	bgt.n	20007ff6 <__register_exitproc+0x76>
20007fa8:	b95e      	cbnz	r6, 20007fc2 <__register_exitproc+0x42>
20007faa:	1c6b      	adds	r3, r5, #1
20007fac:	3502      	adds	r5, #2
20007fae:	f8da 0000 	ldr.w	r0, [sl]
20007fb2:	6063      	str	r3, [r4, #4]
20007fb4:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
20007fb8:	f7fe fe0e 	bl	20006bd8 <__retarget_lock_release_recursive>
20007fbc:	2000      	movs	r0, #0
20007fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
20007fc2:	2301      	movs	r3, #1
20007fc4:	eb04 0185 	add.w	r1, r4, r5, lsl #2
20007fc8:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
20007fcc:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
20007fd0:	40ab      	lsls	r3, r5
20007fd2:	431a      	orrs	r2, r3
20007fd4:	2e02      	cmp	r6, #2
20007fd6:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
20007fda:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
20007fde:	d1e4      	bne.n	20007faa <__register_exitproc+0x2a>
20007fe0:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
20007fe4:	4313      	orrs	r3, r2
20007fe6:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
20007fea:	e7de      	b.n	20007faa <__register_exitproc+0x2a>
20007fec:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
20007ff0:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
20007ff4:	e7d5      	b.n	20007fa2 <__register_exitproc+0x22>
20007ff6:	f8da 0000 	ldr.w	r0, [sl]
20007ffa:	f7fe fded 	bl	20006bd8 <__retarget_lock_release_recursive>
20007ffe:	f04f 30ff 	mov.w	r0, #4294967295
20008002:	e7dc      	b.n	20007fbe <__register_exitproc+0x3e>
20008004:	20008f8c 	.word	0x20008f8c
20008008:	200096a0 	.word	0x200096a0

2000800c <_calloc_r>:
_calloc_r():
2000800c:	b510      	push	{r4, lr}
2000800e:	fb02 f101 	mul.w	r1, r2, r1
20008012:	f7fe fe5b 	bl	20006ccc <_malloc_r>
20008016:	4604      	mov	r4, r0
20008018:	b168      	cbz	r0, 20008036 <_calloc_r+0x2a>
2000801a:	f850 2c04 	ldr.w	r2, [r0, #-4]
2000801e:	f022 0203 	bic.w	r2, r2, #3
20008022:	3a04      	subs	r2, #4
20008024:	2a24      	cmp	r2, #36	; 0x24
20008026:	d818      	bhi.n	2000805a <_calloc_r+0x4e>
20008028:	2a13      	cmp	r2, #19
2000802a:	d806      	bhi.n	2000803a <_calloc_r+0x2e>
2000802c:	4602      	mov	r2, r0
2000802e:	2300      	movs	r3, #0
20008030:	e9c2 3300 	strd	r3, r3, [r2]
20008034:	6093      	str	r3, [r2, #8]
20008036:	4620      	mov	r0, r4
20008038:	bd10      	pop	{r4, pc}
2000803a:	2300      	movs	r3, #0
2000803c:	2a1b      	cmp	r2, #27
2000803e:	e9c0 3300 	strd	r3, r3, [r0]
20008042:	d90f      	bls.n	20008064 <_calloc_r+0x58>
20008044:	2a24      	cmp	r2, #36	; 0x24
20008046:	e9c0 3302 	strd	r3, r3, [r0, #8]
2000804a:	bf0a      	itet	eq
2000804c:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
20008050:	f100 0210 	addne.w	r2, r0, #16
20008054:	f100 0218 	addeq.w	r2, r0, #24
20008058:	e7e9      	b.n	2000802e <_calloc_r+0x22>
2000805a:	2100      	movs	r1, #0
2000805c:	f7fb f9c2 	bl	200033e4 <memset>
20008060:	4620      	mov	r0, r4
20008062:	bd10      	pop	{r4, pc}
20008064:	f100 0208 	add.w	r2, r0, #8
20008068:	e7e1      	b.n	2000802e <_calloc_r+0x22>
2000806a:	bf00      	nop

2000806c <_close_r>:
_close_r():
2000806c:	2200      	movs	r2, #0
2000806e:	b538      	push	{r3, r4, r5, lr}
20008070:	4d06      	ldr	r5, [pc, #24]	; (2000808c <_close_r+0x20>)
20008072:	4604      	mov	r4, r0
20008074:	4608      	mov	r0, r1
20008076:	602a      	str	r2, [r5, #0]
20008078:	f7f8 fc24 	bl	200008c4 <_close>
2000807c:	1c43      	adds	r3, r0, #1
2000807e:	d000      	beq.n	20008082 <_close_r+0x16>
20008080:	bd38      	pop	{r3, r4, r5, pc}
20008082:	682b      	ldr	r3, [r5, #0]
20008084:	2b00      	cmp	r3, #0
20008086:	d0fb      	beq.n	20008080 <_close_r+0x14>
20008088:	6023      	str	r3, [r4, #0]
2000808a:	bd38      	pop	{r3, r4, r5, pc}
2000808c:	2000a87c 	.word	0x2000a87c

20008090 <_fclose_r>:
_fclose_r():
20008090:	b570      	push	{r4, r5, r6, lr}
20008092:	2900      	cmp	r1, #0
20008094:	d04b      	beq.n	2000812e <_fclose_r+0x9e>
20008096:	460c      	mov	r4, r1
20008098:	4605      	mov	r5, r0
2000809a:	b110      	cbz	r0, 200080a2 <_fclose_r+0x12>
2000809c:	6b83      	ldr	r3, [r0, #56]	; 0x38
2000809e:	2b00      	cmp	r3, #0
200080a0:	d048      	beq.n	20008134 <_fclose_r+0xa4>
200080a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
200080a4:	07d8      	lsls	r0, r3, #31
200080a6:	d534      	bpl.n	20008112 <_fclose_r+0x82>
200080a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200080ac:	2b00      	cmp	r3, #0
200080ae:	d03e      	beq.n	2000812e <_fclose_r+0x9e>
200080b0:	4621      	mov	r1, r4
200080b2:	4628      	mov	r0, r5
200080b4:	f7fe f952 	bl	2000635c <__sflush_r>
200080b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
200080ba:	4606      	mov	r6, r0
200080bc:	b133      	cbz	r3, 200080cc <_fclose_r+0x3c>
200080be:	4628      	mov	r0, r5
200080c0:	69e1      	ldr	r1, [r4, #28]
200080c2:	4798      	blx	r3
200080c4:	2800      	cmp	r0, #0
200080c6:	bfb8      	it	lt
200080c8:	f04f 36ff 	movlt.w	r6, #4294967295
200080cc:	89a3      	ldrh	r3, [r4, #12]
200080ce:	061a      	lsls	r2, r3, #24
200080d0:	d43b      	bmi.n	2000814a <_fclose_r+0xba>
200080d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
200080d4:	b141      	cbz	r1, 200080e8 <_fclose_r+0x58>
200080d6:	f104 0340 	add.w	r3, r4, #64	; 0x40
200080da:	4299      	cmp	r1, r3
200080dc:	d002      	beq.n	200080e4 <_fclose_r+0x54>
200080de:	4628      	mov	r0, r5
200080e0:	f7fe fad0 	bl	20006684 <_free_r>
200080e4:	2300      	movs	r3, #0
200080e6:	6323      	str	r3, [r4, #48]	; 0x30
200080e8:	6c61      	ldr	r1, [r4, #68]	; 0x44
200080ea:	b121      	cbz	r1, 200080f6 <_fclose_r+0x66>
200080ec:	4628      	mov	r0, r5
200080ee:	f7fe fac9 	bl	20006684 <_free_r>
200080f2:	2300      	movs	r3, #0
200080f4:	6463      	str	r3, [r4, #68]	; 0x44
200080f6:	f7fe fa53 	bl	200065a0 <__sfp_lock_acquire>
200080fa:	2200      	movs	r2, #0
200080fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
200080fe:	81a2      	strh	r2, [r4, #12]
20008100:	07db      	lsls	r3, r3, #31
20008102:	d527      	bpl.n	20008154 <_fclose_r+0xc4>
20008104:	6da0      	ldr	r0, [r4, #88]	; 0x58
20008106:	f7fe fd63 	bl	20006bd0 <__retarget_lock_close_recursive>
2000810a:	f7fe fa4f 	bl	200065ac <__sfp_lock_release>
2000810e:	4630      	mov	r0, r6
20008110:	bd70      	pop	{r4, r5, r6, pc}
20008112:	89a3      	ldrh	r3, [r4, #12]
20008114:	0599      	lsls	r1, r3, #22
20008116:	d4cb      	bmi.n	200080b0 <_fclose_r+0x20>
20008118:	6da0      	ldr	r0, [r4, #88]	; 0x58
2000811a:	f7fe fd5b 	bl	20006bd4 <__retarget_lock_acquire_recursive>
2000811e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20008122:	2b00      	cmp	r3, #0
20008124:	d1c4      	bne.n	200080b0 <_fclose_r+0x20>
20008126:	6e66      	ldr	r6, [r4, #100]	; 0x64
20008128:	f016 0601 	ands.w	r6, r6, #1
2000812c:	d008      	beq.n	20008140 <_fclose_r+0xb0>
2000812e:	2600      	movs	r6, #0
20008130:	4630      	mov	r0, r6
20008132:	bd70      	pop	{r4, r5, r6, pc}
20008134:	f7fe fa06 	bl	20006544 <__sinit>
20008138:	6e63      	ldr	r3, [r4, #100]	; 0x64
2000813a:	07d8      	lsls	r0, r3, #31
2000813c:	d4b4      	bmi.n	200080a8 <_fclose_r+0x18>
2000813e:	e7e8      	b.n	20008112 <_fclose_r+0x82>
20008140:	6da0      	ldr	r0, [r4, #88]	; 0x58
20008142:	f7fe fd49 	bl	20006bd8 <__retarget_lock_release_recursive>
20008146:	4630      	mov	r0, r6
20008148:	bd70      	pop	{r4, r5, r6, pc}
2000814a:	4628      	mov	r0, r5
2000814c:	6921      	ldr	r1, [r4, #16]
2000814e:	f7fe fa99 	bl	20006684 <_free_r>
20008152:	e7be      	b.n	200080d2 <_fclose_r+0x42>
20008154:	6da0      	ldr	r0, [r4, #88]	; 0x58
20008156:	f7fe fd3f 	bl	20006bd8 <__retarget_lock_release_recursive>
2000815a:	e7d3      	b.n	20008104 <_fclose_r+0x74>

2000815c <__fputwc>:
__fputwc():
2000815c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
20008160:	b083      	sub	sp, #12
20008162:	4607      	mov	r7, r0
20008164:	4688      	mov	r8, r1
20008166:	4614      	mov	r4, r2
20008168:	f000 f8a4 	bl	200082b4 <__locale_mb_cur_max>
2000816c:	2801      	cmp	r0, #1
2000816e:	d103      	bne.n	20008178 <__fputwc+0x1c>
20008170:	f108 33ff 	add.w	r3, r8, #4294967295
20008174:	2bfe      	cmp	r3, #254	; 0xfe
20008176:	d933      	bls.n	200081e0 <__fputwc+0x84>
20008178:	4642      	mov	r2, r8
2000817a:	4638      	mov	r0, r7
2000817c:	f104 035c 	add.w	r3, r4, #92	; 0x5c
20008180:	a901      	add	r1, sp, #4
20008182:	f000 f937 	bl	200083f4 <_wcrtomb_r>
20008186:	1c42      	adds	r2, r0, #1
20008188:	4606      	mov	r6, r0
2000818a:	d02f      	beq.n	200081ec <__fputwc+0x90>
2000818c:	b318      	cbz	r0, 200081d6 <__fputwc+0x7a>
2000818e:	f89d 1004 	ldrb.w	r1, [sp, #4]
20008192:	2500      	movs	r5, #0
20008194:	f10d 0904 	add.w	r9, sp, #4
20008198:	e008      	b.n	200081ac <__fputwc+0x50>
2000819a:	6823      	ldr	r3, [r4, #0]
2000819c:	1c5a      	adds	r2, r3, #1
2000819e:	6022      	str	r2, [r4, #0]
200081a0:	7019      	strb	r1, [r3, #0]
200081a2:	3501      	adds	r5, #1
200081a4:	42b5      	cmp	r5, r6
200081a6:	d216      	bcs.n	200081d6 <__fputwc+0x7a>
200081a8:	f815 1009 	ldrb.w	r1, [r5, r9]
200081ac:	68a3      	ldr	r3, [r4, #8]
200081ae:	3b01      	subs	r3, #1
200081b0:	2b00      	cmp	r3, #0
200081b2:	60a3      	str	r3, [r4, #8]
200081b4:	daf1      	bge.n	2000819a <__fputwc+0x3e>
200081b6:	69a2      	ldr	r2, [r4, #24]
200081b8:	4293      	cmp	r3, r2
200081ba:	db01      	blt.n	200081c0 <__fputwc+0x64>
200081bc:	290a      	cmp	r1, #10
200081be:	d1ec      	bne.n	2000819a <__fputwc+0x3e>
200081c0:	4622      	mov	r2, r4
200081c2:	4638      	mov	r0, r7
200081c4:	f000 f8be 	bl	20008344 <__swbuf_r>
200081c8:	1c43      	adds	r3, r0, #1
200081ca:	d1ea      	bne.n	200081a2 <__fputwc+0x46>
200081cc:	4606      	mov	r6, r0
200081ce:	4630      	mov	r0, r6
200081d0:	b003      	add	sp, #12
200081d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
200081d6:	4646      	mov	r6, r8
200081d8:	4630      	mov	r0, r6
200081da:	b003      	add	sp, #12
200081dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
200081e0:	fa5f f188 	uxtb.w	r1, r8
200081e4:	4606      	mov	r6, r0
200081e6:	f88d 1004 	strb.w	r1, [sp, #4]
200081ea:	e7d2      	b.n	20008192 <__fputwc+0x36>
200081ec:	4630      	mov	r0, r6
200081ee:	89a3      	ldrh	r3, [r4, #12]
200081f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
200081f4:	81a3      	strh	r3, [r4, #12]
200081f6:	b003      	add	sp, #12
200081f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

200081fc <_fputwc_r>:
_fputwc_r():
200081fc:	b530      	push	{r4, r5, lr}
200081fe:	6e53      	ldr	r3, [r2, #100]	; 0x64
20008200:	4614      	mov	r4, r2
20008202:	f013 0f01 	tst.w	r3, #1
20008206:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
2000820a:	4605      	mov	r5, r0
2000820c:	b083      	sub	sp, #12
2000820e:	b29a      	uxth	r2, r3
20008210:	d101      	bne.n	20008216 <_fputwc_r+0x1a>
20008212:	0598      	lsls	r0, r3, #22
20008214:	d51c      	bpl.n	20008250 <_fputwc_r+0x54>
20008216:	0490      	lsls	r0, r2, #18
20008218:	d406      	bmi.n	20008228 <_fputwc_r+0x2c>
2000821a:	6e62      	ldr	r2, [r4, #100]	; 0x64
2000821c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
20008220:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
20008224:	81a3      	strh	r3, [r4, #12]
20008226:	6662      	str	r2, [r4, #100]	; 0x64
20008228:	4628      	mov	r0, r5
2000822a:	4622      	mov	r2, r4
2000822c:	f7ff ff96 	bl	2000815c <__fputwc>
20008230:	6e63      	ldr	r3, [r4, #100]	; 0x64
20008232:	4605      	mov	r5, r0
20008234:	07da      	lsls	r2, r3, #31
20008236:	d402      	bmi.n	2000823e <_fputwc_r+0x42>
20008238:	89a3      	ldrh	r3, [r4, #12]
2000823a:	059b      	lsls	r3, r3, #22
2000823c:	d502      	bpl.n	20008244 <_fputwc_r+0x48>
2000823e:	4628      	mov	r0, r5
20008240:	b003      	add	sp, #12
20008242:	bd30      	pop	{r4, r5, pc}
20008244:	6da0      	ldr	r0, [r4, #88]	; 0x58
20008246:	f7fe fcc7 	bl	20006bd8 <__retarget_lock_release_recursive>
2000824a:	4628      	mov	r0, r5
2000824c:	b003      	add	sp, #12
2000824e:	bd30      	pop	{r4, r5, pc}
20008250:	6da0      	ldr	r0, [r4, #88]	; 0x58
20008252:	9101      	str	r1, [sp, #4]
20008254:	f7fe fcbe 	bl	20006bd4 <__retarget_lock_acquire_recursive>
20008258:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
2000825c:	9901      	ldr	r1, [sp, #4]
2000825e:	b29a      	uxth	r2, r3
20008260:	e7d9      	b.n	20008216 <_fputwc_r+0x1a>
20008262:	bf00      	nop

20008264 <_fstat_r>:
_fstat_r():
20008264:	b570      	push	{r4, r5, r6, lr}
20008266:	460c      	mov	r4, r1
20008268:	4603      	mov	r3, r0
2000826a:	2600      	movs	r6, #0
2000826c:	4d07      	ldr	r5, [pc, #28]	; (2000828c <_fstat_r+0x28>)
2000826e:	4620      	mov	r0, r4
20008270:	4611      	mov	r1, r2
20008272:	461c      	mov	r4, r3
20008274:	602e      	str	r6, [r5, #0]
20008276:	f7f8 fb35 	bl	200008e4 <_fstat>
2000827a:	1c43      	adds	r3, r0, #1
2000827c:	d000      	beq.n	20008280 <_fstat_r+0x1c>
2000827e:	bd70      	pop	{r4, r5, r6, pc}
20008280:	682b      	ldr	r3, [r5, #0]
20008282:	2b00      	cmp	r3, #0
20008284:	d0fb      	beq.n	2000827e <_fstat_r+0x1a>
20008286:	6023      	str	r3, [r4, #0]
20008288:	bd70      	pop	{r4, r5, r6, pc}
2000828a:	bf00      	nop
2000828c:	2000a87c 	.word	0x2000a87c

20008290 <_isatty_r>:
_isatty_r():
20008290:	2200      	movs	r2, #0
20008292:	b538      	push	{r3, r4, r5, lr}
20008294:	4d06      	ldr	r5, [pc, #24]	; (200082b0 <_isatty_r+0x20>)
20008296:	4604      	mov	r4, r0
20008298:	4608      	mov	r0, r1
2000829a:	602a      	str	r2, [r5, #0]
2000829c:	f7f8 fb31 	bl	20000902 <_isatty>
200082a0:	1c43      	adds	r3, r0, #1
200082a2:	d000      	beq.n	200082a6 <_isatty_r+0x16>
200082a4:	bd38      	pop	{r3, r4, r5, pc}
200082a6:	682b      	ldr	r3, [r5, #0]
200082a8:	2b00      	cmp	r3, #0
200082aa:	d0fb      	beq.n	200082a4 <_isatty_r+0x14>
200082ac:	6023      	str	r3, [r4, #0]
200082ae:	bd38      	pop	{r3, r4, r5, pc}
200082b0:	2000a87c 	.word	0x2000a87c

200082b4 <__locale_mb_cur_max>:
__locale_mb_cur_max():
200082b4:	4b01      	ldr	r3, [pc, #4]	; (200082bc <__locale_mb_cur_max+0x8>)
200082b6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
200082ba:	4770      	bx	lr
200082bc:	20009ab4 	.word	0x20009ab4

200082c0 <_lseek_r>:
_lseek_r():
200082c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
200082c2:	460f      	mov	r7, r1
200082c4:	2600      	movs	r6, #0
200082c6:	4d08      	ldr	r5, [pc, #32]	; (200082e8 <_lseek_r+0x28>)
200082c8:	4611      	mov	r1, r2
200082ca:	4604      	mov	r4, r0
200082cc:	461a      	mov	r2, r3
200082ce:	4638      	mov	r0, r7
200082d0:	602e      	str	r6, [r5, #0]
200082d2:	f7f8 fb20 	bl	20000916 <_lseek>
200082d6:	1c43      	adds	r3, r0, #1
200082d8:	d000      	beq.n	200082dc <_lseek_r+0x1c>
200082da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
200082dc:	682b      	ldr	r3, [r5, #0]
200082de:	2b00      	cmp	r3, #0
200082e0:	d0fb      	beq.n	200082da <_lseek_r+0x1a>
200082e2:	6023      	str	r3, [r4, #0]
200082e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
200082e6:	bf00      	nop
200082e8:	2000a87c 	.word	0x2000a87c

200082ec <__ascii_mbtowc>:
__ascii_mbtowc():
200082ec:	b082      	sub	sp, #8
200082ee:	b149      	cbz	r1, 20008304 <__ascii_mbtowc+0x18>
200082f0:	b15a      	cbz	r2, 2000830a <__ascii_mbtowc+0x1e>
200082f2:	b16b      	cbz	r3, 20008310 <__ascii_mbtowc+0x24>
200082f4:	7813      	ldrb	r3, [r2, #0]
200082f6:	600b      	str	r3, [r1, #0]
200082f8:	7812      	ldrb	r2, [r2, #0]
200082fa:	1e10      	subs	r0, r2, #0
200082fc:	bf18      	it	ne
200082fe:	2001      	movne	r0, #1
20008300:	b002      	add	sp, #8
20008302:	4770      	bx	lr
20008304:	a901      	add	r1, sp, #4
20008306:	2a00      	cmp	r2, #0
20008308:	d1f3      	bne.n	200082f2 <__ascii_mbtowc+0x6>
2000830a:	4610      	mov	r0, r2
2000830c:	b002      	add	sp, #8
2000830e:	4770      	bx	lr
20008310:	f06f 0001 	mvn.w	r0, #1
20008314:	e7f4      	b.n	20008300 <__ascii_mbtowc+0x14>
20008316:	bf00      	nop

20008318 <_read_r>:
_read_r():
20008318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2000831a:	460f      	mov	r7, r1
2000831c:	2600      	movs	r6, #0
2000831e:	4d08      	ldr	r5, [pc, #32]	; (20008340 <_read_r+0x28>)
20008320:	4611      	mov	r1, r2
20008322:	4604      	mov	r4, r0
20008324:	461a      	mov	r2, r3
20008326:	4638      	mov	r0, r7
20008328:	602e      	str	r6, [r5, #0]
2000832a:	f7f8 fb00 	bl	2000092e <_read>
2000832e:	1c43      	adds	r3, r0, #1
20008330:	d000      	beq.n	20008334 <_read_r+0x1c>
20008332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
20008334:	682b      	ldr	r3, [r5, #0]
20008336:	2b00      	cmp	r3, #0
20008338:	d0fb      	beq.n	20008332 <_read_r+0x1a>
2000833a:	6023      	str	r3, [r4, #0]
2000833c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2000833e:	bf00      	nop
20008340:	2000a87c 	.word	0x2000a87c

20008344 <__swbuf_r>:
__swbuf_r():
20008344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20008346:	460d      	mov	r5, r1
20008348:	4614      	mov	r4, r2
2000834a:	4606      	mov	r6, r0
2000834c:	b110      	cbz	r0, 20008354 <__swbuf_r+0x10>
2000834e:	6b83      	ldr	r3, [r0, #56]	; 0x38
20008350:	2b00      	cmp	r3, #0
20008352:	d043      	beq.n	200083dc <__swbuf_r+0x98>
20008354:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
20008358:	69a3      	ldr	r3, [r4, #24]
2000835a:	0717      	lsls	r7, r2, #28
2000835c:	60a3      	str	r3, [r4, #8]
2000835e:	b290      	uxth	r0, r2
20008360:	d51b      	bpl.n	2000839a <__swbuf_r+0x56>
20008362:	6923      	ldr	r3, [r4, #16]
20008364:	b1cb      	cbz	r3, 2000839a <__swbuf_r+0x56>
20008366:	b2ed      	uxtb	r5, r5
20008368:	0481      	lsls	r1, r0, #18
2000836a:	462f      	mov	r7, r5
2000836c:	d522      	bpl.n	200083b4 <__swbuf_r+0x70>
2000836e:	6822      	ldr	r2, [r4, #0]
20008370:	6961      	ldr	r1, [r4, #20]
20008372:	1ad3      	subs	r3, r2, r3
20008374:	4299      	cmp	r1, r3
20008376:	dd29      	ble.n	200083cc <__swbuf_r+0x88>
20008378:	3301      	adds	r3, #1
2000837a:	68a1      	ldr	r1, [r4, #8]
2000837c:	1c50      	adds	r0, r2, #1
2000837e:	3901      	subs	r1, #1
20008380:	60a1      	str	r1, [r4, #8]
20008382:	6020      	str	r0, [r4, #0]
20008384:	7015      	strb	r5, [r2, #0]
20008386:	6962      	ldr	r2, [r4, #20]
20008388:	429a      	cmp	r2, r3
2000838a:	d02a      	beq.n	200083e2 <__swbuf_r+0x9e>
2000838c:	89a3      	ldrh	r3, [r4, #12]
2000838e:	07db      	lsls	r3, r3, #31
20008390:	d501      	bpl.n	20008396 <__swbuf_r+0x52>
20008392:	2d0a      	cmp	r5, #10
20008394:	d025      	beq.n	200083e2 <__swbuf_r+0x9e>
20008396:	4638      	mov	r0, r7
20008398:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2000839a:	4621      	mov	r1, r4
2000839c:	4630      	mov	r0, r6
2000839e:	f7fc ff8d 	bl	200052bc <__swsetup_r>
200083a2:	bb20      	cbnz	r0, 200083ee <__swbuf_r+0xaa>
200083a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
200083a8:	b2ed      	uxtb	r5, r5
200083aa:	b290      	uxth	r0, r2
200083ac:	0481      	lsls	r1, r0, #18
200083ae:	462f      	mov	r7, r5
200083b0:	6923      	ldr	r3, [r4, #16]
200083b2:	d4dc      	bmi.n	2000836e <__swbuf_r+0x2a>
200083b4:	6e61      	ldr	r1, [r4, #100]	; 0x64
200083b6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
200083ba:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
200083be:	81a2      	strh	r2, [r4, #12]
200083c0:	6822      	ldr	r2, [r4, #0]
200083c2:	6661      	str	r1, [r4, #100]	; 0x64
200083c4:	6961      	ldr	r1, [r4, #20]
200083c6:	1ad3      	subs	r3, r2, r3
200083c8:	4299      	cmp	r1, r3
200083ca:	dcd5      	bgt.n	20008378 <__swbuf_r+0x34>
200083cc:	4621      	mov	r1, r4
200083ce:	4630      	mov	r0, r6
200083d0:	f7fe f85c 	bl	2000648c <_fflush_r>
200083d4:	b958      	cbnz	r0, 200083ee <__swbuf_r+0xaa>
200083d6:	2301      	movs	r3, #1
200083d8:	6822      	ldr	r2, [r4, #0]
200083da:	e7ce      	b.n	2000837a <__swbuf_r+0x36>
200083dc:	f7fe f8b2 	bl	20006544 <__sinit>
200083e0:	e7b8      	b.n	20008354 <__swbuf_r+0x10>
200083e2:	4621      	mov	r1, r4
200083e4:	4630      	mov	r0, r6
200083e6:	f7fe f851 	bl	2000648c <_fflush_r>
200083ea:	2800      	cmp	r0, #0
200083ec:	d0d3      	beq.n	20008396 <__swbuf_r+0x52>
200083ee:	f04f 37ff 	mov.w	r7, #4294967295
200083f2:	e7d0      	b.n	20008396 <__swbuf_r+0x52>

200083f4 <_wcrtomb_r>:
_wcrtomb_r():
200083f4:	b570      	push	{r4, r5, r6, lr}
200083f6:	4606      	mov	r6, r0
200083f8:	461d      	mov	r5, r3
200083fa:	b084      	sub	sp, #16
200083fc:	b139      	cbz	r1, 2000840e <_wcrtomb_r+0x1a>
200083fe:	4c0b      	ldr	r4, [pc, #44]	; (2000842c <_wcrtomb_r+0x38>)
20008400:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
20008404:	47a0      	blx	r4
20008406:	1c43      	adds	r3, r0, #1
20008408:	d00a      	beq.n	20008420 <_wcrtomb_r+0x2c>
2000840a:	b004      	add	sp, #16
2000840c:	bd70      	pop	{r4, r5, r6, pc}
2000840e:	460c      	mov	r4, r1
20008410:	4906      	ldr	r1, [pc, #24]	; (2000842c <_wcrtomb_r+0x38>)
20008412:	4622      	mov	r2, r4
20008414:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
20008418:	a901      	add	r1, sp, #4
2000841a:	47a0      	blx	r4
2000841c:	1c43      	adds	r3, r0, #1
2000841e:	d1f4      	bne.n	2000840a <_wcrtomb_r+0x16>
20008420:	2200      	movs	r2, #0
20008422:	238a      	movs	r3, #138	; 0x8a
20008424:	602a      	str	r2, [r5, #0]
20008426:	6033      	str	r3, [r6, #0]
20008428:	b004      	add	sp, #16
2000842a:	bd70      	pop	{r4, r5, r6, pc}
2000842c:	20009ab4 	.word	0x20009ab4

20008430 <__ascii_wctomb>:
__ascii_wctomb():
20008430:	4603      	mov	r3, r0
20008432:	b149      	cbz	r1, 20008448 <__ascii_wctomb+0x18>
20008434:	2aff      	cmp	r2, #255	; 0xff
20008436:	d802      	bhi.n	2000843e <__ascii_wctomb+0xe>
20008438:	2001      	movs	r0, #1
2000843a:	700a      	strb	r2, [r1, #0]
2000843c:	4770      	bx	lr
2000843e:	228a      	movs	r2, #138	; 0x8a
20008440:	f04f 30ff 	mov.w	r0, #4294967295
20008444:	601a      	str	r2, [r3, #0]
20008446:	4770      	bx	lr
20008448:	4608      	mov	r0, r1
2000844a:	4770      	bx	lr

2000844c <__gedf2>:
__gedf2():
2000844c:	f04f 3cff 	mov.w	ip, #4294967295
20008450:	e006      	b.n	20008460 <__cmpdf2+0x4>
20008452:	bf00      	nop

20008454 <__ledf2>:
__ledf2():
20008454:	f04f 0c01 	mov.w	ip, #1
20008458:	e002      	b.n	20008460 <__cmpdf2+0x4>
2000845a:	bf00      	nop

2000845c <__cmpdf2>:
__nedf2():
2000845c:	f04f 0c01 	mov.w	ip, #1
20008460:	f84d cd04 	str.w	ip, [sp, #-4]!
20008464:	ea4f 0c41 	mov.w	ip, r1, lsl #1
20008468:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
2000846c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
20008470:	bf18      	it	ne
20008472:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
20008476:	d01b      	beq.n	200084b0 <__cmpdf2+0x54>
20008478:	b001      	add	sp, #4
2000847a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
2000847e:	bf0c      	ite	eq
20008480:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
20008484:	ea91 0f03 	teqne	r1, r3
20008488:	bf02      	ittt	eq
2000848a:	ea90 0f02 	teqeq	r0, r2
2000848e:	2000      	moveq	r0, #0
20008490:	4770      	bxeq	lr
20008492:	f110 0f00 	cmn.w	r0, #0
20008496:	ea91 0f03 	teq	r1, r3
2000849a:	bf58      	it	pl
2000849c:	4299      	cmppl	r1, r3
2000849e:	bf08      	it	eq
200084a0:	4290      	cmpeq	r0, r2
200084a2:	bf2c      	ite	cs
200084a4:	17d8      	asrcs	r0, r3, #31
200084a6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
200084aa:	f040 0001 	orr.w	r0, r0, #1
200084ae:	4770      	bx	lr
200084b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
200084b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
200084b8:	d102      	bne.n	200084c0 <__cmpdf2+0x64>
200084ba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
200084be:	d107      	bne.n	200084d0 <__cmpdf2+0x74>
200084c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
200084c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
200084c8:	d1d6      	bne.n	20008478 <__cmpdf2+0x1c>
200084ca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
200084ce:	d0d3      	beq.n	20008478 <__cmpdf2+0x1c>
200084d0:	f85d 0b04 	ldr.w	r0, [sp], #4
200084d4:	4770      	bx	lr
200084d6:	bf00      	nop

200084d8 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
200084d8:	4684      	mov	ip, r0
200084da:	4610      	mov	r0, r2
200084dc:	4662      	mov	r2, ip
200084de:	468c      	mov	ip, r1
200084e0:	4619      	mov	r1, r3
200084e2:	4663      	mov	r3, ip
200084e4:	e000      	b.n	200084e8 <__aeabi_cdcmpeq>
200084e6:	bf00      	nop

200084e8 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
200084e8:	b501      	push	{r0, lr}
200084ea:	f7ff ffb7 	bl	2000845c <__cmpdf2>
200084ee:	2800      	cmp	r0, #0
200084f0:	bf48      	it	mi
200084f2:	f110 0f00 	cmnmi.w	r0, #0
200084f6:	bd01      	pop	{r0, pc}

200084f8 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
200084f8:	f84d ed08 	str.w	lr, [sp, #-8]!
200084fc:	f7ff fff4 	bl	200084e8 <__aeabi_cdcmpeq>
20008500:	bf0c      	ite	eq
20008502:	2001      	moveq	r0, #1
20008504:	2000      	movne	r0, #0
20008506:	f85d fb08 	ldr.w	pc, [sp], #8
2000850a:	bf00      	nop

2000850c <__aeabi_dcmplt>:
__aeabi_dcmplt():
2000850c:	f84d ed08 	str.w	lr, [sp, #-8]!
20008510:	f7ff ffea 	bl	200084e8 <__aeabi_cdcmpeq>
20008514:	bf34      	ite	cc
20008516:	2001      	movcc	r0, #1
20008518:	2000      	movcs	r0, #0
2000851a:	f85d fb08 	ldr.w	pc, [sp], #8
2000851e:	bf00      	nop

20008520 <__aeabi_dcmple>:
__aeabi_dcmple():
20008520:	f84d ed08 	str.w	lr, [sp, #-8]!
20008524:	f7ff ffe0 	bl	200084e8 <__aeabi_cdcmpeq>
20008528:	bf94      	ite	ls
2000852a:	2001      	movls	r0, #1
2000852c:	2000      	movhi	r0, #0
2000852e:	f85d fb08 	ldr.w	pc, [sp], #8
20008532:	bf00      	nop

20008534 <__aeabi_dcmpge>:
__aeabi_dcmpge():
20008534:	f84d ed08 	str.w	lr, [sp, #-8]!
20008538:	f7ff ffce 	bl	200084d8 <__aeabi_cdrcmple>
2000853c:	bf94      	ite	ls
2000853e:	2001      	movls	r0, #1
20008540:	2000      	movhi	r0, #0
20008542:	f85d fb08 	ldr.w	pc, [sp], #8
20008546:	bf00      	nop

20008548 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
20008548:	f84d ed08 	str.w	lr, [sp, #-8]!
2000854c:	f7ff ffc4 	bl	200084d8 <__aeabi_cdrcmple>
20008550:	bf34      	ite	cc
20008552:	2001      	movcc	r0, #1
20008554:	2000      	movcs	r0, #0
20008556:	f85d fb08 	ldr.w	pc, [sp], #8
2000855a:	bf00      	nop

2000855c <__aeabi_dcmpun>:
__unorddf2():
2000855c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
20008560:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
20008564:	d102      	bne.n	2000856c <__aeabi_dcmpun+0x10>
20008566:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
2000856a:	d10a      	bne.n	20008582 <__aeabi_dcmpun+0x26>
2000856c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
20008570:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
20008574:	d102      	bne.n	2000857c <__aeabi_dcmpun+0x20>
20008576:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
2000857a:	d102      	bne.n	20008582 <__aeabi_dcmpun+0x26>
2000857c:	f04f 0000 	mov.w	r0, #0
20008580:	4770      	bx	lr
20008582:	f04f 0001 	mov.w	r0, #1
20008586:	4770      	bx	lr

20008588 <__aeabi_d2iz>:
__aeabi_d2iz():
20008588:	ea4f 0241 	mov.w	r2, r1, lsl #1
2000858c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
20008590:	d215      	bcs.n	200085be <__aeabi_d2iz+0x36>
20008592:	d511      	bpl.n	200085b8 <__aeabi_d2iz+0x30>
20008594:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
20008598:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
2000859c:	d912      	bls.n	200085c4 <__aeabi_d2iz+0x3c>
2000859e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
200085a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
200085a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
200085aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
200085ae:	fa23 f002 	lsr.w	r0, r3, r2
200085b2:	bf18      	it	ne
200085b4:	4240      	negne	r0, r0
200085b6:	4770      	bx	lr
200085b8:	f04f 0000 	mov.w	r0, #0
200085bc:	4770      	bx	lr
200085be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
200085c2:	d105      	bne.n	200085d0 <__aeabi_d2iz+0x48>
200085c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
200085c8:	bf08      	it	eq
200085ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
200085ce:	4770      	bx	lr
200085d0:	f04f 0000 	mov.w	r0, #0
200085d4:	4770      	bx	lr
200085d6:	bf00      	nop

200085d8 <__aeabi_uldivmod>:
__aeabi_uldivmod():
200085d8:	b953      	cbnz	r3, 200085f0 <__aeabi_uldivmod+0x18>
200085da:	b94a      	cbnz	r2, 200085f0 <__aeabi_uldivmod+0x18>
200085dc:	2900      	cmp	r1, #0
200085de:	bf08      	it	eq
200085e0:	2800      	cmpeq	r0, #0
200085e2:	bf1c      	itt	ne
200085e4:	f04f 31ff 	movne.w	r1, #4294967295
200085e8:	f04f 30ff 	movne.w	r0, #4294967295
200085ec:	f000 b96e 	b.w	200088cc <__aeabi_idiv0>
200085f0:	f1ad 0c08 	sub.w	ip, sp, #8
200085f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
200085f8:	f000 f806 	bl	20008608 <__udivmoddi4>
200085fc:	f8dd e004 	ldr.w	lr, [sp, #4]
20008600:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
20008604:	b004      	add	sp, #16
20008606:	4770      	bx	lr

20008608 <__udivmoddi4>:
__udivmoddi4():
20008608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2000860c:	9e08      	ldr	r6, [sp, #32]
2000860e:	460d      	mov	r5, r1
20008610:	4604      	mov	r4, r0
20008612:	468e      	mov	lr, r1
20008614:	2b00      	cmp	r3, #0
20008616:	f040 8083 	bne.w	20008720 <__udivmoddi4+0x118>
2000861a:	428a      	cmp	r2, r1
2000861c:	4617      	mov	r7, r2
2000861e:	d947      	bls.n	200086b0 <__udivmoddi4+0xa8>
20008620:	fab2 f382 	clz	r3, r2
20008624:	b14b      	cbz	r3, 2000863a <__udivmoddi4+0x32>
20008626:	f1c3 0120 	rsb	r1, r3, #32
2000862a:	fa05 fe03 	lsl.w	lr, r5, r3
2000862e:	fa20 f101 	lsr.w	r1, r0, r1
20008632:	409f      	lsls	r7, r3
20008634:	ea41 0e0e 	orr.w	lr, r1, lr
20008638:	409c      	lsls	r4, r3
2000863a:	ea4f 4817 	mov.w	r8, r7, lsr #16
2000863e:	fbbe fcf8 	udiv	ip, lr, r8
20008642:	fa1f f987 	uxth.w	r9, r7
20008646:	fb08 e21c 	mls	r2, r8, ip, lr
2000864a:	fb0c f009 	mul.w	r0, ip, r9
2000864e:	0c21      	lsrs	r1, r4, #16
20008650:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
20008654:	4290      	cmp	r0, r2
20008656:	d90a      	bls.n	2000866e <__udivmoddi4+0x66>
20008658:	18ba      	adds	r2, r7, r2
2000865a:	f10c 31ff 	add.w	r1, ip, #4294967295
2000865e:	f080 8118 	bcs.w	20008892 <__udivmoddi4+0x28a>
20008662:	4290      	cmp	r0, r2
20008664:	f240 8115 	bls.w	20008892 <__udivmoddi4+0x28a>
20008668:	f1ac 0c02 	sub.w	ip, ip, #2
2000866c:	443a      	add	r2, r7
2000866e:	1a12      	subs	r2, r2, r0
20008670:	fbb2 f0f8 	udiv	r0, r2, r8
20008674:	fb08 2210 	mls	r2, r8, r0, r2
20008678:	fb00 f109 	mul.w	r1, r0, r9
2000867c:	b2a4      	uxth	r4, r4
2000867e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
20008682:	42a1      	cmp	r1, r4
20008684:	d909      	bls.n	2000869a <__udivmoddi4+0x92>
20008686:	193c      	adds	r4, r7, r4
20008688:	f100 32ff 	add.w	r2, r0, #4294967295
2000868c:	f080 8103 	bcs.w	20008896 <__udivmoddi4+0x28e>
20008690:	42a1      	cmp	r1, r4
20008692:	f240 8100 	bls.w	20008896 <__udivmoddi4+0x28e>
20008696:	3802      	subs	r0, #2
20008698:	443c      	add	r4, r7
2000869a:	1a64      	subs	r4, r4, r1
2000869c:	2100      	movs	r1, #0
2000869e:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
200086a2:	b11e      	cbz	r6, 200086ac <__udivmoddi4+0xa4>
200086a4:	2200      	movs	r2, #0
200086a6:	40dc      	lsrs	r4, r3
200086a8:	e9c6 4200 	strd	r4, r2, [r6]
200086ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
200086b0:	b902      	cbnz	r2, 200086b4 <__udivmoddi4+0xac>
200086b2:	deff      	udf	#255	; 0xff
200086b4:	fab2 f382 	clz	r3, r2
200086b8:	2b00      	cmp	r3, #0
200086ba:	d14f      	bne.n	2000875c <__udivmoddi4+0x154>
200086bc:	1a8d      	subs	r5, r1, r2
200086be:	2101      	movs	r1, #1
200086c0:	ea4f 4e12 	mov.w	lr, r2, lsr #16
200086c4:	fa1f f882 	uxth.w	r8, r2
200086c8:	fbb5 fcfe 	udiv	ip, r5, lr
200086cc:	fb0e 551c 	mls	r5, lr, ip, r5
200086d0:	fb08 f00c 	mul.w	r0, r8, ip
200086d4:	0c22      	lsrs	r2, r4, #16
200086d6:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
200086da:	42a8      	cmp	r0, r5
200086dc:	d907      	bls.n	200086ee <__udivmoddi4+0xe6>
200086de:	197d      	adds	r5, r7, r5
200086e0:	f10c 32ff 	add.w	r2, ip, #4294967295
200086e4:	d202      	bcs.n	200086ec <__udivmoddi4+0xe4>
200086e6:	42a8      	cmp	r0, r5
200086e8:	f200 80e9 	bhi.w	200088be <__udivmoddi4+0x2b6>
200086ec:	4694      	mov	ip, r2
200086ee:	1a2d      	subs	r5, r5, r0
200086f0:	fbb5 f0fe 	udiv	r0, r5, lr
200086f4:	fb0e 5510 	mls	r5, lr, r0, r5
200086f8:	fb08 f800 	mul.w	r8, r8, r0
200086fc:	b2a4      	uxth	r4, r4
200086fe:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
20008702:	45a0      	cmp	r8, r4
20008704:	d907      	bls.n	20008716 <__udivmoddi4+0x10e>
20008706:	193c      	adds	r4, r7, r4
20008708:	f100 32ff 	add.w	r2, r0, #4294967295
2000870c:	d202      	bcs.n	20008714 <__udivmoddi4+0x10c>
2000870e:	45a0      	cmp	r8, r4
20008710:	f200 80d9 	bhi.w	200088c6 <__udivmoddi4+0x2be>
20008714:	4610      	mov	r0, r2
20008716:	eba4 0408 	sub.w	r4, r4, r8
2000871a:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
2000871e:	e7c0      	b.n	200086a2 <__udivmoddi4+0x9a>
20008720:	428b      	cmp	r3, r1
20008722:	d908      	bls.n	20008736 <__udivmoddi4+0x12e>
20008724:	2e00      	cmp	r6, #0
20008726:	f000 80b1 	beq.w	2000888c <__udivmoddi4+0x284>
2000872a:	2100      	movs	r1, #0
2000872c:	e9c6 0500 	strd	r0, r5, [r6]
20008730:	4608      	mov	r0, r1
20008732:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
20008736:	fab3 f183 	clz	r1, r3
2000873a:	2900      	cmp	r1, #0
2000873c:	d14b      	bne.n	200087d6 <__udivmoddi4+0x1ce>
2000873e:	42ab      	cmp	r3, r5
20008740:	d302      	bcc.n	20008748 <__udivmoddi4+0x140>
20008742:	4282      	cmp	r2, r0
20008744:	f200 80b9 	bhi.w	200088ba <__udivmoddi4+0x2b2>
20008748:	1a84      	subs	r4, r0, r2
2000874a:	eb65 0303 	sbc.w	r3, r5, r3
2000874e:	2001      	movs	r0, #1
20008750:	469e      	mov	lr, r3
20008752:	2e00      	cmp	r6, #0
20008754:	d0aa      	beq.n	200086ac <__udivmoddi4+0xa4>
20008756:	e9c6 4e00 	strd	r4, lr, [r6]
2000875a:	e7a7      	b.n	200086ac <__udivmoddi4+0xa4>
2000875c:	409f      	lsls	r7, r3
2000875e:	f1c3 0220 	rsb	r2, r3, #32
20008762:	40d1      	lsrs	r1, r2
20008764:	ea4f 4e17 	mov.w	lr, r7, lsr #16
20008768:	fbb1 f0fe 	udiv	r0, r1, lr
2000876c:	fa1f f887 	uxth.w	r8, r7
20008770:	fb0e 1110 	mls	r1, lr, r0, r1
20008774:	fa24 f202 	lsr.w	r2, r4, r2
20008778:	409d      	lsls	r5, r3
2000877a:	fb00 fc08 	mul.w	ip, r0, r8
2000877e:	432a      	orrs	r2, r5
20008780:	0c15      	lsrs	r5, r2, #16
20008782:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
20008786:	45ac      	cmp	ip, r5
20008788:	fa04 f403 	lsl.w	r4, r4, r3
2000878c:	d909      	bls.n	200087a2 <__udivmoddi4+0x19a>
2000878e:	197d      	adds	r5, r7, r5
20008790:	f100 31ff 	add.w	r1, r0, #4294967295
20008794:	f080 808f 	bcs.w	200088b6 <__udivmoddi4+0x2ae>
20008798:	45ac      	cmp	ip, r5
2000879a:	f240 808c 	bls.w	200088b6 <__udivmoddi4+0x2ae>
2000879e:	3802      	subs	r0, #2
200087a0:	443d      	add	r5, r7
200087a2:	eba5 050c 	sub.w	r5, r5, ip
200087a6:	fbb5 f1fe 	udiv	r1, r5, lr
200087aa:	fb0e 5c11 	mls	ip, lr, r1, r5
200087ae:	fb01 f908 	mul.w	r9, r1, r8
200087b2:	b295      	uxth	r5, r2
200087b4:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
200087b8:	45a9      	cmp	r9, r5
200087ba:	d907      	bls.n	200087cc <__udivmoddi4+0x1c4>
200087bc:	197d      	adds	r5, r7, r5
200087be:	f101 32ff 	add.w	r2, r1, #4294967295
200087c2:	d274      	bcs.n	200088ae <__udivmoddi4+0x2a6>
200087c4:	45a9      	cmp	r9, r5
200087c6:	d972      	bls.n	200088ae <__udivmoddi4+0x2a6>
200087c8:	3902      	subs	r1, #2
200087ca:	443d      	add	r5, r7
200087cc:	eba5 0509 	sub.w	r5, r5, r9
200087d0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
200087d4:	e778      	b.n	200086c8 <__udivmoddi4+0xc0>
200087d6:	f1c1 0720 	rsb	r7, r1, #32
200087da:	408b      	lsls	r3, r1
200087dc:	fa22 fc07 	lsr.w	ip, r2, r7
200087e0:	ea4c 0c03 	orr.w	ip, ip, r3
200087e4:	fa25 f407 	lsr.w	r4, r5, r7
200087e8:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
200087ec:	fbb4 f9fe 	udiv	r9, r4, lr
200087f0:	fa1f f88c 	uxth.w	r8, ip
200087f4:	fb0e 4419 	mls	r4, lr, r9, r4
200087f8:	fa20 f307 	lsr.w	r3, r0, r7
200087fc:	fb09 fa08 	mul.w	sl, r9, r8
20008800:	408d      	lsls	r5, r1
20008802:	431d      	orrs	r5, r3
20008804:	0c2b      	lsrs	r3, r5, #16
20008806:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
2000880a:	45a2      	cmp	sl, r4
2000880c:	fa02 f201 	lsl.w	r2, r2, r1
20008810:	fa00 f301 	lsl.w	r3, r0, r1
20008814:	d909      	bls.n	2000882a <__udivmoddi4+0x222>
20008816:	eb1c 0404 	adds.w	r4, ip, r4
2000881a:	f109 30ff 	add.w	r0, r9, #4294967295
2000881e:	d248      	bcs.n	200088b2 <__udivmoddi4+0x2aa>
20008820:	45a2      	cmp	sl, r4
20008822:	d946      	bls.n	200088b2 <__udivmoddi4+0x2aa>
20008824:	f1a9 0902 	sub.w	r9, r9, #2
20008828:	4464      	add	r4, ip
2000882a:	eba4 040a 	sub.w	r4, r4, sl
2000882e:	fbb4 f0fe 	udiv	r0, r4, lr
20008832:	fb0e 4410 	mls	r4, lr, r0, r4
20008836:	fb00 fa08 	mul.w	sl, r0, r8
2000883a:	b2ad      	uxth	r5, r5
2000883c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
20008840:	45a2      	cmp	sl, r4
20008842:	d908      	bls.n	20008856 <__udivmoddi4+0x24e>
20008844:	eb1c 0404 	adds.w	r4, ip, r4
20008848:	f100 35ff 	add.w	r5, r0, #4294967295
2000884c:	d22d      	bcs.n	200088aa <__udivmoddi4+0x2a2>
2000884e:	45a2      	cmp	sl, r4
20008850:	d92b      	bls.n	200088aa <__udivmoddi4+0x2a2>
20008852:	3802      	subs	r0, #2
20008854:	4464      	add	r4, ip
20008856:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
2000885a:	fba0 8902 	umull	r8, r9, r0, r2
2000885e:	eba4 040a 	sub.w	r4, r4, sl
20008862:	454c      	cmp	r4, r9
20008864:	46c6      	mov	lr, r8
20008866:	464d      	mov	r5, r9
20008868:	d319      	bcc.n	2000889e <__udivmoddi4+0x296>
2000886a:	d016      	beq.n	2000889a <__udivmoddi4+0x292>
2000886c:	b15e      	cbz	r6, 20008886 <__udivmoddi4+0x27e>
2000886e:	ebb3 020e 	subs.w	r2, r3, lr
20008872:	eb64 0405 	sbc.w	r4, r4, r5
20008876:	fa04 f707 	lsl.w	r7, r4, r7
2000887a:	fa22 f301 	lsr.w	r3, r2, r1
2000887e:	431f      	orrs	r7, r3
20008880:	40cc      	lsrs	r4, r1
20008882:	e9c6 7400 	strd	r7, r4, [r6]
20008886:	2100      	movs	r1, #0
20008888:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2000888c:	4631      	mov	r1, r6
2000888e:	4630      	mov	r0, r6
20008890:	e70c      	b.n	200086ac <__udivmoddi4+0xa4>
20008892:	468c      	mov	ip, r1
20008894:	e6eb      	b.n	2000866e <__udivmoddi4+0x66>
20008896:	4610      	mov	r0, r2
20008898:	e6ff      	b.n	2000869a <__udivmoddi4+0x92>
2000889a:	4543      	cmp	r3, r8
2000889c:	d2e6      	bcs.n	2000886c <__udivmoddi4+0x264>
2000889e:	ebb8 0e02 	subs.w	lr, r8, r2
200088a2:	eb69 050c 	sbc.w	r5, r9, ip
200088a6:	3801      	subs	r0, #1
200088a8:	e7e0      	b.n	2000886c <__udivmoddi4+0x264>
200088aa:	4628      	mov	r0, r5
200088ac:	e7d3      	b.n	20008856 <__udivmoddi4+0x24e>
200088ae:	4611      	mov	r1, r2
200088b0:	e78c      	b.n	200087cc <__udivmoddi4+0x1c4>
200088b2:	4681      	mov	r9, r0
200088b4:	e7b9      	b.n	2000882a <__udivmoddi4+0x222>
200088b6:	4608      	mov	r0, r1
200088b8:	e773      	b.n	200087a2 <__udivmoddi4+0x19a>
200088ba:	4608      	mov	r0, r1
200088bc:	e749      	b.n	20008752 <__udivmoddi4+0x14a>
200088be:	f1ac 0c02 	sub.w	ip, ip, #2
200088c2:	443d      	add	r5, r7
200088c4:	e713      	b.n	200086ee <__udivmoddi4+0xe6>
200088c6:	3802      	subs	r0, #2
200088c8:	443c      	add	r4, r7
200088ca:	e724      	b.n	20008716 <__udivmoddi4+0x10e>

200088cc <__aeabi_idiv0>:
__aeabi_idiv0():
200088cc:	4770      	bx	lr
200088ce:	bf00      	nop

200088d0 <g_m2s_mddr_addr>:
200088d0:	0800 4002                                   ...@

200088d4 <g_m2s_mddr_subsys_config>:
200088d4:	0000 0000 1108 0290 0002 0000 0001 099f     ................
200088e4:	0000 3333 ffff 7777 0fff 0001 4200 0008     ..33..ww.....B..
200088f4:	0953 0044 0000 0000 0280 0065 01e5 0002     S.D.......e.....
20008904:	0028 0178 0023 0d33 0004 0000 3300 0000     (.x.#.3......3..
20008914:	0000 040c 0000 0000 0000 0002 0000 4080     ...............@
20008924:	80f8 0007 80f8 0007 0200 0000 0000 0004     ................
20008934:	0003 0040 0000 0000 0000 0000 0309 0001     ..@.............
20008944:	0000 0000 0000 0080 0000 0000 0003 0000     ................
	...
2000895c:	000b 0000 0000 0000 0000 0080 2004 0100     ............. ..
2000896c:	0008 0000 0000 0000 0000 0000 0001 0000     ................
	...
20008984:	4050 0501 5014 0000 0008 0018 0000 0005     P@...P..........
	...
200089a4:	0050 0501 5010 0000 0000 0000 0000 0000     P....P..........
200089b4:	0000 0043 0000 0003 0001 0001 0000 0000     ..C.............
200089c4:	0000 0001 0000 0000 0000 0000 0000 0000     ................
	...
200089e0:	0100 0100 0202 0303 6548 7061 6120 646e     ........Heap and
200089f0:	7320 6174 6b63 6320 6c6f 696c 6973 6e6f      stack collision
20008a00:	000a 0000 754f 2074 666f 6820 6165 2070     ....Out of heap 
20008a10:	656d 6f6d 7972 000a 0a0a 3c0a 203c 6d53     memory.....<< Sm
20008a20:	7261 6674 7375 6f69 326e 2020 6d59 646f     artfusion2  Ymod
20008a30:	6d65 4220 6f6f 6c74 616f 6564 2072 3e3e     em Bootloader >>
20008a40:	0a0a 0000 0a0d 5243 4145 4954 4556 422d     ......CREATIVE-B
20008a50:	4452 003e 0a0d 4520 746e 7265 7420 6568     RD>... Enter the
20008a60:	4620 6c69 2065 6e69 6564 2078 6f74 4420      File index to D
20008a70:	7369 6c70 7961 6320 6e6f 6574 746e 003a     isplay content:.
20008a80:	0a0d 7520 6c70 616f 2064 2061 6220 6e69     .. upload a  bin
20008a90:	7261 2079 6966 656c 7420 206f 7865 6365     ary file to exec
20008aa0:	7475 2065 7266 6d6f 6420 7264 0000 0000     ute from ddr....
20008ab0:	7641 6961 616c 6c62 2065 4d43 7344 0a3a     Available CMDs:.
20008ac0:	6820 203a 6548 706c 200a 3a69 4920 696e      h: Help. i: Ini
20008ad0:	6974 6c61 7a69 2065 6874 2065 6946 656c     tialize the File
20008ae0:	7320 7379 6574 3a6d 6420 6c65 7465 2065      system: delete 
20008af0:	6c61 206c 6e65 7274 6569 0a73 7520 203a     all entries. u: 
20008b00:	7055 6f6c 6461 6220 6e69 7261 2079 6966     Upload binary fi
20008b10:	656c 7620 6169 5920 6f6d 6564 206d 7250     le via Ymodem Pr
20008b20:	746f 636f 6c6f 200a 3a64 4420 7369 6c70     otocol. d: Displ
20008b30:	7961 5320 4950 4620 616c 6873 4420 7269     ay SPI Flash Dir
20008b40:	6365 6f74 7972 6120 646e 4620 6c69 2065     ectory and File 
20008b50:	6e69 6820 7865 7620 6569 0a77 6c20 203a     in hex view. l: 
20008b60:	694c 7473 5420 6568 4620 6c69 2065 7973     List The File sy
20008b70:	7473 6d65 4420 7269 6365 6f74 7972 000a     stem Directory..
20008b80:	0a0d 7250 676f 6172 6d6d 6e69 2067 4320     ..Programming  C
20008b90:	6d6f 6c70 7465 6465 0d20 000a 0a0d 4520     ompleted ..... E
20008ba0:	6172 6973 676e 5320 6365 6f74 2072 2040     rasing Sector @ 
20008bb0:	0000 0000 0a0d 7250 676f 6172 6d6d 6e69     ......Programmin
20008bc0:	2067 6f43 706d 656c 6574 2064 0a0d 3a20     g Completed .. :
20008bd0:	0000 0000 0a0d 4e20 6d75 6562 2072 666f     ...... Number of
20008be0:	7320 6365 6f74 7372 7420 206f 6562 6520      sectors to be e
20008bf0:	6172 6573 2064 203a 0020 0000 0a0d 4520     rased :  ..... E
20008c00:	6172 6973 676e 4320 6d6f 6c70 7465 6465     rasing Completed
20008c10:	0d20 200a 003a 0000 0d20 490a 6364 646f      .. :... ..Idcod
20008c20:	2065 203a 0000 0000 2c20 4420 7665 6369     e : .... , Devic
20008c30:	2065 4449 2020 203a 0000 0000 0a0d 6f4e     e ID  : ......No
20008c40:	7620 6c61 6469 4620 6c69 2065 6f46 6e75      valid File Foun
20008c50:	2064 6e69 7420 6568 7320 6970 6620 6c69     d in the spi fil
20008c60:	2065 6964 6572 7463 726f 0079 0a0d 5053     e directory...SP
20008c70:	2049 6c46 7361 2068 6944 6572 7463 726f     I Flash Director
20008c80:	3a79 0000 530d 4950 4620 616c 6873 4620     y:...SPI Flash F
20008c90:	6c69 2065 6f43 6e75 2074 203a 6425 000a     ile Count : %d..
20008ca0:	530d 4950 4620 616c 6873 4e20 7865 2074     .SPI Flash Next 
20008cb0:	6441 7264 2020 203a 7830 2d25 3231 0a58     Addr  : 0x%-12X.
20008cc0:	0000 0000 530d 4950 4620 616c 6873 6920     .....SPI Flash i
20008cd0:	696e 2074 6c66 6761 2020 203a 7830 2d25     nit flag  : 0x%-
20008ce0:	3231 0a58 0000 0000 2d0d 2d2d 2d2d 2d2d     12X......-------
20008cf0:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
20008d00:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
20008d10:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
20008d20:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
20008d30:	2d2d 2d2d 002d 0000 6953 657a 2820 424b     -----...Size (KB
20008d40:	0029 0000 6946 656c 4e20 6d61 0065 0000     )...File Name...
20008d50:	0023 0000 7c0d 2520 342d 2073 207c 2d25     #....| %-4s | %-
20008d60:	3433 2073 207c 2d25 3031 2073 207c 2d25     34s | %-10s | %-
20008d70:	3231 2073 0a7c 0000 6441 7264 4f20 6666     12s |...Addr Off
20008d80:	6573 0074 7c0d 2520 342d 2064 207c 2d25     set..| %-4d | %-
20008d90:	3433 2073 7c20 2020 3125 2e30 6632 207c     34s  |  %10.2f| 
20008da0:	7830 2d25 3031 2058 0a7c 0000 530d 4950     0x%-10X |....SPI
20008db0:	4420 7269 6365 6f74 7972 6e20 746f 6920      Directory not i
20008dc0:	696e 6974 6c61 7369 6465 0000 530d 4950     nitialised...SPI
20008dd0:	4420 7269 6365 6f74 7972 6920 2073 6e69      Directory is in
20008de0:	7469 6169 696c 6573 2064 6e61 2064 6f6c     itialised and lo
20008df0:	6461 6465 0000 0000 530d 4950 4620 6c69     aded.....SPI Fil
20008e00:	2065 7953 7473 6d65 5220 6965 696e 6974     e System Reiniti
20008e10:	6c61 7a69 6465 0000 0a0d 2d2d 2d2d 2d2d     alized....------
20008e20:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
20008e30:	2d2d 5320 6174 7472 6e69 2067 4d59 646f     -- Starting YMod
20008e40:	6d65 6620 6c69 2065 7274 6e61 6673 7265     em file transfer
20008e50:	2d20 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d      ---------------
20008e60:	2d2d 2d2d 2d2d 2d2d 0d2d 000a 6c50 6165     ---------...Plea
20008e70:	6573 7320 6c65 6365 2074 6966 656c 6120     se select file a
20008e80:	646e 6920 696e 6974 7461 2065 7274 6e61     nd initiate tran
20008e90:	6673 7265 6f20 206e 6f68 7473 6320 6d6f     sfer on host com
20008ea0:	7570 6574 2e72 0a0d 0000 0000 6946 656c     puter.......File
20008eb0:	7220 6365 6965 6576 3a64 0a20 0000 0000      received: .....
20008ec0:	0a0d 4620 6c69 2065 6544 6174 6c69 3a73     .. File Details:
20008ed0:	0000 0000 7c0d 2520 332d 7330 7c20 2520     .....| %-30s | %
20008ee0:	3031 322e 6b66 2062 207c 7830 2d25 3231     10.2fkb | 0x%-12
20008ef0:	2058 0a7c 0000 0000 250d 332d 7330 2520     X |......%-30s %
20008f00:	3031 2075 3020 2578 382d 0a58 0000 0000     10u  0x%-8X.....
20008f10:	7830 0000 0a0d 0020 0020 0000               0x.... . ...

20008f1c <hex_symbols.5042>:
20008f1c:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF

20008f2c <hex_symbols.5084>:
20008f2c:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
20008f3c:	0a0d 2020 2020 2020 2020 2020 2020 0020     ..             .
20008f4c:	0020 0000 2020 0000 207c 0000 0a0d 0000      ...  ..| ......
20008f5c:	0a0d 0020 0a0d 7020 6572 7373 6120 796e     .. ... press any
20008f6c:	6b20 7965 7420 206f 6f63 746e 6e69 6575      key to continue
20008f7c:	6f20 2072 7827 2027 6f74 6520 6978 0074      or 'x' to exit.

20008f8c <_global_impure_ptr>:
20008f8c:	9278 2000 000a 0000 4e49 0046 6e69 0066     x.. ....INF.inf.
20008f9c:	414e 004e 616e 006e 3130 3332 3534 3736     NAN.nan.01234567
20008fac:	3938 6261 6463 6665 0000 0000 3130 3332     89abcdef....0123
20008fbc:	3534 3736 3938 4241 4443 4645 0000 0000     456789ABCDEF....
20008fcc:	6e28 6c75 296c 0000 0030 0000               (null)..0...

20008fd8 <blanks.7366>:
20008fd8:	2020 2020 2020 2020 2020 2020 2020 2020                     

20008fe8 <zeroes.7367>:
20008fe8:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20008ff8:	614e 004e 6e49 6966 696e 7974 0000 0000     NaN.Infinity....

20009008 <__mprec_bigtens>:
20009008:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
20009018:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
20009028:	bf3c 7f73 4fdd 7515                         <.s..O.u

20009030 <__mprec_tens>:
20009030:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
20009040:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
20009050:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
20009060:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
20009070:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
20009080:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
20009090:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
200090a0:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
200090b0:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
200090c0:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
200090d0:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
200090e0:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
200090f0:	9db4 79d9 7843 44ea                         ...yCx.D

200090f8 <p05.6115>:
200090f8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
20009108:	4f50 4953 0058 0000 002e 0000               POSIX.......

20009114 <_ctype_>:
20009114:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
20009124:	2020 2020 2020 2020 2020 2020 2020 2020                     
20009134:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
20009144:	0410 0404 0404 0404 0404 1004 1010 1010     ................
20009154:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
20009164:	0101 0101 0101 0101 0101 0101 1010 1010     ................
20009174:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
20009184:	0202 0202 0202 0202 0202 0202 1010 1010     ................
20009194:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

20009218 <_init>:
_init():
20009218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2000921a:	bf00      	nop
2000921c:	bcf8      	pop	{r3, r4, r5, r6, r7}
2000921e:	bc08      	pop	{r3}
20009220:	469e      	mov	lr, r3
20009222:	4770      	bx	lr

20009224 <_fini>:
_fini():
20009224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20009226:	bf00      	nop
20009228:	bcf8      	pop	{r3, r4, r5, r6, r7}
2000922a:	bc08      	pop	{r3}
2000922c:	469e      	mov	lr, r3
2000922e:	4770      	bx	lr

20009230 <__init_array_start>:
__preinit_array_start():
20009230:	2000538d 	.word	0x2000538d

20009234 <__frame_dummy_init_array_entry>:
20009234:	200004d5                                ... 

20009238 <__do_global_dtors_aux_fini_array_entry>:
__init_array_end():
20009238:	200004b1                                ... 

2000923c <__fini_array_end>:
__fini_array_end():
2000923c:	00000000 	.word	0x00000000
